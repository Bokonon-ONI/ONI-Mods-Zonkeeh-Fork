Shader "Klei/Liquid" {
	Properties {
		_BlendScreen ("blend screen", Range(0, 1)) = 1
		_LiquidSelectStart ("liquid start", Range(0, 1)) = 0.438
		_LiquidSelectRangeNear ("liquid range near", Range(0, 1)) = 0.438
		_LiquidSelectRangeFar ("liquid range far", Range(0, 1)) = 0.438
		_LiquidSelectRangeNearOrthoSize ("liquid range near ortho size", Range(0, 200)) = 0.438
		_LiquidSelectRangeFarOrthoSize ("liquid range far ortho size", Range(0, 200)) = 0.438
		[Header(Sample Filtering)] [KeywordEnum(Bicubic Hermite, Bilinear, None)] _SampleFiltering ("SampleFiltering", Float) = 0
		[Header(Caustics)] [Toggle(ENABLE_CAUSTIC)] _EnableCaustics ("Enable Caustics", Float) = 1
		_CausticSpeed ("caustic speed", Range(0, 10)) = 1.21
		_CausticFrequency ("caustic frequency", Range(0, 2)) = 0.5
		_CausticCount ("caustic count", Range(2, 10)) = 5
		_CausticScale ("caustic scale", Range(0, 10)) = 1.4
		[Header(Heat Haze)] [Toggle(ENABLE_HEAT_HAZE)] _EnableHeatHaze ("Enable Heat Haze", Float) = 1
		_HeatOctaves ("heat octave count", Range(1, 5)) = 5
		_HeatSpeed ("heat speed", Range(0, 10)) = 3.8
		_HeatFrequency ("heat frequency", Range(0, 2)) = 0.45
		_HeatScale ("heat scale", Range(0, 2)) = 2
		_HeatColour ("heat colour", Vector) = (1,0.913725,0.5529411,1)
		[Header(Surface Waves)] [Toggle(ENABLE_WAVE)] _EnableWaves ("Enable Waves", Float) = 1
		_WaveSpeed ("wave speed", Range(0, 10)) = 1
		_WaveFrequency ("wave frequency", Range(0, 10)) = 1
		_WaveCount ("wave count", Range(2, 10)) = 5
		_WaveHeight ("wave height", Range(0, 20)) = 5
	}
	SubShader {
		Tags { "IGNOREPROJECTOR" = "true" "PreviewType" = "Plane" "QUEUE" = "Transparent" }
		Pass {
			Tags { "IGNOREPROJECTOR" = "true" "PreviewType" = "Plane" "QUEUE" = "Transparent" }
			Blend SrcAlpha OneMinusSrcAlpha, SrcAlpha OneMinusSrcAlpha
			ZWrite Off
			Cull Off
			Stencil {
				Ref 1
				Comp NotEqual
				Pass Keep
				Fail Keep
				ZFail Keep
			}
			GpuProgramID 48921
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "_SAMPLEFILTERING_BICUBIC_HERMITE" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xy
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o1.xyz, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					mul o3.xy, r0.xyxx, cb0[15].zwzz
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul o2.xyz, r0.xxxx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_SAMPLEFILTERING_BILINEAR" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xy
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o1.xyz, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					mul o3.xy, r0.xyxx, cb0[15].zwzz
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul o2.xyz, r0.xxxx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_SAMPLEFILTERING_NONE" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xy
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o1.xyz, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					mul o3.xy, r0.xyxx, cb0[15].zwzz
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul o2.xyz, r0.xxxx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "ENABLE_WAVE" "_SAMPLEFILTERING_BICUBIC_HERMITE" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xy
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o1.xyz, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					mul o3.xy, r0.xyxx, cb0[15].zwzz
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul o2.xyz, r0.xxxx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "ENABLE_WAVE" "_SAMPLEFILTERING_BILINEAR" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xy
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o1.xyz, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					mul o3.xy, r0.xyxx, cb0[15].zwzz
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul o2.xyz, r0.xxxx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "ENABLE_WAVE" "_SAMPLEFILTERING_NONE" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xy
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o1.xyz, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					mul o3.xy, r0.xyxx, cb0[15].zwzz
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul o2.xyz, r0.xxxx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "ENABLE_CAUSTIC" "_SAMPLEFILTERING_BICUBIC_HERMITE" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xy
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o1.xyz, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					mul o3.xy, r0.xyxx, cb0[15].zwzz
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul o2.xyz, r0.xxxx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "ENABLE_CAUSTIC" "_SAMPLEFILTERING_BILINEAR" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xy
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o1.xyz, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					mul o3.xy, r0.xyxx, cb0[15].zwzz
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul o2.xyz, r0.xxxx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "ENABLE_CAUSTIC" "_SAMPLEFILTERING_NONE" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xy
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o1.xyz, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					mul o3.xy, r0.xyxx, cb0[15].zwzz
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul o2.xyz, r0.xxxx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "ENABLE_CAUSTIC" "ENABLE_WAVE" "_SAMPLEFILTERING_BICUBIC_HERMITE" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xy
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o1.xyz, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					mul o3.xy, r0.xyxx, cb0[15].zwzz
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul o2.xyz, r0.xxxx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "ENABLE_CAUSTIC" "ENABLE_WAVE" "_SAMPLEFILTERING_BILINEAR" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xy
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o1.xyz, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					mul o3.xy, r0.xyxx, cb0[15].zwzz
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul o2.xyz, r0.xxxx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "ENABLE_CAUSTIC" "ENABLE_WAVE" "_SAMPLEFILTERING_NONE" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xy
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o1.xyz, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					mul o3.xy, r0.xyxx, cb0[15].zwzz
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul o2.xyz, r0.xxxx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "ENABLE_HEAT_HAZE" "_SAMPLEFILTERING_BICUBIC_HERMITE" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xy
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o1.xyz, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					mul o3.xy, r0.xyxx, cb0[15].zwzz
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul o2.xyz, r0.xxxx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "ENABLE_HEAT_HAZE" "_SAMPLEFILTERING_BILINEAR" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xy
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o1.xyz, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					mul o3.xy, r0.xyxx, cb0[15].zwzz
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul o2.xyz, r0.xxxx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "ENABLE_HEAT_HAZE" "_SAMPLEFILTERING_NONE" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xy
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o1.xyz, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					mul o3.xy, r0.xyxx, cb0[15].zwzz
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul o2.xyz, r0.xxxx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "ENABLE_HEAT_HAZE" "ENABLE_WAVE" "_SAMPLEFILTERING_BICUBIC_HERMITE" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xy
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o1.xyz, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					mul o3.xy, r0.xyxx, cb0[15].zwzz
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul o2.xyz, r0.xxxx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "ENABLE_HEAT_HAZE" "ENABLE_WAVE" "_SAMPLEFILTERING_BILINEAR" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xy
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o1.xyz, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					mul o3.xy, r0.xyxx, cb0[15].zwzz
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul o2.xyz, r0.xxxx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "ENABLE_HEAT_HAZE" "ENABLE_WAVE" "_SAMPLEFILTERING_NONE" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xy
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o1.xyz, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					mul o3.xy, r0.xyxx, cb0[15].zwzz
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul o2.xyz, r0.xxxx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "ENABLE_HEAT_HAZE" "ENABLE_CAUSTIC" "_SAMPLEFILTERING_BICUBIC_HERMITE" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xy
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o1.xyz, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					mul o3.xy, r0.xyxx, cb0[15].zwzz
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul o2.xyz, r0.xxxx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "ENABLE_HEAT_HAZE" "ENABLE_CAUSTIC" "_SAMPLEFILTERING_BILINEAR" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xy
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o1.xyz, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					mul o3.xy, r0.xyxx, cb0[15].zwzz
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul o2.xyz, r0.xxxx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "ENABLE_HEAT_HAZE" "ENABLE_CAUSTIC" "_SAMPLEFILTERING_NONE" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xy
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o1.xyz, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					mul o3.xy, r0.xyxx, cb0[15].zwzz
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul o2.xyz, r0.xxxx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "ENABLE_HEAT_HAZE" "ENABLE_CAUSTIC" "ENABLE_WAVE" "_SAMPLEFILTERING_BICUBIC_HERMITE" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xy
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o1.xyz, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					mul o3.xy, r0.xyxx, cb0[15].zwzz
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul o2.xyz, r0.xxxx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "ENABLE_HEAT_HAZE" "ENABLE_CAUSTIC" "ENABLE_WAVE" "_SAMPLEFILTERING_BILINEAR" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xy
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o1.xyz, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					mul o3.xy, r0.xyxx, cb0[15].zwzz
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul o2.xyz, r0.xxxx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "ENABLE_HEAT_HAZE" "ENABLE_CAUSTIC" "ENABLE_WAVE" "_SAMPLEFILTERING_NONE" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xy
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o1.xyz, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					mul o3.xy, r0.xyxx, cb0[15].zwzz
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul o2.xyz, r0.xxxx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "_SAMPLEFILTERING_BICUBIC_HERMITE" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v3.xy
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_temps 22
					div r0.xy, v3.xyxx, cb0[15].zwzz
					add r0.xy, r0.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
					round_ni r0.zw, r0.xxxy
					frc r0.xy, r0.xyxx
					add r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
					mad r1.xy, r0.zwzz, cb0[15].zwzz, -cb0[15].zwzz
					sample r2.xyzw, r1.xyxx, t1.xyzw, s1
					sample r1.xyzw, r1.xyxx, t0.xyzw, s0
					mul r3.xy, r0.zwzz, cb0[15].zwzz
					mad r0.zw, r0.zzzw, cb0[15].zzzw, cb0[15].zzzw
					mad r4.xyzw, cb0[15].zwzw, l(0.000000, -1.000000, 1.000000, -1.000000), r3.xyxy
					sample r5.xyzw, r4.xyxx, t1.xyzw, s1
					mad r6.xyz, r5.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), -r2.xyzx
					sample r7.xyzw, r4.zwzz, t1.xyzw, s1
					mad r6.xyz, -r7.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), r6.xyzx
					mad r8.xyzw, cb0[15].zwzw, l(2.000000, -1.000000, -1.000000, 0.000000), r3.xyxy
					sample r9.xyzw, r8.xyxx, t1.xyzw, s1
					add r6.xyz, r6.xyzx, r9.xyzx
					mad r9.xyz, r5.xyzx, l(5.000000, 5.000000, 5.000000, 0.000000), r9.xyzx
					mul r3.zw, r0.xxxy, r0.xxxy
					mul r6.xyz, r6.xyzx, r3.zzzz
					mul r6.xyz, r0.xxxx, r6.xyzx
					mad r10.xyz, r7.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r2.xyzx
					add r2.xyz, -r2.xyzx, r7.xyzx
					mul r2.xyz, r0.xxxx, r2.xyzx
					mad r7.xyz, -r9.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r10.xyzx
					mul r7.xyz, r3.zzzz, r7.xyzx
					mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r7.xyzx
					mad r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r6.xyzx
					add r2.xyz, r5.xyzx, r2.xyzx
					sample r5.xyzw, r3.xyxx, t1.xyzw, s1
					sample r6.xyzw, r8.zwzz, t1.xyzw, s1
					mad r7.xyz, r5.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), -r6.xyzx
					mad r9.xyzw, cb0[15].zwzw, l(1.000000, 0.000000, 2.000000, 0.000000), r3.xyxy
					sample r10.xyzw, r9.xyxx, t1.xyzw, s1
					mad r7.xyz, -r10.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), r7.xyzx
					sample r11.xyzw, r9.zwzz, t1.xyzw, s1
					add r7.xyz, r7.xyzx, r11.xyzx
					mad r11.xyz, r5.xyzx, l(5.000000, 5.000000, 5.000000, 0.000000), r11.xyzx
					mul r7.xyz, r3.zzzz, r7.xyzx
					mul r7.xyz, r0.xxxx, r7.xyzx
					mad r12.xyz, r10.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r6.xyzx
					add r6.xyz, -r6.xyzx, r10.xyzx
					mul r6.xyz, r0.xxxx, r6.xyzx
					mad r10.xyz, -r11.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r12.xyzx
					mul r10.xyz, r3.zzzz, r10.xyzx
					mad r7.xyz, r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r10.xyzx
					mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r7.xyzx
					add r5.xyz, r5.xyzx, r6.xyzx
					mad r6.xyz, r5.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), -r2.xyzx
					mad r7.xyzw, cb0[15].zwzw, l(-1.000000, 1.000000, 0.000000, 1.000000), r3.xyxy
					sample r10.xyzw, r7.zwzz, t1.xyzw, s1
					sample r11.xyzw, r0.zwzz, t1.xyzw, s1
					sample r12.xyzw, r0.zwzz, t0.xyzw, s0
					sample r13.xyzw, r7.xyxx, t1.xyzw, s1
					mad r14.xyz, r10.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), -r13.xyzx
					mad r14.xyz, -r11.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), r14.xyzx
					mad r15.xyzw, cb0[15].zwzw, l(2.000000, 1.000000, -1.000000, 2.000000), r3.xyxy
					sample r16.xyzw, r15.xyxx, t1.xyzw, s1
					add r14.xyz, r14.xyzx, r16.xyzx
					mad r16.xyz, r10.xyzx, l(5.000000, 5.000000, 5.000000, 0.000000), r16.xyzx
					mul r14.xyz, r3.zzzz, r14.xyzx
					mul r14.xyz, r0.xxxx, r14.xyzx
					mad r17.xyz, r11.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r13.xyzx
					add r11.xyz, r11.xyzx, -r13.xyzx
					mul r11.xyz, r0.xxxx, r11.xyzx
					mad r13.xyz, -r16.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r17.xyzx
					mul r13.xyz, r3.zzzz, r13.xyzx
					mad r13.xyz, r14.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r13.xyzx
					mad r11.xyz, r11.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r13.xyzx
					add r10.xyz, r10.xyzx, r11.xyzx
					mad r6.xyz, -r10.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), r6.xyzx
					mad r11.xyzw, cb0[15].zwzw, l(0.000000, 2.000000, 1.000000, 2.000000), r3.xyxy
					sample r13.xyzw, r11.xyxx, t1.xyzw, s1
					mad r0.zw, cb0[15].zzzw, l(0.000000, 0.000000, 2.000000, 2.000000), r3.xxxy
					sample r14.xyzw, r3.xyxx, t0.xyzw, s0
					sample r16.xyzw, r0.zwzz, t1.xyzw, s1
					sample r17.xyzw, r0.zwzz, t0.xyzw, s0
					sample r18.xyzw, r11.zwzz, t1.xyzw, s1
					sample r19.xyzw, r15.zwzz, t1.xyzw, s1
					mad r20.xyz, r13.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), -r19.xyzx
					mad r20.xyz, -r18.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), r20.xyzx
					add r20.xyz, r16.xyzx, r20.xyzx
					mad r16.xyz, r13.xyzx, l(5.000000, 5.000000, 5.000000, 0.000000), r16.xyzx
					mul r20.xyz, r3.zzzz, r20.xyzx
					mul r20.xyz, r0.xxxx, r20.xyzx
					mad r21.xyz, r18.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r19.xyzx
					add r18.xyz, r18.xyzx, -r19.xyzx
					mul r18.xyz, r0.xxxx, r18.xyzx
					mad r16.xyz, -r16.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r21.xyzx
					mul r16.xyz, r3.zzzz, r16.xyzx
					mad r16.xyz, r20.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r16.xyzx
					mad r16.xyz, r18.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r16.xyzx
					add r13.xyz, r13.xyzx, r16.xyzx
					add r6.xyz, r6.xyzx, r13.xyzx
					mad r13.xyz, r5.xyzx, l(5.000000, 5.000000, 5.000000, 0.000000), r13.xyzx
					mul r6.xyz, r3.wwww, r6.xyzx
					mul r6.xyz, r0.yyyy, r6.xyzx
					mad r16.xyz, r10.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r2.xyzx
					add r2.xyz, -r2.xyzx, r10.xyzx
					mul r2.xyz, r0.yyyy, r2.xyzx
					mad r10.xyz, -r13.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r16.xyzx
					mul r10.xyz, r3.wwww, r10.xyzx
					mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r10.xyzx
					mad r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r6.xyzx
					add r2.xyz, r5.xyzx, r2.xyzx
					add r0.z, r2.y, l(-0.000010)
					lt r0.z, r0.z, l(0.000000)
					discard_nz r0.z
					sample r5.xyzw, r8.xyxx, t0.xyzw, s0
					sample r6.xyzw, r8.zwzz, t0.xyzw, s0
					sample r8.xyzw, r4.xyxx, t0.xyzw, s0
					sample r4.xyzw, r4.zwzz, t0.xyzw, s0
					mad r10.xyzw, r8.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r1.xyzw
					mad r10.xyzw, -r4.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r10.xyzw
					add r10.xyzw, r5.xyzw, r10.xyzw
					mad r5.xyzw, r8.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r5.xyzw
					mul r10.xyzw, r3.zzzz, r10.xyzw
					mul r10.xyzw, r0.xxxx, r10.xyzw
					mad r13.xyzw, r4.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r1.xyzw
					add r1.xyzw, -r1.xyzw, r4.xyzw
					mul r1.xyzw, r0.xxxx, r1.xyzw
					mad r4.xyzw, -r5.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r13.xyzw
					mul r4.xyzw, r3.zzzz, r4.xyzw
					mad r4.xyzw, r10.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r4.xyzw
					mad r1.xyzw, r1.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r4.xyzw
					add r1.xyzw, r8.xyzw, r1.xyzw
					sample r4.xyzw, r9.zwzz, t0.xyzw, s0
					sample r5.xyzw, r9.xyxx, t0.xyzw, s0
					mad r8.xyzw, r14.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r6.xyzw
					mad r8.xyzw, -r5.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r8.xyzw
					add r8.xyzw, r4.xyzw, r8.xyzw
					mad r4.xyzw, r14.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r4.xyzw
					mul r8.xyzw, r3.zzzz, r8.xyzw
					mul r8.xyzw, r0.xxxx, r8.xyzw
					mad r9.xyzw, r5.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r6.xyzw
					add r5.xyzw, r5.xyzw, -r6.xyzw
					mul r5.xyzw, r0.xxxx, r5.xyzw
					mad r4.xyzw, -r4.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r9.xyzw
					mul r4.xyzw, r3.zzzz, r4.xyzw
					mad r4.xyzw, r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r4.xyzw
					mad r4.xyzw, r5.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r4.xyzw
					add r4.xyzw, r14.xyzw, r4.xyzw
					mad r5.xyzw, r4.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r1.xyzw
					sample r6.xyzw, r15.xyxx, t0.xyzw, s0
					sample r8.xyzw, r15.zwzz, t0.xyzw, s0
					sample r9.xyzw, r7.xyxx, t0.xyzw, s0
					sample r7.xyzw, r7.zwzz, t0.xyzw, s0
					mad r10.xyzw, r7.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r9.xyzw
					mad r10.xyzw, -r12.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r10.xyzw
					add r10.xyzw, r6.xyzw, r10.xyzw
					mad r6.xyzw, r7.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r6.xyzw
					mul r10.xyzw, r3.zzzz, r10.xyzw
					mul r10.xyzw, r0.xxxx, r10.xyzw
					mad r13.xyzw, r12.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r9.xyzw
					add r9.xyzw, r12.xyzw, -r9.xyzw
					mul r9.xyzw, r0.xxxx, r9.xyzw
					mad r6.xyzw, -r6.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r13.xyzw
					mul r6.xyzw, r3.zzzz, r6.xyzw
					mad r6.xyzw, r10.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					mad r6.xyzw, r9.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					add r6.xyzw, r7.xyzw, r6.xyzw
					mad r5.xyzw, -r6.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r5.xyzw
					sample r7.xyzw, r11.xyxx, t0.xyzw, s0
					sample r9.xyzw, r11.zwzz, t0.xyzw, s0
					mad r10.xyzw, r7.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r8.xyzw
					mad r10.xyzw, -r9.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r10.xyzw
					add r10.xyzw, r17.xyzw, r10.xyzw
					mad r11.xyzw, r7.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r17.xyzw
					mul r10.xyzw, r3.zzzz, r10.xyzw
					mul r10.xyzw, r0.xxxx, r10.xyzw
					mad r12.xyzw, r9.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r8.xyzw
					add r8.xyzw, -r8.xyzw, r9.xyzw
					mul r8.xyzw, r0.xxxx, r8.xyzw
					mad r9.xyzw, -r11.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r12.xyzw
					mul r9.xyzw, r3.zzzz, r9.xyzw
					mad r9.xyzw, r10.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r9.xyzw
					mad r8.xyzw, r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r9.xyzw
					add r7.xyzw, r7.xyzw, r8.xyzw
					add r5.xyzw, r5.xyzw, r7.xyzw
					mad r7.xyzw, r4.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r7.xyzw
					mul r5.xyzw, r3.wwww, r5.xyzw
					mul r5.xyzw, r0.yyyy, r5.xyzw
					mad r8.xyzw, r6.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r1.xyzw
					add r1.xyzw, -r1.xyzw, r6.xyzw
					mul r0.xyzw, r0.yyyy, r1.xyzw
					mad r1.xyzw, -r7.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r8.xyzw
					mul r1.xyzw, r1.xyzw, r3.wwww
					mad r1.xyzw, r5.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r1.xyzw
					mad r0.xyzw, r0.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r1.xyzw
					add r0.xyzw, r4.wxyz, r0.wxyz
					mov_sat r0.x, r0.x
					log r0.x, r0.x
					mul r0.x, r0.x, l(2.200000)
					exp r0.x, r0.x
					add r1.x, -r2.z, r2.x
					add_sat r0.x, r0.x, r1.x
					add r1.x, -cb0[5].w, |cb0[11].w|
					add r1.y, -cb0[5].w, cb0[6].x
					div_sat r1.x, r1.x, r1.y
					add r1.y, -cb0[5].y, cb0[5].z
					mad r1.x, r1.x, r1.y, cb0[5].y
					add r1.y, -r1.x, cb0[5].x
					add r1.x, r1.x, cb0[5].x
					min r1.x, r1.x, l(1.000000)
					max r1.y, r1.y, l(0.000000)
					add r1.z, r0.x, -r1.y
					add r1.x, -r1.y, r1.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r1.x, r1.x, r1.z
					mad r1.y, r1.x, l(-2.000000), l(3.000000)
					mul r1.x, r1.x, r1.x
					mad r0.x, r1.y, r1.x, -r0.x
					mul r1.x, r1.x, r1.y
					mul o0.w, r1.x, cb0[8].y
					add_sat r0.x, -|r2.x|, r0.x
					mad o0.xyz, r0.yzwy, l(0.500000, 0.500000, 0.500000, 0.000000), r0.xxxx
					mov o1.xyzw, l(0,0,0,0)
					mov o2.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_SAMPLEFILTERING_BILINEAR" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v3.xy
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_temps 6
					mad r0.xyzw, cb0[15].zwzw, l(0.500000, -0.500000, -0.500000, -0.500000), v3.xyxy
					sample r1.xyzw, r0.xyxx, t1.xyzw, s1
					sample r2.xyzw, r0.zwzz, t1.xyzw, s1
					add r1.xyz, r1.xyzx, -r2.xyzx
					div r3.xy, r0.zwzz, cb0[15].zwzz
					frc r3.xy, r3.xyxx
					mad r1.xyz, r3.xxxx, r1.xyzx, r2.xyzx
					mad r2.xyzw, cb0[15].zwzw, l(0.500000, 0.500000, -0.500000, 0.500000), v3.xyxy
					sample r4.xyzw, r2.xyxx, t1.xyzw, s1
					sample r5.xyzw, r2.zwzz, t1.xyzw, s1
					add r4.xyz, r4.xyzx, -r5.xyzx
					mad r4.xyz, r3.xxxx, r4.xyzx, r5.xyzx
					add r4.xyz, -r1.xyzx, r4.xyzx
					mad r1.xyz, r3.yyyy, r4.xyzx, r1.xyzx
					add r1.y, r1.y, l(-0.000010)
					lt r1.y, r1.y, l(0.000000)
					discard_nz r1.y
					sample r4.xyzw, r0.xyxx, t0.xyzw, s0
					sample r0.xyzw, r0.zwzz, t0.xyzw, s0
					add r4.xyzw, -r0.xyzw, r4.xyzw
					mad r0.xyzw, r3.xxxx, r4.xyzw, r0.xyzw
					sample r4.xyzw, r2.xyxx, t0.xyzw, s0
					sample r2.xyzw, r2.zwzz, t0.xyzw, s0
					add r4.xyzw, -r2.xyzw, r4.xyzw
					mad r2.xyzw, r3.xxxx, r4.xyzw, r2.xyzw
					add r2.xyzw, -r0.xyzw, r2.xyzw
					mad r0.xyzw, r3.yyyy, r2.wxyz, r0.wxyz
					mov_sat r0.x, r0.x
					log r0.x, r0.x
					mul r0.x, r0.x, l(2.200000)
					exp r0.x, r0.x
					add r1.y, -r1.z, r1.x
					add_sat r0.x, r0.x, r1.y
					add r1.y, -cb0[5].w, |cb0[11].w|
					add r1.z, -cb0[5].w, cb0[6].x
					div_sat r1.y, r1.y, r1.z
					add r1.z, -cb0[5].y, cb0[5].z
					mad r1.y, r1.y, r1.z, cb0[5].y
					add r1.z, -r1.y, cb0[5].x
					add r1.y, r1.y, cb0[5].x
					min r1.y, r1.y, l(1.000000)
					max r1.z, r1.z, l(0.000000)
					add r1.w, r0.x, -r1.z
					add r1.y, -r1.z, r1.y
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					mul_sat r1.y, r1.y, r1.w
					mad r1.z, r1.y, l(-2.000000), l(3.000000)
					mul r1.y, r1.y, r1.y
					mad r0.x, r1.z, r1.y, -r0.x
					mul r1.y, r1.y, r1.z
					mul o0.w, r1.y, cb0[8].y
					add_sat r0.x, -|r1.x|, r0.x
					mad o0.xyz, r0.yzwy, l(0.500000, 0.500000, 0.500000, 0.000000), r0.xxxx
					mov o1.xyzw, l(0,0,0,0)
					mov o2.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_SAMPLEFILTERING_NONE" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[12], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v3.xy
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_temps 2
					sample r0.xyzw, v3.xyxx, t1.xyzw, s1
					add r0.y, r0.y, l(-0.000010)
					lt r0.y, r0.y, l(0.000000)
					discard_nz r0.y
					add r0.y, -cb0[5].w, |cb0[11].w|
					add r0.w, -cb0[5].w, cb0[6].x
					div_sat r0.y, r0.y, r0.w
					add r0.w, -cb0[5].y, cb0[5].z
					mad r0.y, r0.y, r0.w, cb0[5].y
					add r0.w, r0.y, cb0[5].x
					add r0.y, -r0.y, cb0[5].x
					max r0.y, r0.y, l(0.000000)
					min r0.w, r0.w, l(1.000000)
					add r0.zw, -r0.zzzy, r0.xxxw
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					sample r1.xyzw, v3.xyxx, t0.wxyz, s0
					mov_sat r1.x, r1.x
					log r1.x, r1.x
					mul r1.x, r1.x, l(2.200000)
					exp r1.x, r1.x
					add_sat r0.z, r0.z, r1.x
					add r0.y, -r0.y, r0.z
					mul_sat r0.y, r0.w, r0.y
					mad r0.w, r0.y, l(-2.000000), l(3.000000)
					mul r0.y, r0.y, r0.y
					mad r0.z, r0.w, r0.y, -r0.z
					mul r0.y, r0.y, r0.w
					mul o0.w, r0.y, cb0[8].y
					add_sat r0.x, -|r0.x|, r0.z
					mad o0.xyz, r1.yzwy, l(0.500000, 0.500000, 0.500000, 0.000000), r0.xxxx
					mov o1.xyzw, l(0,0,0,0)
					mov o2.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "ENABLE_WAVE" "_SAMPLEFILTERING_BICUBIC_HERMITE" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v3.xy
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_temps 28
					div r0.xyzw, v3.xyxy, cb0[15].zwzw
					add r1.xy, r0.zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
					frc r1.zw, r1.xxxy
					round_ni r1.xy, r1.xyxx
					add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					mul r2.xy, r1.xyxx, cb0[15].zwzz
					mad r2.zw, r1.xxxy, cb0[15].zzzw, -cb0[15].zzzw
					sample r3.xyzw, r2.zwzz, t0.xyzw, s0
					mad r4.xyzw, cb0[15].zwzw, l(0.000000, -1.000000, 1.000000, -1.000000), r2.xyxy
					sample r5.xyzw, r4.xyxx, t0.xyzw, s0
					sample r6.xyzw, r4.zwzz, t0.xyzw, s0
					mad r7.xyzw, cb0[15].zwzw, l(2.000000, -1.000000, -1.000000, 0.000000), r2.xyxy
					sample r8.xyzw, r7.xyxx, t0.xyzw, s0
					sample r9.xyzw, r7.zwzz, t0.xyzw, s0
					sample r10.xyzw, r2.xyxx, t0.xyzw, s0
					mad r11.xyzw, cb0[15].zwzw, l(1.000000, 0.000000, 2.000000, 0.000000), r2.xyxy
					sample r12.xyzw, r11.xyxx, t0.xyzw, s0
					sample r13.xyzw, r11.zwzz, t0.xyzw, s0
					mad r14.xyzw, cb0[15].zwzw, l(-1.000000, 1.000000, 0.000000, 1.000000), r2.xyxy
					sample r15.xyzw, r14.xyxx, t0.xyzw, s0
					sample r16.xyzw, r14.zwzz, t0.xyzw, s0
					mad r1.xy, r1.xyxx, cb0[15].zwzz, cb0[15].zwzz
					sample r17.xyzw, r1.xyxx, t0.xyzw, s0
					mad r18.xyzw, cb0[15].zwzw, l(2.000000, 1.000000, -1.000000, 2.000000), r2.xyxy
					sample r19.xyzw, r18.xyxx, t0.xyzw, s0
					sample r20.xyzw, r18.zwzz, t0.xyzw, s0
					mad r21.xyzw, cb0[15].zwzw, l(0.000000, 2.000000, 1.000000, 2.000000), r2.xyxy
					sample r22.xyzw, r21.xyxx, t0.xyzw, s0
					sample r23.xyzw, r21.zwzz, t0.xyzw, s0
					mad r24.xy, cb0[15].zwzz, l(2.000000, 2.000000, 0.000000, 0.000000), r2.xyxx
					sample r25.xyzw, r24.xyxx, t0.xyzw, s0
					mad r26.xyzw, r5.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r3.xyzw
					mad r26.xyzw, -r6.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r26.xyzw
					add r26.xyzw, r8.xyzw, r26.xyzw
					mul r24.zw, r1.zzzw, r1.zzzw
					mad r27.xyzw, r6.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r3.xyzw
					mad r8.xyzw, r5.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r8.xyzw
					mad r8.xyzw, -r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r27.xyzw
					add r3.xyzw, -r3.xyzw, r6.xyzw
					mul r3.xyzw, r1.zzzz, r3.xyzw
					mul r6.xyzw, r26.xyzw, r24.zzzz
					mul r6.xyzw, r1.zzzz, r6.xyzw
					mul r8.xyzw, r8.xyzw, r24.zzzz
					mad r6.xyzw, r6.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r8.xyzw
					mad r3.xyzw, r3.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					add r3.xyzw, r5.xyzw, r3.xyzw
					mad r5.xyzw, r10.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r9.xyzw
					mad r5.xyzw, -r12.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r5.xyzw
					add r5.xyzw, r13.xyzw, r5.xyzw
					mad r6.xyzw, r12.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r9.xyzw
					mad r8.xyzw, r10.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r13.xyzw
					mad r6.xyzw, -r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					add r8.xyzw, -r9.xyzw, r12.xyzw
					mul r8.xyzw, r1.zzzz, r8.xyzw
					mul r5.xyzw, r5.xyzw, r24.zzzz
					mul r5.xyzw, r1.zzzz, r5.xyzw
					mul r6.xyzw, r6.xyzw, r24.zzzz
					mad r5.xyzw, r5.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					mad r5.xyzw, r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r5.xyzw
					add r5.xyzw, r10.xyzw, r5.xyzw
					mad r6.xyzw, r16.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r15.xyzw
					mad r6.xyzw, -r17.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r6.xyzw
					add r6.xyzw, r19.xyzw, r6.xyzw
					mad r8.xyzw, r17.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r15.xyzw
					mad r9.xyzw, r16.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r19.xyzw
					mad r8.xyzw, -r9.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r8.xyzw
					add r9.xyzw, -r15.xyzw, r17.xyzw
					mul r9.xyzw, r1.zzzz, r9.xyzw
					mul r6.xyzw, r6.xyzw, r24.zzzz
					mul r6.xyzw, r1.zzzz, r6.xyzw
					mul r8.xyzw, r8.xyzw, r24.zzzz
					mad r6.xyzw, r6.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r8.xyzw
					mad r6.xyzw, r9.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					add r6.xyzw, r16.xyzw, r6.xyzw
					mad r8.xyzw, r22.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r20.xyzw
					mad r8.xyzw, -r23.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r8.xyzw
					add r8.xyzw, r25.xyzw, r8.xyzw
					mad r9.xyzw, r23.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r20.xyzw
					mad r10.xyzw, r22.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r25.xyzw
					mad r9.xyzw, -r10.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r9.xyzw
					add r10.xyzw, -r20.xyzw, r23.xyzw
					mul r10.xyzw, r1.zzzz, r10.xyzw
					mul r8.xyzw, r8.xyzw, r24.zzzz
					mul r8.xyzw, r1.zzzz, r8.xyzw
					mul r9.xyzw, r9.xyzw, r24.zzzz
					mad r8.xyzw, r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r9.xyzw
					mad r8.xyzw, r10.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r8.xyzw
					add r8.xyzw, r22.xyzw, r8.xyzw
					mad r9.xyzw, r5.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r3.xyzw
					mad r9.xyzw, -r6.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r9.xyzw
					add r9.xyzw, r8.xyzw, r9.xyzw
					mad r10.xyzw, r6.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r3.xyzw
					mad r8.xyzw, r5.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r8.xyzw
					mad r8.xyzw, -r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r10.xyzw
					add r3.xyzw, -r3.xyzw, r6.xyzw
					mul r3.xyzw, r1.wwww, r3.xyzw
					mul r6.xyzw, r9.xyzw, r24.wwww
					mul r6.xyzw, r1.wwww, r6.xyzw
					mul r8.xyzw, r8.xyzw, r24.wwww
					mad r6.xyzw, r6.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r8.xyzw
					mad r3.xyzw, r3.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					add r3.xyzw, r5.wxyz, r3.wxyz
					sample r5.xyzw, r2.zwzz, t1.xyzw, s1
					sample r6.xyzw, r4.xyxx, t1.xyzw, s1
					sample r4.xyzw, r4.zwzz, t1.xyzw, s1
					sample r8.xyzw, r7.xyxx, t1.xyzw, s1
					sample r7.xyzw, r7.zwzz, t1.xyzw, s1
					sample r2.xyzw, r2.xyxx, t1.xyzw, s1
					sample r9.xyzw, r11.xyxx, t1.xyzw, s1
					sample r10.xyzw, r11.zwzz, t1.xyzw, s1
					sample r11.xyzw, r14.xyxx, t1.xyzw, s1
					sample r12.xyzw, r14.zwzz, t1.xyzw, s1
					sample r13.xyzw, r1.xyxx, t1.xyzw, s1
					sample r14.xyzw, r18.xyxx, t1.xyzw, s1
					sample r15.xyzw, r18.zwzz, t1.xyzw, s1
					sample r16.xyzw, r21.xyxx, t1.xyzw, s1
					sample r17.xyzw, r21.zwzz, t1.xyzw, s1
					sample r18.xyzw, r24.xyxx, t1.xyzw, s1
					mad r19.xyzw, r6.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r5.xyzw
					mad r19.xyzw, -r4.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r19.xyzw
					add r19.xyzw, r8.xyzw, r19.xyzw
					mad r20.xyzw, r4.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r5.xyzw
					mad r8.xyzw, r6.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r8.xyzw
					mad r8.xyzw, -r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r20.xyzw
					add r4.xyzw, r4.xyzw, -r5.xyzw
					mul r4.xyzw, r1.zzzz, r4.xyzw
					mul r5.xyzw, r19.xyzw, r24.zzzz
					mul r5.xyzw, r1.zzzz, r5.xyzw
					mul r8.xyzw, r8.xyzw, r24.zzzz
					mad r5.xyzw, r5.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r8.xyzw
					mad r4.xyzw, r4.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r5.xyzw
					add r4.xyzw, r6.xyzw, r4.xyzw
					mad r5.xyzw, r2.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r7.xyzw
					mad r5.xyzw, -r9.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r5.xyzw
					add r5.xyzw, r10.xyzw, r5.xyzw
					mad r6.xyzw, r9.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r7.xyzw
					mad r8.xyzw, r2.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r10.xyzw
					mad r6.xyzw, -r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					add r7.xyzw, -r7.xyzw, r9.xyzw
					mul r7.xyzw, r1.zzzz, r7.xyzw
					mul r5.xyzw, r5.xyzw, r24.zzzz
					mul r5.xyzw, r1.zzzz, r5.xyzw
					mul r6.xyzw, r6.xyzw, r24.zzzz
					mad r5.xyzw, r5.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					mad r5.xyzw, r7.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r5.xyzw
					add r2.xyzw, r2.xyzw, r5.xyzw
					mad r5.xyzw, r12.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r11.xyzw
					mad r5.xyzw, -r13.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r5.xyzw
					add r5.xyzw, r14.xyzw, r5.xyzw
					mad r6.xyzw, r13.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r11.xyzw
					mad r7.xyzw, r12.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r14.xyzw
					mad r6.xyzw, -r7.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					add r7.xyzw, -r11.xyzw, r13.xyzw
					mul r7.xyzw, r1.zzzz, r7.xyzw
					mul r5.xyzw, r5.xyzw, r24.zzzz
					mul r5.xyzw, r1.zzzz, r5.xyzw
					mul r6.xyzw, r6.xyzw, r24.zzzz
					mad r5.xyzw, r5.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					mad r5.xyzw, r7.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r5.xyzw
					add r5.xyzw, r12.xyzw, r5.xyzw
					mad r6.xyzw, r16.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r15.xyzw
					mad r6.xyzw, -r17.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r6.xyzw
					add r6.xyzw, r18.xyzw, r6.xyzw
					mad r7.xyzw, r17.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r15.xyzw
					mad r8.xyzw, r16.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r18.xyzw
					mad r7.xyzw, -r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r7.xyzw
					add r8.xyzw, -r15.xyzw, r17.xyzw
					mul r8.xyzw, r1.zzzz, r8.xyzw
					mul r6.xyzw, r6.xyzw, r24.zzzz
					mul r6.xyzw, r1.zzzz, r6.xyzw
					mul r7.xyzw, r7.xyzw, r24.zzzz
					mad r6.xyzw, r6.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r7.xyzw
					mad r6.xyzw, r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					add r6.xyzw, r16.xyzw, r6.xyzw
					mad r7.xyzw, r2.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r4.xyzw
					mad r7.xyzw, -r5.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r7.xyzw
					add r7.xyzw, r6.xyzw, r7.xyzw
					mad r8.xyzw, r5.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r4.xyzw
					mad r6.xyzw, r2.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r6.xyzw
					mad r6.xyzw, -r6.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r8.xyzw
					add r4.xyzw, -r4.xyzw, r5.xyzw
					mul r4.xyzw, r1.wwww, r4.xyzw
					mul r5.xyzw, r7.xyzw, r24.wwww
					mul r1.xyzw, r1.wwww, r5.xyzw
					mul r5.xyzw, r6.xyzw, r24.wwww
					mad r1.xyzw, r1.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r5.xyzw
					mad r1.xyzw, r4.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r1.xyzw
					add r1.xyzw, r2.wxyz, r1.wxyz
					add r2.x, r1.z, l(-0.000010)
					lt r2.x, r2.x, l(0.000000)
					discard_nz r2.x
					mov_sat r3.x, r3.x
					log r2.x, r3.x
					mul r2.x, r2.x, l(2.200000)
					exp r2.x, r2.x
					mov_sat r1.x, r1.x
					ftoi r2.y, cb0[9].x
					mul r0.xyzw, r0.xyzw, cb0[8].wwww
					mul r0.xyzw, r0.xyzw, l(0.314159, 0.314159, 1.973921, 1.973921)
					ge r4.xyzw, r0.zwzw, -r0.zwzw
					movc r4.xyzw, r4.xyzw, l(6.283185,6.283185,0.159155,0.159155), l(-6.283185,-6.283185,-0.159155,-0.159155)
					mul r0.xy, r0.xyxx, r4.zwzz
					frc r0.xy, r0.xyxx
					mad r0.xy, r4.xyxx, r0.xyxx, l(-250.000000, -250.000000, 0.000000, 0.000000)
					mul r0.z, cb0[8].z, cb1[0].x
					mov r4.x, l(1.000000)
					mov r4.yz, r0.xxyx
					mov r0.w, l(0)
					loop 
					  ige r2.z, r0.w, r2.y
					  breakc_nz r2.z
					  iadd r0.w, r0.w, l(1)
					  itof r2.z, r0.w
					  div r2.z, l(3.500000), r2.z
					  add r2.z, -r2.z, l(1.000000)
					  mad r2.w, r0.z, r2.z, -r4.y
					  sincos null, r2.w, r2.w
					  mad r3.x, r0.z, r2.z, r4.z
					  sincos r3.x, null, r3.x
					  add r5.x, r2.w, r3.x
					  mad r2.w, r0.z, r2.z, -r4.z
					  sincos r2.w, null, r2.w
					  mad r3.x, r0.z, r2.z, r4.y
					  sincos null, r3.x, r3.x
					  add r5.y, r2.w, r3.x
					  add r4.yz, r0.xxyx, r5.xxyx
					  mad r2.zw, r0.zzzz, r2.zzzz, r4.yyyz
					  sincos r2.z, null, r2.z
					  mul r2.z, r2.z, l(200.000000)
					  div r5.x, r0.x, r2.z
					  sincos null, r2.z, r2.w
					  mul r2.z, r2.z, l(200.000000)
					  div r5.y, r0.y, r2.z
					  dp2 r2.z, r5.xyxx, r5.xyxx
					  sqrt r2.z, r2.z
					  div r2.z, l(1.000000, 1.000000, 1.000000, 1.000000), r2.z
					  add r4.x, r2.z, r4.x
					endloop 
					round_z r0.x, cb0[9].x
					div r0.x, r4.x, r0.x
					log r0.x, r0.x
					mul r0.x, r0.x, l(1.400000)
					exp r0.x, r0.x
					add r0.x, -r0.x, l(1.170000)
					mul r0.x, |r0.x|, |r0.x|
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, cb0[9].y
					add r0.y, -r1.w, r1.y
					add r0.y, r2.x, r0.y
					mul r0.z, r1.x, r1.z
					mad_sat r0.x, r0.z, r0.x, r0.y
					add r0.y, -cb0[5].w, |cb0[11].w|
					add r0.z, -cb0[5].w, cb0[6].x
					div_sat r0.y, r0.y, r0.z
					add r0.z, -cb0[5].y, cb0[5].z
					mad r0.y, r0.y, r0.z, cb0[5].y
					add r0.z, -r0.y, cb0[5].x
					max r0.z, r0.z, l(0.000000)
					add r0.y, r0.y, cb0[5].x
					min r0.y, r0.y, l(1.000000)
					add r0.y, -r0.z, r0.y
					add r0.z, -r0.z, r0.x
					div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
					mul_sat r0.y, r0.y, r0.z
					mad r0.z, r0.y, l(-2.000000), l(3.000000)
					mul r0.y, r0.y, r0.y
					mul r0.w, r0.y, r0.z
					mad r0.x, r0.z, r0.y, -r0.x
					add_sat r0.x, -|r1.y|, r0.x
					mad o0.xyz, r3.yzwy, l(0.500000, 0.500000, 0.500000, 0.000000), r0.xxxx
					mul o0.w, r0.w, cb0[8].y
					mov o1.xyzw, l(0,0,0,0)
					mov o2.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "ENABLE_WAVE" "_SAMPLEFILTERING_BILINEAR" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v3.xy
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_temps 7
					mad r0.xyzw, cb0[15].zwzw, l(0.500000, 0.500000, -0.500000, 0.500000), v3.xyxy
					mad r1.xyzw, cb0[15].zwzw, l(0.500000, -0.500000, -0.500000, -0.500000), v3.xyxy
					sample r2.xyzw, r0.xyxx, t0.xyzw, s0
					sample r3.xyzw, r0.zwzz, t0.xyzw, s0
					sample r4.xyzw, r1.xyxx, t0.xyzw, s0
					sample r5.xyzw, r1.zwzz, t0.xyzw, s0
					div r6.xy, r1.zwzz, cb0[15].zwzz
					frc r6.xy, r6.xyxx
					add r2.xyzw, r2.xyzw, -r3.xyzw
					mad r2.xyzw, r6.xxxx, r2.xyzw, r3.xyzw
					add r3.xyzw, r4.xyzw, -r5.xyzw
					mad r3.xyzw, r6.xxxx, r3.xyzw, r5.xyzw
					add r2.xyzw, r2.xyzw, -r3.xyzw
					mad r2.xyzw, r6.yyyy, r2.wxyz, r3.wxyz
					sample r3.xyzw, r0.xyxx, t1.xyzw, s1
					sample r0.xyzw, r0.zwzz, t1.xyzw, s1
					sample r4.xyzw, r1.xyxx, t1.xyzw, s1
					sample r1.xyzw, r1.zwzz, t1.xyzw, s1
					add r3.xyzw, -r0.xyzw, r3.xyzw
					mad r0.xyzw, r6.xxxx, r3.xyzw, r0.xyzw
					add r3.xyzw, -r1.xyzw, r4.xyzw
					mad r1.xyzw, r6.xxxx, r3.xyzw, r1.xyzw
					add r0.xyzw, r0.xyzw, -r1.xyzw
					mad r0.xyzw, r6.yyyy, r0.wxyz, r1.wxyz
					add r1.x, r0.z, l(-0.000010)
					lt r1.x, r1.x, l(0.000000)
					discard_nz r1.x
					mov_sat r2.x, r2.x
					log r1.x, r2.x
					mul r1.x, r1.x, l(2.200000)
					exp r1.x, r1.x
					mov_sat r0.x, r0.x
					ftoi r1.y, cb0[9].x
					div r3.xyzw, v3.xyxy, cb0[15].zwzw
					mul r3.xyzw, r3.xyzw, cb0[8].wwww
					mul r3.xyzw, r3.xyzw, l(0.314159, 0.314159, 1.973921, 1.973921)
					ge r4.xyzw, r3.zwzw, -r3.zwzw
					movc r4.xyzw, r4.xyzw, l(6.283185,6.283185,0.159155,0.159155), l(-6.283185,-6.283185,-0.159155,-0.159155)
					mul r1.zw, r3.xxxy, r4.zzzw
					frc r1.zw, r1.zzzw
					mad r1.zw, r4.xxxy, r1.zzzw, l(0.000000, 0.000000, -250.000000, -250.000000)
					mul r2.x, cb0[8].z, cb1[0].x
					mov r3.yz, r1.zzwz
					mov r3.xw, l(1.000000,0,0,0)
					loop 
					  ige r4.x, r3.w, r1.y
					  breakc_nz r4.x
					  iadd r3.w, r3.w, l(1)
					  itof r4.x, r3.w
					  div r4.x, l(3.500000), r4.x
					  add r4.x, -r4.x, l(1.000000)
					  mad r4.y, r2.x, r4.x, -r3.y
					  sincos null, r4.y, r4.y
					  mad r4.z, r2.x, r4.x, r3.z
					  sincos r4.z, null, r4.z
					  add r5.x, r4.z, r4.y
					  mad r4.y, r2.x, r4.x, -r3.z
					  sincos r4.y, null, r4.y
					  mad r4.z, r2.x, r4.x, r3.y
					  sincos null, r4.z, r4.z
					  add r5.y, r4.z, r4.y
					  add r3.yz, r1.zzwz, r5.xxyx
					  mad r4.xy, r2.xxxx, r4.xxxx, r3.yzyy
					  sincos r4.x, null, r4.x
					  mul r4.x, r4.x, l(200.000000)
					  div r5.x, r1.z, r4.x
					  sincos null, r4.x, r4.y
					  mul r4.x, r4.x, l(200.000000)
					  div r5.y, r1.w, r4.x
					  dp2 r4.x, r5.xyxx, r5.xyxx
					  sqrt r4.x, r4.x
					  div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r4.x
					  add r3.x, r3.x, r4.x
					endloop 
					round_z r1.y, cb0[9].x
					div r1.y, r3.x, r1.y
					log r1.y, r1.y
					mul r1.y, r1.y, l(1.400000)
					exp r1.y, r1.y
					add r1.y, -r1.y, l(1.170000)
					mul r1.y, |r1.y|, |r1.y|
					mul r1.y, r1.y, r1.y
					mul r1.y, r1.y, r1.y
					mul r1.y, r1.y, cb0[9].y
					add r0.w, -r0.w, r0.y
					add r0.w, r1.x, r0.w
					mul r0.x, r0.x, r0.z
					mad_sat r0.x, r0.x, r1.y, r0.w
					add r0.z, -cb0[5].w, |cb0[11].w|
					add r0.w, -cb0[5].w, cb0[6].x
					div_sat r0.z, r0.z, r0.w
					add r0.w, -cb0[5].y, cb0[5].z
					mad r0.z, r0.z, r0.w, cb0[5].y
					add r0.w, -r0.z, cb0[5].x
					max r0.w, r0.w, l(0.000000)
					add r0.z, r0.z, cb0[5].x
					min r0.z, r0.z, l(1.000000)
					add r0.z, -r0.w, r0.z
					add r0.w, -r0.w, r0.x
					div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
					mul_sat r0.z, r0.z, r0.w
					mad r0.w, r0.z, l(-2.000000), l(3.000000)
					mul r0.z, r0.z, r0.z
					mul r1.x, r0.z, r0.w
					mad r0.x, r0.w, r0.z, -r0.x
					add_sat r0.x, -|r0.y|, r0.x
					mad o0.xyz, r2.yzwy, l(0.500000, 0.500000, 0.500000, 0.000000), r0.xxxx
					mul o0.w, r1.x, cb0[8].y
					mov o1.xyzw, l(0,0,0,0)
					mov o2.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "ENABLE_WAVE" "_SAMPLEFILTERING_NONE" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v3.xy
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_temps 6
					sample r0.xyzw, v3.xyxx, t0.wxyz, s0
					sample r1.xyzw, v3.xyxx, t1.wxyz, s1
					add r2.x, r1.z, l(-0.000010)
					lt r2.x, r2.x, l(0.000000)
					discard_nz r2.x
					mov_sat r0.x, r0.x
					log r0.x, r0.x
					mul r0.x, r0.x, l(2.200000)
					exp r0.x, r0.x
					mov_sat r1.x, r1.x
					ftoi r2.x, cb0[9].x
					div r3.xyzw, v3.xyxy, cb0[15].zwzw
					mul r3.xyzw, r3.xyzw, cb0[8].wwww
					mul r3.xyzw, r3.xyzw, l(0.314159, 0.314159, 1.973921, 1.973921)
					ge r4.xyzw, r3.zwzw, -r3.zwzw
					movc r4.xyzw, r4.xyzw, l(6.283185,6.283185,0.159155,0.159155), l(-6.283185,-6.283185,-0.159155,-0.159155)
					mul r2.yz, r3.xxyx, r4.zzwz
					frc r2.yz, r2.yyzy
					mad r2.yz, r4.xxyx, r2.yyzy, l(0.000000, -250.000000, -250.000000, 0.000000)
					mul r2.w, cb0[8].z, cb1[0].x
					mov r3.yz, r2.yyzy
					mov r3.xw, l(1.000000,0,0,0)
					loop 
					  ige r4.x, r3.w, r2.x
					  breakc_nz r4.x
					  iadd r3.w, r3.w, l(1)
					  itof r4.x, r3.w
					  div r4.x, l(3.500000), r4.x
					  add r4.x, -r4.x, l(1.000000)
					  mad r4.y, r2.w, r4.x, -r3.y
					  sincos null, r4.y, r4.y
					  mad r4.z, r2.w, r4.x, r3.z
					  sincos r4.z, null, r4.z
					  add r5.x, r4.z, r4.y
					  mad r4.y, r2.w, r4.x, -r3.z
					  sincos r4.y, null, r4.y
					  mad r4.z, r2.w, r4.x, r3.y
					  sincos null, r4.z, r4.z
					  add r5.y, r4.z, r4.y
					  add r3.yz, r2.yyzy, r5.xxyx
					  mad r4.xy, r2.wwww, r4.xxxx, r3.yzyy
					  sincos r4.x, null, r4.x
					  mul r4.x, r4.x, l(200.000000)
					  div r5.x, r2.y, r4.x
					  sincos null, r4.x, r4.y
					  mul r4.x, r4.x, l(200.000000)
					  div r5.y, r2.z, r4.x
					  dp2 r4.x, r5.xyxx, r5.xyxx
					  sqrt r4.x, r4.x
					  div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r4.x
					  add r3.x, r3.x, r4.x
					endloop 
					round_z r2.x, cb0[9].x
					div r2.x, r3.x, r2.x
					log r2.x, r2.x
					mul r2.x, r2.x, l(1.400000)
					exp r2.x, r2.x
					add r2.x, -r2.x, l(1.170000)
					mul r2.x, |r2.x|, |r2.x|
					mul r2.x, r2.x, r2.x
					mul r2.x, r2.x, r2.x
					mul r2.x, r2.x, cb0[9].y
					add r1.w, -r1.w, r1.y
					add r0.x, r0.x, r1.w
					mul r1.x, r1.x, r1.z
					mad_sat r0.x, r1.x, r2.x, r0.x
					add r1.x, -cb0[5].w, |cb0[11].w|
					add r1.z, -cb0[5].w, cb0[6].x
					div_sat r1.x, r1.x, r1.z
					add r1.z, -cb0[5].y, cb0[5].z
					mad r1.x, r1.x, r1.z, cb0[5].y
					add r1.z, -r1.x, cb0[5].x
					max r1.z, r1.z, l(0.000000)
					add r1.x, r1.x, cb0[5].x
					min r1.x, r1.x, l(1.000000)
					add r1.x, -r1.z, r1.x
					add r1.z, r0.x, -r1.z
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r1.x, r1.x, r1.z
					mad r1.z, r1.x, l(-2.000000), l(3.000000)
					mul r1.x, r1.x, r1.x
					mul r1.w, r1.x, r1.z
					mad r0.x, r1.z, r1.x, -r0.x
					add_sat r0.x, -|r1.y|, r0.x
					mad o0.xyz, r0.yzwy, l(0.500000, 0.500000, 0.500000, 0.000000), r0.xxxx
					mul o0.w, r1.w, cb0[8].y
					mov o1.xyzw, l(0,0,0,0)
					mov o2.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "ENABLE_CAUSTIC" "_SAMPLEFILTERING_BICUBIC_HERMITE" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v3.xy
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_temps 28
					div r0.xyzw, v3.xyxy, cb0[15].zwzw
					add r1.xy, r0.zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
					frc r1.zw, r1.xxxy
					round_ni r1.xy, r1.xyxx
					add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					mul r2.xy, r1.xyxx, cb0[15].zwzz
					mad r2.zw, r1.xxxy, cb0[15].zzzw, -cb0[15].zzzw
					sample r3.xyzw, r2.zwzz, t0.xyzw, s0
					mad r4.xyzw, cb0[15].zwzw, l(0.000000, -1.000000, 1.000000, -1.000000), r2.xyxy
					sample r5.xyzw, r4.xyxx, t0.xyzw, s0
					sample r6.xyzw, r4.zwzz, t0.xyzw, s0
					mad r7.xyzw, cb0[15].zwzw, l(2.000000, -1.000000, -1.000000, 0.000000), r2.xyxy
					sample r8.xyzw, r7.xyxx, t0.xyzw, s0
					sample r9.xyzw, r7.zwzz, t0.xyzw, s0
					sample r10.xyzw, r2.xyxx, t0.xyzw, s0
					mad r11.xyzw, cb0[15].zwzw, l(1.000000, 0.000000, 2.000000, 0.000000), r2.xyxy
					sample r12.xyzw, r11.xyxx, t0.xyzw, s0
					sample r13.xyzw, r11.zwzz, t0.xyzw, s0
					mad r14.xyzw, cb0[15].zwzw, l(-1.000000, 1.000000, 0.000000, 1.000000), r2.xyxy
					sample r15.xyzw, r14.xyxx, t0.xyzw, s0
					sample r16.xyzw, r14.zwzz, t0.xyzw, s0
					mad r1.xy, r1.xyxx, cb0[15].zwzz, cb0[15].zwzz
					sample r17.xyzw, r1.xyxx, t0.xyzw, s0
					mad r18.xyzw, cb0[15].zwzw, l(2.000000, 1.000000, -1.000000, 2.000000), r2.xyxy
					sample r19.xyzw, r18.xyxx, t0.xyzw, s0
					sample r20.xyzw, r18.zwzz, t0.xyzw, s0
					mad r21.xyzw, cb0[15].zwzw, l(0.000000, 2.000000, 1.000000, 2.000000), r2.xyxy
					sample r22.xyzw, r21.xyxx, t0.xyzw, s0
					sample r23.xyzw, r21.zwzz, t0.xyzw, s0
					mad r24.xy, cb0[15].zwzz, l(2.000000, 2.000000, 0.000000, 0.000000), r2.xyxx
					sample r25.xyzw, r24.xyxx, t0.xyzw, s0
					mad r26.xyzw, r5.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r3.xyzw
					mad r26.xyzw, -r6.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r26.xyzw
					add r26.xyzw, r8.xyzw, r26.xyzw
					mul r24.zw, r1.zzzw, r1.zzzw
					mad r27.xyzw, r6.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r3.xyzw
					mad r8.xyzw, r5.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r8.xyzw
					mad r8.xyzw, -r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r27.xyzw
					add r3.xyzw, -r3.xyzw, r6.xyzw
					mul r3.xyzw, r1.zzzz, r3.xyzw
					mul r6.xyzw, r26.xyzw, r24.zzzz
					mul r6.xyzw, r1.zzzz, r6.xyzw
					mul r8.xyzw, r8.xyzw, r24.zzzz
					mad r6.xyzw, r6.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r8.xyzw
					mad r3.xyzw, r3.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					add r3.xyzw, r5.xyzw, r3.xyzw
					mad r5.xyzw, r10.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r9.xyzw
					mad r5.xyzw, -r12.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r5.xyzw
					add r5.xyzw, r13.xyzw, r5.xyzw
					mad r6.xyzw, r12.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r9.xyzw
					mad r8.xyzw, r10.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r13.xyzw
					mad r6.xyzw, -r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					add r8.xyzw, -r9.xyzw, r12.xyzw
					mul r8.xyzw, r1.zzzz, r8.xyzw
					mul r5.xyzw, r5.xyzw, r24.zzzz
					mul r5.xyzw, r1.zzzz, r5.xyzw
					mul r6.xyzw, r6.xyzw, r24.zzzz
					mad r5.xyzw, r5.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					mad r5.xyzw, r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r5.xyzw
					add r5.xyzw, r10.xyzw, r5.xyzw
					mad r6.xyzw, r16.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r15.xyzw
					mad r6.xyzw, -r17.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r6.xyzw
					add r6.xyzw, r19.xyzw, r6.xyzw
					mad r8.xyzw, r17.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r15.xyzw
					mad r9.xyzw, r16.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r19.xyzw
					mad r8.xyzw, -r9.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r8.xyzw
					add r9.xyzw, -r15.xyzw, r17.xyzw
					mul r9.xyzw, r1.zzzz, r9.xyzw
					mul r6.xyzw, r6.xyzw, r24.zzzz
					mul r6.xyzw, r1.zzzz, r6.xyzw
					mul r8.xyzw, r8.xyzw, r24.zzzz
					mad r6.xyzw, r6.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r8.xyzw
					mad r6.xyzw, r9.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					add r6.xyzw, r16.xyzw, r6.xyzw
					mad r8.xyzw, r22.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r20.xyzw
					mad r8.xyzw, -r23.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r8.xyzw
					add r8.xyzw, r25.xyzw, r8.xyzw
					mad r9.xyzw, r23.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r20.xyzw
					mad r10.xyzw, r22.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r25.xyzw
					mad r9.xyzw, -r10.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r9.xyzw
					add r10.xyzw, -r20.xyzw, r23.xyzw
					mul r10.xyzw, r1.zzzz, r10.xyzw
					mul r8.xyzw, r8.xyzw, r24.zzzz
					mul r8.xyzw, r1.zzzz, r8.xyzw
					mul r9.xyzw, r9.xyzw, r24.zzzz
					mad r8.xyzw, r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r9.xyzw
					mad r8.xyzw, r10.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r8.xyzw
					add r8.xyzw, r22.xyzw, r8.xyzw
					mad r9.xyzw, r5.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r3.xyzw
					mad r9.xyzw, -r6.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r9.xyzw
					add r9.xyzw, r8.xyzw, r9.xyzw
					mad r10.xyzw, r6.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r3.xyzw
					mad r8.xyzw, r5.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r8.xyzw
					mad r8.xyzw, -r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r10.xyzw
					add r3.xyzw, -r3.xyzw, r6.xyzw
					mul r3.xyzw, r1.wwww, r3.xyzw
					mul r6.xyzw, r9.xyzw, r24.wwww
					mul r6.xyzw, r1.wwww, r6.xyzw
					mul r8.xyzw, r8.xyzw, r24.wwww
					mad r6.xyzw, r6.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r8.xyzw
					mad r3.xyzw, r3.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					add r3.xyzw, r5.wxyz, r3.wxyz
					sample r5.xyzw, r2.zwzz, t1.xyzw, s1
					sample r6.xyzw, r4.xyxx, t1.xyzw, s1
					sample r4.xyzw, r4.zwzz, t1.xyzw, s1
					sample r8.xyzw, r7.xyxx, t1.xyzw, s1
					sample r7.xyzw, r7.zwzz, t1.xyzw, s1
					sample r2.xyzw, r2.xyxx, t1.xyzw, s1
					sample r9.xyzw, r11.xyxx, t1.xyzw, s1
					sample r10.xyzw, r11.zwzz, t1.xyzw, s1
					sample r11.xyzw, r14.xyxx, t1.xyzw, s1
					sample r12.xyzw, r14.zwzz, t1.xyzw, s1
					sample r13.xyzw, r1.xyxx, t1.xyzw, s1
					sample r14.xyzw, r18.xyxx, t1.xyzw, s1
					sample r15.xyzw, r18.zwzz, t1.xyzw, s1
					sample r16.xyzw, r21.xyxx, t1.xyzw, s1
					sample r17.xyzw, r21.zwzz, t1.xyzw, s1
					sample r18.xyzw, r24.xyxx, t1.xyzw, s1
					mad r19.xyz, r6.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), -r5.xyzx
					mad r19.xyz, -r4.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), r19.xyzx
					add r19.xyz, r8.xyzx, r19.xyzx
					mad r20.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r5.xyzx
					mad r8.xyz, r6.xyzx, l(5.000000, 5.000000, 5.000000, 0.000000), r8.xyzx
					mad r8.xyz, -r8.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r20.xyzx
					add r4.xyz, r4.xyzx, -r5.xyzx
					mul r4.xyz, r1.zzzz, r4.xyzx
					mul r5.xyz, r19.xyzx, r24.zzzz
					mul r5.xyz, r1.zzzz, r5.xyzx
					mul r8.xyz, r8.xyzx, r24.zzzz
					mad r5.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r8.xyzx
					mad r4.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r5.xyzx
					add r4.xyz, r6.xyzx, r4.xyzx
					mad r5.xyz, r2.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), -r7.xyzx
					mad r5.xyz, -r9.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), r5.xyzx
					add r5.xyz, r10.xyzx, r5.xyzx
					mad r6.xyz, r9.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r7.xyzx
					mad r8.xyz, r2.xyzx, l(5.000000, 5.000000, 5.000000, 0.000000), r10.xyzx
					mad r6.xyz, -r8.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r6.xyzx
					add r7.xyz, -r7.xyzx, r9.xyzx
					mul r7.xyz, r1.zzzz, r7.xyzx
					mul r5.xyz, r5.xyzx, r24.zzzz
					mul r5.xyz, r1.zzzz, r5.xyzx
					mul r6.xyz, r6.xyzx, r24.zzzz
					mad r5.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r6.xyzx
					mad r5.xyz, r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r5.xyzx
					add r2.xyz, r2.xyzx, r5.xyzx
					mad r5.xyz, r12.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), -r11.xyzx
					mad r5.xyz, -r13.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), r5.xyzx
					add r5.xyz, r14.xyzx, r5.xyzx
					mad r6.xyz, r13.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r11.xyzx
					mad r7.xyz, r12.xyzx, l(5.000000, 5.000000, 5.000000, 0.000000), r14.xyzx
					mad r6.xyz, -r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r6.xyzx
					add r7.xyz, -r11.xyzx, r13.xyzx
					mul r7.xyz, r1.zzzz, r7.xyzx
					mul r5.xyz, r5.xyzx, r24.zzzz
					mul r5.xyz, r1.zzzz, r5.xyzx
					mul r6.xyz, r6.xyzx, r24.zzzz
					mad r5.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r6.xyzx
					mad r5.xyz, r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r5.xyzx
					add r5.xyz, r12.xyzx, r5.xyzx
					mad r6.xyz, r16.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), -r15.xyzx
					mad r6.xyz, -r17.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), r6.xyzx
					add r6.xyz, r18.xyzx, r6.xyzx
					mad r7.xyz, r17.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r15.xyzx
					mad r8.xyz, r16.xyzx, l(5.000000, 5.000000, 5.000000, 0.000000), r18.xyzx
					mad r7.xyz, -r8.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r7.xyzx
					add r8.xyz, -r15.xyzx, r17.xyzx
					mul r8.xyz, r1.zzzz, r8.xyzx
					mul r6.xyz, r6.xyzx, r24.zzzz
					mul r1.xyz, r1.zzzz, r6.xyzx
					mul r6.xyz, r7.xyzx, r24.zzzz
					mad r1.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r6.xyzx
					mad r1.xyz, r8.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					add r1.xyz, r16.xyzx, r1.xyzx
					mad r6.xyz, r2.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), -r4.xyzx
					mad r6.xyz, -r5.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), r6.xyzx
					add r6.xyz, r1.xyzx, r6.xyzx
					mad r7.xyz, r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r4.xyzx
					mad r1.xyz, r2.xyzx, l(5.000000, 5.000000, 5.000000, 0.000000), r1.xyzx
					mad r1.xyz, -r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r7.xyzx
					add r4.xyz, -r4.xyzx, r5.xyzx
					mul r4.xyz, r1.wwww, r4.xyzx
					mul r5.xyz, r6.xyzx, r24.wwww
					mul r5.xyz, r1.wwww, r5.xyzx
					mul r1.xyz, r1.xyzx, r24.wwww
					mad r1.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					mad r1.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					add r1.xyz, r2.xyzx, r1.xyzx
					add r1.y, r1.y, l(-0.000010)
					lt r1.y, r1.y, l(0.000000)
					discard_nz r1.y
					mov_sat r3.x, r3.x
					log r1.y, r3.x
					mul r1.y, r1.y, l(2.200000)
					exp r1.y, r1.y
					ftoi r1.w, cb0[6].w
					mul r0.xyzw, r0.xyzw, cb0[6].zzzz
					mul r0.xyzw, r0.xyzw, l(0.314159, 0.314159, 1.973921, 1.973921)
					ge r2.xyzw, r0.zwzw, -r0.zwzw
					movc r2.xyzw, r2.xyzw, l(6.283185,6.283185,0.159155,0.159155), l(-6.283185,-6.283185,-0.159155,-0.159155)
					mul r0.xy, r0.xyxx, r2.zwzz
					frc r0.xy, r0.xyxx
					mad r0.xy, r2.xyxx, r0.xyxx, l(-250.000000, -250.000000, 0.000000, 0.000000)
					mul r0.z, cb0[6].y, cb1[0].x
					mov r2.x, l(1.000000)
					mov r2.yz, r0.xxyx
					mov r0.w, l(0)
					loop 
					  ige r2.w, r0.w, r1.w
					  breakc_nz r2.w
					  iadd r0.w, r0.w, l(1)
					  itof r2.w, r0.w
					  div r2.w, l(3.500000), r2.w
					  add r2.w, -r2.w, l(1.000000)
					  mad r3.x, r0.z, r2.w, -r2.y
					  sincos null, r3.x, r3.x
					  mad r4.x, r0.z, r2.w, r2.z
					  sincos r4.x, null, r4.x
					  add r4.x, r3.x, r4.x
					  mad r3.x, r0.z, r2.w, -r2.z
					  sincos r3.x, null, r3.x
					  mad r4.z, r0.z, r2.w, r2.y
					  sincos null, r4.z, r4.z
					  add r4.y, r3.x, r4.z
					  add r2.yz, r0.xxyx, r4.xxyx
					  mad r4.xy, r0.zzzz, r2.wwww, r2.yzyy
					  sincos r2.w, null, r4.x
					  mul r2.w, r2.w, l(200.000000)
					  div r5.x, r0.x, r2.w
					  sincos null, r2.w, r4.y
					  mul r2.w, r2.w, l(200.000000)
					  div r5.y, r0.y, r2.w
					  dp2 r2.w, r5.xyxx, r5.xyxx
					  sqrt r2.w, r2.w
					  div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
					  add r2.x, r2.w, r2.x
					endloop 
					round_z r0.x, cb0[6].w
					div r0.x, r2.x, r0.x
					log r0.x, r0.x
					mul r0.x, r0.x, l(1.400000)
					exp r0.x, r0.x
					add r0.x, -r0.x, l(1.170000)
					mul r0.x, |r0.x|, |r0.x|
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r0.x
					add r0.y, -r1.z, r1.x
					add_sat r0.y, r1.y, r0.y
					add r0.z, -cb0[5].w, |cb0[11].w|
					add r0.w, -cb0[5].w, cb0[6].x
					div_sat r0.z, r0.z, r0.w
					add r0.w, -cb0[5].y, cb0[5].z
					mad r0.z, r0.z, r0.w, cb0[5].y
					add r0.w, -r0.z, cb0[5].x
					max r0.w, r0.w, l(0.000000)
					add r0.z, r0.z, cb0[5].x
					min r0.z, r0.z, l(1.000000)
					add r0.z, -r0.w, r0.z
					add r0.w, -r0.w, r0.y
					div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
					mul_sat r0.z, r0.z, r0.w
					mad r0.w, r0.z, l(-2.000000), l(3.000000)
					mul r0.z, r0.z, r0.z
					mul r1.y, r0.z, r0.w
					mad r0.y, r0.w, r0.z, -r0.y
					add_sat r0.y, -|r1.x|, r0.y
					mad r0.x, cb0[7].x, r0.x, l(0.500000)
					mad o0.xyz, r3.yzwy, r0.xxxx, r0.yyyy
					mul o0.w, r1.y, cb0[8].y
					mov o1.xyzw, l(0,0,0,0)
					mov o2.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "ENABLE_CAUSTIC" "_SAMPLEFILTERING_BILINEAR" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v3.xy
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_temps 7
					mad r0.xyzw, cb0[15].zwzw, l(0.500000, 0.500000, -0.500000, 0.500000), v3.xyxy
					mad r1.xyzw, cb0[15].zwzw, l(0.500000, -0.500000, -0.500000, -0.500000), v3.xyxy
					sample r2.xyzw, r0.xyxx, t0.xyzw, s0
					sample r3.xyzw, r0.zwzz, t0.xyzw, s0
					sample r4.xyzw, r1.xyxx, t0.xyzw, s0
					sample r5.xyzw, r1.zwzz, t0.xyzw, s0
					div r6.xy, r1.zwzz, cb0[15].zwzz
					frc r6.xy, r6.xyxx
					add r2.xyzw, r2.xyzw, -r3.xyzw
					mad r2.xyzw, r6.xxxx, r2.xyzw, r3.xyzw
					add r3.xyzw, r4.xyzw, -r5.xyzw
					mad r3.xyzw, r6.xxxx, r3.xyzw, r5.xyzw
					add r2.xyzw, r2.xyzw, -r3.xyzw
					mad r2.xyzw, r6.yyyy, r2.wxyz, r3.wxyz
					sample r3.xyzw, r0.xyxx, t1.xyzw, s1
					sample r0.xyzw, r0.zwzz, t1.xyzw, s1
					sample r4.xyzw, r1.xyxx, t1.xyzw, s1
					sample r1.xyzw, r1.zwzz, t1.xyzw, s1
					add r3.xyz, -r0.xyzx, r3.xyzx
					mad r0.xyz, r6.xxxx, r3.xyzx, r0.xyzx
					add r3.xyz, -r1.xyzx, r4.xyzx
					mad r1.xyz, r6.xxxx, r3.xyzx, r1.xyzx
					add r0.xyz, r0.xyzx, -r1.xyzx
					mad r0.xyz, r6.yyyy, r0.xyzx, r1.xyzx
					add r0.y, r0.y, l(-0.000010)
					lt r0.y, r0.y, l(0.000000)
					discard_nz r0.y
					mov_sat r2.x, r2.x
					log r0.y, r2.x
					mul r0.y, r0.y, l(2.200000)
					exp r0.y, r0.y
					ftoi r0.w, cb0[6].w
					div r1.xyzw, v3.xyxy, cb0[15].zwzw
					mul r1.xyzw, r1.xyzw, cb0[6].zzzz
					mul r1.xyzw, r1.xyzw, l(0.314159, 0.314159, 1.973921, 1.973921)
					ge r3.xyzw, r1.zwzw, -r1.zwzw
					movc r3.xyzw, r3.xyzw, l(6.283185,6.283185,0.159155,0.159155), l(-6.283185,-6.283185,-0.159155,-0.159155)
					mul r1.xy, r1.xyxx, r3.zwzz
					frc r1.xy, r1.xyxx
					mad r1.xy, r3.xyxx, r1.xyxx, l(-250.000000, -250.000000, 0.000000, 0.000000)
					mul r1.z, cb0[6].y, cb1[0].x
					mov r3.x, l(1.000000)
					mov r3.yz, r1.xxyx
					mov r1.w, l(0)
					loop 
					  ige r2.x, r1.w, r0.w
					  breakc_nz r2.x
					  iadd r1.w, r1.w, l(1)
					  itof r2.x, r1.w
					  div r2.x, l(3.500000), r2.x
					  add r2.x, -r2.x, l(1.000000)
					  mad r3.w, r1.z, r2.x, -r3.y
					  sincos null, r3.w, r3.w
					  mad r4.x, r1.z, r2.x, r3.z
					  sincos r4.x, null, r4.x
					  add r4.x, r3.w, r4.x
					  mad r3.w, r1.z, r2.x, -r3.z
					  sincos r3.w, null, r3.w
					  mad r4.z, r1.z, r2.x, r3.y
					  sincos null, r4.z, r4.z
					  add r4.y, r3.w, r4.z
					  add r3.yz, r1.xxyx, r4.xxyx
					  mad r4.xy, r1.zzzz, r2.xxxx, r3.yzyy
					  sincos r2.x, null, r4.x
					  mul r2.x, r2.x, l(200.000000)
					  div r5.x, r1.x, r2.x
					  sincos null, r2.x, r4.y
					  mul r2.x, r2.x, l(200.000000)
					  div r5.y, r1.y, r2.x
					  dp2 r2.x, r5.xyxx, r5.xyxx
					  sqrt r2.x, r2.x
					  div r2.x, l(1.000000, 1.000000, 1.000000, 1.000000), r2.x
					  add r3.x, r2.x, r3.x
					endloop 
					round_z r0.w, cb0[6].w
					div r0.w, r3.x, r0.w
					log r0.w, r0.w
					mul r0.w, r0.w, l(1.400000)
					exp r0.w, r0.w
					add r0.w, -r0.w, l(1.170000)
					mul r0.w, |r0.w|, |r0.w|
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r0.w
					add r0.z, -r0.z, r0.x
					add_sat r0.y, r0.y, r0.z
					add r0.z, -cb0[5].w, |cb0[11].w|
					add r1.x, -cb0[5].w, cb0[6].x
					div_sat r0.z, r0.z, r1.x
					add r1.x, -cb0[5].y, cb0[5].z
					mad r0.z, r0.z, r1.x, cb0[5].y
					add r1.x, -r0.z, cb0[5].x
					max r1.x, r1.x, l(0.000000)
					add r0.z, r0.z, cb0[5].x
					min r0.z, r0.z, l(1.000000)
					add r0.z, -r1.x, r0.z
					add r1.x, r0.y, -r1.x
					div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
					mul_sat r0.z, r0.z, r1.x
					mad r1.x, r0.z, l(-2.000000), l(3.000000)
					mul r0.z, r0.z, r0.z
					mul r1.y, r0.z, r1.x
					mad r0.y, r1.x, r0.z, -r0.y
					add_sat r0.x, -|r0.x|, r0.y
					mad r0.y, cb0[7].x, r0.w, l(0.500000)
					mad o0.xyz, r2.yzwy, r0.yyyy, r0.xxxx
					mul o0.w, r1.y, cb0[8].y
					mov o1.xyzw, l(0,0,0,0)
					mov o2.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "ENABLE_CAUSTIC" "_SAMPLEFILTERING_NONE" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v3.xy
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_temps 6
					sample r0.xyzw, v3.xyxx, t0.wxyz, s0
					sample r1.xyzw, v3.xyxx, t1.xyzw, s1
					add r1.y, r1.y, l(-0.000010)
					lt r1.y, r1.y, l(0.000000)
					discard_nz r1.y
					mov_sat r0.x, r0.x
					log r0.x, r0.x
					mul r0.x, r0.x, l(2.200000)
					exp r0.x, r0.x
					ftoi r1.y, cb0[6].w
					div r2.xyzw, v3.xyxy, cb0[15].zwzw
					mul r2.xyzw, r2.xyzw, cb0[6].zzzz
					mul r2.xyzw, r2.xyzw, l(0.314159, 0.314159, 1.973921, 1.973921)
					ge r3.xyzw, r2.zwzw, -r2.zwzw
					movc r3.xyzw, r3.xyzw, l(6.283185,6.283185,0.159155,0.159155), l(-6.283185,-6.283185,-0.159155,-0.159155)
					mul r2.xy, r2.xyxx, r3.zwzz
					frc r2.xy, r2.xyxx
					mad r2.xy, r3.xyxx, r2.xyxx, l(-250.000000, -250.000000, 0.000000, 0.000000)
					mul r1.w, cb0[6].y, cb1[0].x
					mov r3.x, l(1.000000)
					mov r3.yz, r2.xxyx
					mov r2.z, l(0)
					loop 
					  ige r2.w, r2.z, r1.y
					  breakc_nz r2.w
					  iadd r2.z, r2.z, l(1)
					  itof r2.w, r2.z
					  div r2.w, l(3.500000), r2.w
					  add r2.w, -r2.w, l(1.000000)
					  mad r3.w, r1.w, r2.w, -r3.y
					  sincos null, r3.w, r3.w
					  mad r4.x, r1.w, r2.w, r3.z
					  sincos r4.x, null, r4.x
					  add r4.x, r3.w, r4.x
					  mad r3.w, r1.w, r2.w, -r3.z
					  sincos r3.w, null, r3.w
					  mad r4.z, r1.w, r2.w, r3.y
					  sincos null, r4.z, r4.z
					  add r4.y, r3.w, r4.z
					  add r3.yz, r2.xxyx, r4.xxyx
					  mad r4.xy, r1.wwww, r2.wwww, r3.yzyy
					  sincos r2.w, null, r4.x
					  mul r2.w, r2.w, l(200.000000)
					  div r5.x, r2.x, r2.w
					  sincos null, r2.w, r4.y
					  mul r2.w, r2.w, l(200.000000)
					  div r5.y, r2.y, r2.w
					  dp2 r2.w, r5.xyxx, r5.xyxx
					  sqrt r2.w, r2.w
					  div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
					  add r3.x, r2.w, r3.x
					endloop 
					round_z r1.y, cb0[6].w
					div r1.y, r3.x, r1.y
					log r1.y, r1.y
					mul r1.y, r1.y, l(1.400000)
					exp r1.y, r1.y
					add r1.y, -r1.y, l(1.170000)
					mul r1.y, |r1.y|, |r1.y|
					mul r1.y, r1.y, r1.y
					mul r1.y, r1.y, r1.y
					add r1.z, -r1.z, r1.x
					add_sat r0.x, r0.x, r1.z
					add r1.z, -cb0[5].w, |cb0[11].w|
					add r1.w, -cb0[5].w, cb0[6].x
					div_sat r1.z, r1.z, r1.w
					add r1.w, -cb0[5].y, cb0[5].z
					mad r1.z, r1.z, r1.w, cb0[5].y
					add r1.w, -r1.z, cb0[5].x
					max r1.w, r1.w, l(0.000000)
					add r1.z, r1.z, cb0[5].x
					min r1.z, r1.z, l(1.000000)
					add r1.z, -r1.w, r1.z
					add r1.w, r0.x, -r1.w
					div r1.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
					mul_sat r1.z, r1.z, r1.w
					mad r1.w, r1.z, l(-2.000000), l(3.000000)
					mul r1.z, r1.z, r1.z
					mul r2.x, r1.z, r1.w
					mad r0.x, r1.w, r1.z, -r0.x
					add_sat r0.x, -|r1.x|, r0.x
					mad r1.x, cb0[7].x, r1.y, l(0.500000)
					mad o0.xyz, r0.yzwy, r1.xxxx, r0.xxxx
					mul o0.w, r2.x, cb0[8].y
					mov o1.xyzw, l(0,0,0,0)
					mov o2.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "ENABLE_CAUSTIC" "ENABLE_WAVE" "_SAMPLEFILTERING_BICUBIC_HERMITE" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v3.xy
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_temps 28
					div r0.xyzw, v3.xyxy, cb0[15].zwzw
					add r1.xy, r0.zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
					frc r1.zw, r1.xxxy
					round_ni r1.xy, r1.xyxx
					add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					mul r2.xy, r1.xyxx, cb0[15].zwzz
					mad r2.zw, r1.xxxy, cb0[15].zzzw, -cb0[15].zzzw
					sample r3.xyzw, r2.zwzz, t0.xyzw, s0
					mad r4.xyzw, cb0[15].zwzw, l(0.000000, -1.000000, 1.000000, -1.000000), r2.xyxy
					sample r5.xyzw, r4.xyxx, t0.xyzw, s0
					sample r6.xyzw, r4.zwzz, t0.xyzw, s0
					mad r7.xyzw, cb0[15].zwzw, l(2.000000, -1.000000, -1.000000, 0.000000), r2.xyxy
					sample r8.xyzw, r7.xyxx, t0.xyzw, s0
					sample r9.xyzw, r7.zwzz, t0.xyzw, s0
					sample r10.xyzw, r2.xyxx, t0.xyzw, s0
					mad r11.xyzw, cb0[15].zwzw, l(1.000000, 0.000000, 2.000000, 0.000000), r2.xyxy
					sample r12.xyzw, r11.xyxx, t0.xyzw, s0
					sample r13.xyzw, r11.zwzz, t0.xyzw, s0
					mad r14.xyzw, cb0[15].zwzw, l(-1.000000, 1.000000, 0.000000, 1.000000), r2.xyxy
					sample r15.xyzw, r14.xyxx, t0.xyzw, s0
					sample r16.xyzw, r14.zwzz, t0.xyzw, s0
					mad r1.xy, r1.xyxx, cb0[15].zwzz, cb0[15].zwzz
					sample r17.xyzw, r1.xyxx, t0.xyzw, s0
					mad r18.xyzw, cb0[15].zwzw, l(2.000000, 1.000000, -1.000000, 2.000000), r2.xyxy
					sample r19.xyzw, r18.xyxx, t0.xyzw, s0
					sample r20.xyzw, r18.zwzz, t0.xyzw, s0
					mad r21.xyzw, cb0[15].zwzw, l(0.000000, 2.000000, 1.000000, 2.000000), r2.xyxy
					sample r22.xyzw, r21.xyxx, t0.xyzw, s0
					sample r23.xyzw, r21.zwzz, t0.xyzw, s0
					mad r24.xy, cb0[15].zwzz, l(2.000000, 2.000000, 0.000000, 0.000000), r2.xyxx
					sample r25.xyzw, r24.xyxx, t0.xyzw, s0
					mad r26.xyzw, r5.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r3.xyzw
					mad r26.xyzw, -r6.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r26.xyzw
					add r26.xyzw, r8.xyzw, r26.xyzw
					mul r24.zw, r1.zzzw, r1.zzzw
					mad r27.xyzw, r6.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r3.xyzw
					mad r8.xyzw, r5.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r8.xyzw
					mad r8.xyzw, -r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r27.xyzw
					add r3.xyzw, -r3.xyzw, r6.xyzw
					mul r3.xyzw, r1.zzzz, r3.xyzw
					mul r6.xyzw, r26.xyzw, r24.zzzz
					mul r6.xyzw, r1.zzzz, r6.xyzw
					mul r8.xyzw, r8.xyzw, r24.zzzz
					mad r6.xyzw, r6.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r8.xyzw
					mad r3.xyzw, r3.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					add r3.xyzw, r5.xyzw, r3.xyzw
					mad r5.xyzw, r10.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r9.xyzw
					mad r5.xyzw, -r12.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r5.xyzw
					add r5.xyzw, r13.xyzw, r5.xyzw
					mad r6.xyzw, r12.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r9.xyzw
					mad r8.xyzw, r10.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r13.xyzw
					mad r6.xyzw, -r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					add r8.xyzw, -r9.xyzw, r12.xyzw
					mul r8.xyzw, r1.zzzz, r8.xyzw
					mul r5.xyzw, r5.xyzw, r24.zzzz
					mul r5.xyzw, r1.zzzz, r5.xyzw
					mul r6.xyzw, r6.xyzw, r24.zzzz
					mad r5.xyzw, r5.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					mad r5.xyzw, r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r5.xyzw
					add r5.xyzw, r10.xyzw, r5.xyzw
					mad r6.xyzw, r16.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r15.xyzw
					mad r6.xyzw, -r17.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r6.xyzw
					add r6.xyzw, r19.xyzw, r6.xyzw
					mad r8.xyzw, r17.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r15.xyzw
					mad r9.xyzw, r16.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r19.xyzw
					mad r8.xyzw, -r9.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r8.xyzw
					add r9.xyzw, -r15.xyzw, r17.xyzw
					mul r9.xyzw, r1.zzzz, r9.xyzw
					mul r6.xyzw, r6.xyzw, r24.zzzz
					mul r6.xyzw, r1.zzzz, r6.xyzw
					mul r8.xyzw, r8.xyzw, r24.zzzz
					mad r6.xyzw, r6.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r8.xyzw
					mad r6.xyzw, r9.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					add r6.xyzw, r16.xyzw, r6.xyzw
					mad r8.xyzw, r22.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r20.xyzw
					mad r8.xyzw, -r23.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r8.xyzw
					add r8.xyzw, r25.xyzw, r8.xyzw
					mad r9.xyzw, r23.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r20.xyzw
					mad r10.xyzw, r22.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r25.xyzw
					mad r9.xyzw, -r10.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r9.xyzw
					add r10.xyzw, -r20.xyzw, r23.xyzw
					mul r10.xyzw, r1.zzzz, r10.xyzw
					mul r8.xyzw, r8.xyzw, r24.zzzz
					mul r8.xyzw, r1.zzzz, r8.xyzw
					mul r9.xyzw, r9.xyzw, r24.zzzz
					mad r8.xyzw, r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r9.xyzw
					mad r8.xyzw, r10.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r8.xyzw
					add r8.xyzw, r22.xyzw, r8.xyzw
					mad r9.xyzw, r5.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r3.xyzw
					mad r9.xyzw, -r6.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r9.xyzw
					add r9.xyzw, r8.xyzw, r9.xyzw
					mad r10.xyzw, r6.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r3.xyzw
					mad r8.xyzw, r5.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r8.xyzw
					mad r8.xyzw, -r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r10.xyzw
					add r3.xyzw, -r3.xyzw, r6.xyzw
					mul r3.xyzw, r1.wwww, r3.xyzw
					mul r6.xyzw, r9.xyzw, r24.wwww
					mul r6.xyzw, r1.wwww, r6.xyzw
					mul r8.xyzw, r8.xyzw, r24.wwww
					mad r6.xyzw, r6.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r8.xyzw
					mad r3.xyzw, r3.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					add r3.xyzw, r5.wxyz, r3.wxyz
					sample r5.xyzw, r2.zwzz, t1.xyzw, s1
					sample r6.xyzw, r4.xyxx, t1.xyzw, s1
					sample r4.xyzw, r4.zwzz, t1.xyzw, s1
					sample r8.xyzw, r7.xyxx, t1.xyzw, s1
					sample r7.xyzw, r7.zwzz, t1.xyzw, s1
					sample r2.xyzw, r2.xyxx, t1.xyzw, s1
					sample r9.xyzw, r11.xyxx, t1.xyzw, s1
					sample r10.xyzw, r11.zwzz, t1.xyzw, s1
					sample r11.xyzw, r14.xyxx, t1.xyzw, s1
					sample r12.xyzw, r14.zwzz, t1.xyzw, s1
					sample r13.xyzw, r1.xyxx, t1.xyzw, s1
					sample r14.xyzw, r18.xyxx, t1.xyzw, s1
					sample r15.xyzw, r18.zwzz, t1.xyzw, s1
					sample r16.xyzw, r21.xyxx, t1.xyzw, s1
					sample r17.xyzw, r21.zwzz, t1.xyzw, s1
					sample r18.xyzw, r24.xyxx, t1.xyzw, s1
					mad r19.xyzw, r6.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r5.xyzw
					mad r19.xyzw, -r4.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r19.xyzw
					add r19.xyzw, r8.xyzw, r19.xyzw
					mad r20.xyzw, r4.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r5.xyzw
					mad r8.xyzw, r6.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r8.xyzw
					mad r8.xyzw, -r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r20.xyzw
					add r4.xyzw, r4.xyzw, -r5.xyzw
					mul r4.xyzw, r1.zzzz, r4.xyzw
					mul r5.xyzw, r19.xyzw, r24.zzzz
					mul r5.xyzw, r1.zzzz, r5.xyzw
					mul r8.xyzw, r8.xyzw, r24.zzzz
					mad r5.xyzw, r5.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r8.xyzw
					mad r4.xyzw, r4.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r5.xyzw
					add r4.xyzw, r6.xyzw, r4.xyzw
					mad r5.xyzw, r2.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r7.xyzw
					mad r5.xyzw, -r9.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r5.xyzw
					add r5.xyzw, r10.xyzw, r5.xyzw
					mad r6.xyzw, r9.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r7.xyzw
					mad r8.xyzw, r2.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r10.xyzw
					mad r6.xyzw, -r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					add r7.xyzw, -r7.xyzw, r9.xyzw
					mul r7.xyzw, r1.zzzz, r7.xyzw
					mul r5.xyzw, r5.xyzw, r24.zzzz
					mul r5.xyzw, r1.zzzz, r5.xyzw
					mul r6.xyzw, r6.xyzw, r24.zzzz
					mad r5.xyzw, r5.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					mad r5.xyzw, r7.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r5.xyzw
					add r2.xyzw, r2.xyzw, r5.xyzw
					mad r5.xyzw, r12.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r11.xyzw
					mad r5.xyzw, -r13.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r5.xyzw
					add r5.xyzw, r14.xyzw, r5.xyzw
					mad r6.xyzw, r13.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r11.xyzw
					mad r7.xyzw, r12.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r14.xyzw
					mad r6.xyzw, -r7.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					add r7.xyzw, -r11.xyzw, r13.xyzw
					mul r7.xyzw, r1.zzzz, r7.xyzw
					mul r5.xyzw, r5.xyzw, r24.zzzz
					mul r5.xyzw, r1.zzzz, r5.xyzw
					mul r6.xyzw, r6.xyzw, r24.zzzz
					mad r5.xyzw, r5.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					mad r5.xyzw, r7.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r5.xyzw
					add r5.xyzw, r12.xyzw, r5.xyzw
					mad r6.xyzw, r16.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r15.xyzw
					mad r6.xyzw, -r17.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r6.xyzw
					add r6.xyzw, r18.xyzw, r6.xyzw
					mad r7.xyzw, r17.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r15.xyzw
					mad r8.xyzw, r16.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r18.xyzw
					mad r7.xyzw, -r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r7.xyzw
					add r8.xyzw, -r15.xyzw, r17.xyzw
					mul r8.xyzw, r1.zzzz, r8.xyzw
					mul r6.xyzw, r6.xyzw, r24.zzzz
					mul r6.xyzw, r1.zzzz, r6.xyzw
					mul r7.xyzw, r7.xyzw, r24.zzzz
					mad r6.xyzw, r6.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r7.xyzw
					mad r6.xyzw, r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					add r6.xyzw, r16.xyzw, r6.xyzw
					mad r7.xyzw, r2.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r4.xyzw
					mad r7.xyzw, -r5.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r7.xyzw
					add r7.xyzw, r6.xyzw, r7.xyzw
					mad r8.xyzw, r5.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r4.xyzw
					mad r6.xyzw, r2.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r6.xyzw
					mad r6.xyzw, -r6.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r8.xyzw
					add r4.xyzw, -r4.xyzw, r5.xyzw
					mul r4.xyzw, r1.wwww, r4.xyzw
					mul r5.xyzw, r7.xyzw, r24.wwww
					mul r1.xyzw, r1.wwww, r5.xyzw
					mul r5.xyzw, r6.xyzw, r24.wwww
					mad r1.xyzw, r1.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r5.xyzw
					mad r1.xyzw, r4.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r1.xyzw
					add r1.xyzw, r2.wxyz, r1.wxyz
					add r2.x, r1.z, l(-0.000010)
					lt r2.x, r2.x, l(0.000000)
					discard_nz r2.x
					mov_sat r3.x, r3.x
					log r2.x, r3.x
					mul r2.x, r2.x, l(2.200000)
					exp r2.x, r2.x
					mov_sat r1.x, r1.x
					ftoi r2.y, cb0[9].x
					mul r4.xyzw, r0.zwzw, cb0[8].wwww
					mul r4.xyzw, r4.xyzw, l(0.314159, 0.314159, 1.973921, 1.973921)
					ge r5.xyzw, r4.zwzw, -r4.zwzw
					movc r5.xyzw, r5.xyzw, l(6.283185,6.283185,0.159155,0.159155), l(-6.283185,-6.283185,-0.159155,-0.159155)
					mul r2.zw, r4.xxxy, r5.zzzw
					frc r2.zw, r2.zzzw
					mad r2.zw, r5.xxxy, r2.zzzw, l(0.000000, 0.000000, -250.000000, -250.000000)
					mul r3.x, cb0[8].z, cb1[0].x
					mov r4.yz, r2.zzwz
					mov r4.xw, l(1.000000,0,0,0)
					loop 
					  ige r5.x, r4.w, r2.y
					  breakc_nz r5.x
					  iadd r4.w, r4.w, l(1)
					  itof r5.x, r4.w
					  div r5.x, l(3.500000), r5.x
					  add r5.x, -r5.x, l(1.000000)
					  mad r5.y, r3.x, r5.x, -r4.y
					  sincos null, r5.y, r5.y
					  mad r5.z, r3.x, r5.x, r4.z
					  sincos r5.z, null, r5.z
					  add r6.x, r5.z, r5.y
					  mad r5.y, r3.x, r5.x, -r4.z
					  sincos r5.y, null, r5.y
					  mad r5.z, r3.x, r5.x, r4.y
					  sincos null, r5.z, r5.z
					  add r6.y, r5.z, r5.y
					  add r4.yz, r2.zzwz, r6.xxyx
					  mad r5.xy, r3.xxxx, r5.xxxx, r4.yzyy
					  sincos r5.x, null, r5.x
					  mul r5.x, r5.x, l(200.000000)
					  div r6.x, r2.z, r5.x
					  sincos null, r5.x, r5.y
					  mul r5.x, r5.x, l(200.000000)
					  div r6.y, r2.w, r5.x
					  dp2 r5.x, r6.xyxx, r6.xyxx
					  sqrt r5.x, r5.x
					  div r5.x, l(1.000000, 1.000000, 1.000000, 1.000000), r5.x
					  add r4.x, r4.x, r5.x
					endloop 
					round_z r2.y, cb0[9].x
					div r2.y, r4.x, r2.y
					log r2.y, r2.y
					mul r2.y, r2.y, l(1.400000)
					exp r2.y, r2.y
					add r2.y, -r2.y, l(1.170000)
					mul r2.y, |r2.y|, |r2.y|
					mul r2.y, r2.y, r2.y
					mul r2.y, r2.y, r2.y
					mul r2.y, r2.y, cb0[9].y
					ftoi r2.z, cb0[6].w
					mul r0.xyzw, r0.xyzw, cb0[6].zzzz
					mul r0.xyzw, r0.xyzw, l(0.314159, 0.314159, 1.973921, 1.973921)
					ge r4.xyzw, r0.zwzw, -r0.zwzw
					movc r4.xyzw, r4.xyzw, l(6.283185,6.283185,0.159155,0.159155), l(-6.283185,-6.283185,-0.159155,-0.159155)
					mul r0.xy, r0.xyxx, r4.zwzz
					frc r0.xy, r0.xyxx
					mad r0.xy, r4.xyxx, r0.xyxx, l(-250.000000, -250.000000, 0.000000, 0.000000)
					mul r0.z, cb0[6].y, cb1[0].x
					mov r4.x, l(1.000000)
					mov r4.yz, r0.xxyx
					mov r0.w, l(0)
					loop 
					  ige r2.w, r0.w, r2.z
					  breakc_nz r2.w
					  iadd r0.w, r0.w, l(1)
					  itof r2.w, r0.w
					  div r2.w, l(3.500000), r2.w
					  add r2.w, -r2.w, l(1.000000)
					  mad r3.x, r0.z, r2.w, -r4.y
					  sincos null, r3.x, r3.x
					  mad r4.w, r0.z, r2.w, r4.z
					  sincos r4.w, null, r4.w
					  add r5.x, r3.x, r4.w
					  mad r3.x, r0.z, r2.w, -r4.z
					  sincos r3.x, null, r3.x
					  mad r4.w, r0.z, r2.w, r4.y
					  sincos null, r4.w, r4.w
					  add r5.y, r3.x, r4.w
					  add r4.yz, r0.xxyx, r5.xxyx
					  mad r5.xy, r0.zzzz, r2.wwww, r4.yzyy
					  sincos r2.w, null, r5.x
					  mul r2.w, r2.w, l(200.000000)
					  div r6.x, r0.x, r2.w
					  sincos null, r2.w, r5.y
					  mul r2.w, r2.w, l(200.000000)
					  div r6.y, r0.y, r2.w
					  dp2 r2.w, r6.xyxx, r6.xyxx
					  sqrt r2.w, r2.w
					  div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
					  add r4.x, r2.w, r4.x
					endloop 
					round_z r0.x, cb0[6].w
					div r0.x, r4.x, r0.x
					log r0.x, r0.x
					mul r0.x, r0.x, l(1.400000)
					exp r0.x, r0.x
					add r0.x, -r0.x, l(1.170000)
					mul r0.x, |r0.x|, |r0.x|
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r0.x
					add r0.y, -r1.w, r1.y
					add r0.y, r2.x, r0.y
					mul r0.z, r1.x, r1.z
					mad_sat r0.y, r0.z, r2.y, r0.y
					add r0.z, -cb0[5].w, |cb0[11].w|
					add r0.w, -cb0[5].w, cb0[6].x
					div_sat r0.z, r0.z, r0.w
					add r0.w, -cb0[5].y, cb0[5].z
					mad r0.z, r0.z, r0.w, cb0[5].y
					add r0.w, -r0.z, cb0[5].x
					max r0.w, r0.w, l(0.000000)
					add r0.z, r0.z, cb0[5].x
					min r0.z, r0.z, l(1.000000)
					add r0.z, -r0.w, r0.z
					add r0.w, -r0.w, r0.y
					div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
					mul_sat r0.z, r0.z, r0.w
					mad r0.w, r0.z, l(-2.000000), l(3.000000)
					mul r0.z, r0.z, r0.z
					mul r1.x, r0.z, r0.w
					mad r0.y, r0.w, r0.z, -r0.y
					add_sat r0.y, -|r1.y|, r0.y
					mad r0.x, cb0[7].x, r0.x, l(0.500000)
					mad o0.xyz, r3.yzwy, r0.xxxx, r0.yyyy
					mul o0.w, r1.x, cb0[8].y
					mov o1.xyzw, l(0,0,0,0)
					mov o2.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "ENABLE_CAUSTIC" "ENABLE_WAVE" "_SAMPLEFILTERING_BILINEAR" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v3.xy
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_temps 7
					mad r0.xyzw, cb0[15].zwzw, l(0.500000, 0.500000, -0.500000, 0.500000), v3.xyxy
					mad r1.xyzw, cb0[15].zwzw, l(0.500000, -0.500000, -0.500000, -0.500000), v3.xyxy
					sample r2.xyzw, r0.xyxx, t0.xyzw, s0
					sample r3.xyzw, r0.zwzz, t0.xyzw, s0
					sample r4.xyzw, r1.xyxx, t0.xyzw, s0
					sample r5.xyzw, r1.zwzz, t0.xyzw, s0
					div r6.xy, r1.zwzz, cb0[15].zwzz
					frc r6.xy, r6.xyxx
					add r2.xyzw, r2.xyzw, -r3.xyzw
					mad r2.xyzw, r6.xxxx, r2.xyzw, r3.xyzw
					add r3.xyzw, r4.xyzw, -r5.xyzw
					mad r3.xyzw, r6.xxxx, r3.xyzw, r5.xyzw
					add r2.xyzw, r2.xyzw, -r3.xyzw
					mad r2.xyzw, r6.yyyy, r2.wxyz, r3.wxyz
					sample r3.xyzw, r0.xyxx, t1.xyzw, s1
					sample r0.xyzw, r0.zwzz, t1.xyzw, s1
					sample r4.xyzw, r1.xyxx, t1.xyzw, s1
					sample r1.xyzw, r1.zwzz, t1.xyzw, s1
					add r3.xyzw, -r0.xyzw, r3.xyzw
					mad r0.xyzw, r6.xxxx, r3.xyzw, r0.xyzw
					add r3.xyzw, -r1.xyzw, r4.xyzw
					mad r1.xyzw, r6.xxxx, r3.xyzw, r1.xyzw
					add r0.xyzw, r0.xyzw, -r1.xyzw
					mad r0.xyzw, r6.yyyy, r0.wxyz, r1.wxyz
					add r1.x, r0.z, l(-0.000010)
					lt r1.x, r1.x, l(0.000000)
					discard_nz r1.x
					mov_sat r2.x, r2.x
					log r1.x, r2.x
					mul r1.x, r1.x, l(2.200000)
					exp r1.x, r1.x
					mov_sat r0.x, r0.x
					ftoi r1.y, cb0[9].x
					div r3.xyzw, v3.xyxy, cb0[15].zwzw
					mul r4.xyzw, r3.zwzw, cb0[8].wwww
					mul r4.xyzw, r4.xyzw, l(0.314159, 0.314159, 1.973921, 1.973921)
					ge r5.xyzw, r4.zwzw, -r4.zwzw
					movc r5.xyzw, r5.xyzw, l(6.283185,6.283185,0.159155,0.159155), l(-6.283185,-6.283185,-0.159155,-0.159155)
					mul r1.zw, r4.xxxy, r5.zzzw
					frc r1.zw, r1.zzzw
					mad r1.zw, r5.xxxy, r1.zzzw, l(0.000000, 0.000000, -250.000000, -250.000000)
					mul r2.x, cb0[8].z, cb1[0].x
					mov r4.yz, r1.zzwz
					mov r4.xw, l(1.000000,0,0,0)
					loop 
					  ige r5.x, r4.w, r1.y
					  breakc_nz r5.x
					  iadd r4.w, r4.w, l(1)
					  itof r5.x, r4.w
					  div r5.x, l(3.500000), r5.x
					  add r5.x, -r5.x, l(1.000000)
					  mad r5.y, r2.x, r5.x, -r4.y
					  sincos null, r5.y, r5.y
					  mad r5.z, r2.x, r5.x, r4.z
					  sincos r5.z, null, r5.z
					  add r6.x, r5.z, r5.y
					  mad r5.y, r2.x, r5.x, -r4.z
					  sincos r5.y, null, r5.y
					  mad r5.z, r2.x, r5.x, r4.y
					  sincos null, r5.z, r5.z
					  add r6.y, r5.z, r5.y
					  add r4.yz, r1.zzwz, r6.xxyx
					  mad r5.xy, r2.xxxx, r5.xxxx, r4.yzyy
					  sincos r5.x, null, r5.x
					  mul r5.x, r5.x, l(200.000000)
					  div r6.x, r1.z, r5.x
					  sincos null, r5.x, r5.y
					  mul r5.x, r5.x, l(200.000000)
					  div r6.y, r1.w, r5.x
					  dp2 r5.x, r6.xyxx, r6.xyxx
					  sqrt r5.x, r5.x
					  div r5.x, l(1.000000, 1.000000, 1.000000, 1.000000), r5.x
					  add r4.x, r4.x, r5.x
					endloop 
					round_z r1.y, cb0[9].x
					div r1.y, r4.x, r1.y
					log r1.y, r1.y
					mul r1.y, r1.y, l(1.400000)
					exp r1.y, r1.y
					add r1.y, -r1.y, l(1.170000)
					mul r1.y, |r1.y|, |r1.y|
					mul r1.y, r1.y, r1.y
					mul r1.y, r1.y, r1.y
					mul r1.y, r1.y, cb0[9].y
					ftoi r1.z, cb0[6].w
					mul r3.xyzw, r3.xyzw, cb0[6].zzzz
					mul r3.xyzw, r3.xyzw, l(0.314159, 0.314159, 1.973921, 1.973921)
					ge r4.xyzw, r3.zwzw, -r3.zwzw
					movc r4.xyzw, r4.xyzw, l(6.283185,6.283185,0.159155,0.159155), l(-6.283185,-6.283185,-0.159155,-0.159155)
					mul r3.xy, r3.xyxx, r4.zwzz
					frc r3.xy, r3.xyxx
					mad r3.xy, r4.xyxx, r3.xyxx, l(-250.000000, -250.000000, 0.000000, 0.000000)
					mul r1.w, cb0[6].y, cb1[0].x
					mov r4.x, l(1.000000)
					mov r4.yz, r3.xxyx
					mov r2.x, l(0)
					loop 
					  ige r3.z, r2.x, r1.z
					  breakc_nz r3.z
					  iadd r2.x, r2.x, l(1)
					  itof r3.z, r2.x
					  div r3.z, l(3.500000), r3.z
					  add r3.z, -r3.z, l(1.000000)
					  mad r3.w, r1.w, r3.z, -r4.y
					  sincos null, r3.w, r3.w
					  mad r4.w, r1.w, r3.z, r4.z
					  sincos r4.w, null, r4.w
					  add r5.x, r3.w, r4.w
					  mad r3.w, r1.w, r3.z, -r4.z
					  sincos r3.w, null, r3.w
					  mad r4.w, r1.w, r3.z, r4.y
					  sincos null, r4.w, r4.w
					  add r5.y, r3.w, r4.w
					  add r4.yz, r3.xxyx, r5.xxyx
					  mad r3.zw, r1.wwww, r3.zzzz, r4.yyyz
					  sincos r3.z, null, r3.z
					  mul r3.z, r3.z, l(200.000000)
					  div r5.x, r3.x, r3.z
					  sincos null, r3.z, r3.w
					  mul r3.z, r3.z, l(200.000000)
					  div r5.y, r3.y, r3.z
					  dp2 r3.z, r5.xyxx, r5.xyxx
					  sqrt r3.z, r3.z
					  div r3.z, l(1.000000, 1.000000, 1.000000, 1.000000), r3.z
					  add r4.x, r3.z, r4.x
					endloop 
					round_z r1.z, cb0[6].w
					div r1.z, r4.x, r1.z
					log r1.z, r1.z
					mul r1.z, r1.z, l(1.400000)
					exp r1.z, r1.z
					add r1.z, -r1.z, l(1.170000)
					mul r1.z, |r1.z|, |r1.z|
					mul r1.z, r1.z, r1.z
					mul r1.z, r1.z, r1.z
					add r0.w, -r0.w, r0.y
					add r0.w, r1.x, r0.w
					mul r0.x, r0.x, r0.z
					mad_sat r0.x, r0.x, r1.y, r0.w
					add r0.z, -cb0[5].w, |cb0[11].w|
					add r0.w, -cb0[5].w, cb0[6].x
					div_sat r0.z, r0.z, r0.w
					add r0.w, -cb0[5].y, cb0[5].z
					mad r0.z, r0.z, r0.w, cb0[5].y
					add r0.w, -r0.z, cb0[5].x
					max r0.w, r0.w, l(0.000000)
					add r0.z, r0.z, cb0[5].x
					min r0.z, r0.z, l(1.000000)
					add r0.z, -r0.w, r0.z
					add r0.w, -r0.w, r0.x
					div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
					mul_sat r0.z, r0.z, r0.w
					mad r0.w, r0.z, l(-2.000000), l(3.000000)
					mul r0.z, r0.z, r0.z
					mul r1.x, r0.z, r0.w
					mad r0.x, r0.w, r0.z, -r0.x
					add_sat r0.x, -|r0.y|, r0.x
					mad r0.y, cb0[7].x, r1.z, l(0.500000)
					mad o0.xyz, r2.yzwy, r0.yyyy, r0.xxxx
					mul o0.w, r1.x, cb0[8].y
					mov o1.xyzw, l(0,0,0,0)
					mov o2.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "ENABLE_CAUSTIC" "ENABLE_WAVE" "_SAMPLEFILTERING_NONE" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v3.xy
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_temps 7
					sample r0.xyzw, v3.xyxx, t0.wxyz, s0
					sample r1.xyzw, v3.xyxx, t1.wxyz, s1
					add r2.x, r1.z, l(-0.000010)
					lt r2.x, r2.x, l(0.000000)
					discard_nz r2.x
					mov_sat r0.x, r0.x
					log r0.x, r0.x
					mul r0.x, r0.x, l(2.200000)
					exp r0.x, r0.x
					mov_sat r1.x, r1.x
					ftoi r2.x, cb0[9].x
					div r3.xyzw, v3.xyxy, cb0[15].zwzw
					mul r4.xyzw, r3.zwzw, cb0[8].wwww
					mul r4.xyzw, r4.xyzw, l(0.314159, 0.314159, 1.973921, 1.973921)
					ge r5.xyzw, r4.zwzw, -r4.zwzw
					movc r5.xyzw, r5.xyzw, l(6.283185,6.283185,0.159155,0.159155), l(-6.283185,-6.283185,-0.159155,-0.159155)
					mul r2.yz, r4.xxyx, r5.zzwz
					frc r2.yz, r2.yyzy
					mad r2.yz, r5.xxyx, r2.yyzy, l(0.000000, -250.000000, -250.000000, 0.000000)
					mul r2.w, cb0[8].z, cb1[0].x
					mov r4.yz, r2.yyzy
					mov r4.xw, l(1.000000,0,0,0)
					loop 
					  ige r5.x, r4.w, r2.x
					  breakc_nz r5.x
					  iadd r4.w, r4.w, l(1)
					  itof r5.x, r4.w
					  div r5.x, l(3.500000), r5.x
					  add r5.x, -r5.x, l(1.000000)
					  mad r5.y, r2.w, r5.x, -r4.y
					  sincos null, r5.y, r5.y
					  mad r5.z, r2.w, r5.x, r4.z
					  sincos r5.z, null, r5.z
					  add r6.x, r5.z, r5.y
					  mad r5.y, r2.w, r5.x, -r4.z
					  sincos r5.y, null, r5.y
					  mad r5.z, r2.w, r5.x, r4.y
					  sincos null, r5.z, r5.z
					  add r6.y, r5.z, r5.y
					  add r4.yz, r2.yyzy, r6.xxyx
					  mad r5.xy, r2.wwww, r5.xxxx, r4.yzyy
					  sincos r5.x, null, r5.x
					  mul r5.x, r5.x, l(200.000000)
					  div r6.x, r2.y, r5.x
					  sincos null, r5.x, r5.y
					  mul r5.x, r5.x, l(200.000000)
					  div r6.y, r2.z, r5.x
					  dp2 r5.x, r6.xyxx, r6.xyxx
					  sqrt r5.x, r5.x
					  div r5.x, l(1.000000, 1.000000, 1.000000, 1.000000), r5.x
					  add r4.x, r4.x, r5.x
					endloop 
					round_z r2.x, cb0[9].x
					div r2.x, r4.x, r2.x
					log r2.x, r2.x
					mul r2.x, r2.x, l(1.400000)
					exp r2.x, r2.x
					add r2.x, -r2.x, l(1.170000)
					mul r2.x, |r2.x|, |r2.x|
					mul r2.x, r2.x, r2.x
					mul r2.x, r2.x, r2.x
					mul r2.x, r2.x, cb0[9].y
					ftoi r2.y, cb0[6].w
					mul r3.xyzw, r3.xyzw, cb0[6].zzzz
					mul r3.xyzw, r3.xyzw, l(0.314159, 0.314159, 1.973921, 1.973921)
					ge r4.xyzw, r3.zwzw, -r3.zwzw
					movc r4.xyzw, r4.xyzw, l(6.283185,6.283185,0.159155,0.159155), l(-6.283185,-6.283185,-0.159155,-0.159155)
					mul r2.zw, r3.xxxy, r4.zzzw
					frc r2.zw, r2.zzzw
					mad r2.zw, r4.xxxy, r2.zzzw, l(0.000000, 0.000000, -250.000000, -250.000000)
					mul r3.x, cb0[6].y, cb1[0].x
					mov r3.y, l(1.000000)
					mov r3.zw, r2.zzzw
					mov r4.x, l(0)
					loop 
					  ige r4.y, r4.x, r2.y
					  breakc_nz r4.y
					  iadd r4.x, r4.x, l(1)
					  itof r4.y, r4.x
					  div r4.y, l(3.500000), r4.y
					  add r4.y, -r4.y, l(1.000000)
					  mad r4.z, r3.x, r4.y, -r3.z
					  sincos null, r4.z, r4.z
					  mad r4.w, r3.x, r4.y, r3.w
					  sincos r4.w, null, r4.w
					  add r5.x, r4.w, r4.z
					  mad r4.z, r3.x, r4.y, -r3.w
					  sincos r4.z, null, r4.z
					  mad r4.w, r3.x, r4.y, r3.z
					  sincos null, r4.w, r4.w
					  add r5.y, r4.w, r4.z
					  add r3.zw, r2.zzzw, r5.xxxy
					  mad r4.yz, r3.xxxx, r4.yyyy, r3.zzwz
					  sincos r4.y, null, r4.y
					  mul r4.y, r4.y, l(200.000000)
					  div r5.x, r2.z, r4.y
					  sincos null, r4.y, r4.z
					  mul r4.y, r4.y, l(200.000000)
					  div r5.y, r2.w, r4.y
					  dp2 r4.y, r5.xyxx, r5.xyxx
					  sqrt r4.y, r4.y
					  div r4.y, l(1.000000, 1.000000, 1.000000, 1.000000), r4.y
					  add r3.y, r3.y, r4.y
					endloop 
					round_z r2.y, cb0[6].w
					div r2.y, r3.y, r2.y
					log r2.y, r2.y
					mul r2.y, r2.y, l(1.400000)
					exp r2.y, r2.y
					add r2.y, -r2.y, l(1.170000)
					mul r2.y, |r2.y|, |r2.y|
					mul r2.y, r2.y, r2.y
					mul r2.y, r2.y, r2.y
					add r1.w, -r1.w, r1.y
					add r0.x, r0.x, r1.w
					mul r1.x, r1.x, r1.z
					mad_sat r0.x, r1.x, r2.x, r0.x
					add r1.x, -cb0[5].w, |cb0[11].w|
					add r1.z, -cb0[5].w, cb0[6].x
					div_sat r1.x, r1.x, r1.z
					add r1.z, -cb0[5].y, cb0[5].z
					mad r1.x, r1.x, r1.z, cb0[5].y
					add r1.z, -r1.x, cb0[5].x
					max r1.z, r1.z, l(0.000000)
					add r1.x, r1.x, cb0[5].x
					min r1.x, r1.x, l(1.000000)
					add r1.x, -r1.z, r1.x
					add r1.z, r0.x, -r1.z
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r1.x, r1.x, r1.z
					mad r1.z, r1.x, l(-2.000000), l(3.000000)
					mul r1.x, r1.x, r1.x
					mul r1.w, r1.x, r1.z
					mad r0.x, r1.z, r1.x, -r0.x
					add_sat r0.x, -|r1.y|, r0.x
					mad r1.x, cb0[7].x, r2.y, l(0.500000)
					mad o0.xyz, r0.yzwy, r1.xxxx, r0.xxxx
					mul o0.w, r1.w, cb0[8].y
					mov o1.xyzw, l(0,0,0,0)
					mov o2.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "ENABLE_HEAT_HAZE" "_SAMPLEFILTERING_BICUBIC_HERMITE" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v3.xy
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_temps 27
					div r0.xy, v3.xyxx, cb0[15].zwzz
					add r0.xy, r0.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
					frc r0.zw, r0.xxxy
					round_ni r0.xy, r0.xyxx
					add r0.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					mul r1.xy, r0.xyxx, cb0[15].zwzz
					mad r1.zw, r0.xxxy, cb0[15].zzzw, -cb0[15].zzzw
					sample r2.xyzw, r1.zwzz, t0.xyzw, s0
					mad r3.xyzw, cb0[15].zwzw, l(0.000000, -1.000000, 1.000000, -1.000000), r1.xyxy
					sample r4.xyzw, r3.xyxx, t0.xyzw, s0
					sample r5.xyzw, r3.zwzz, t0.xyzw, s0
					mad r6.xyzw, cb0[15].zwzw, l(2.000000, -1.000000, -1.000000, 0.000000), r1.xyxy
					sample r7.xyzw, r6.xyxx, t0.xyzw, s0
					sample r8.xyzw, r6.zwzz, t0.xyzw, s0
					sample r9.xyzw, r1.xyxx, t0.xyzw, s0
					mad r10.xyzw, cb0[15].zwzw, l(1.000000, 0.000000, 2.000000, 0.000000), r1.xyxy
					sample r11.xyzw, r10.xyxx, t0.xyzw, s0
					sample r12.xyzw, r10.zwzz, t0.xyzw, s0
					mad r13.xyzw, cb0[15].zwzw, l(-1.000000, 1.000000, 0.000000, 1.000000), r1.xyxy
					sample r14.xyzw, r13.xyxx, t0.xyzw, s0
					sample r15.xyzw, r13.zwzz, t0.xyzw, s0
					mad r0.xy, r0.xyxx, cb0[15].zwzz, cb0[15].zwzz
					sample r16.xyzw, r0.xyxx, t0.xyzw, s0
					mad r17.xyzw, cb0[15].zwzw, l(2.000000, 1.000000, -1.000000, 2.000000), r1.xyxy
					sample r18.xyzw, r17.xyxx, t0.xyzw, s0
					sample r19.xyzw, r17.zwzz, t0.xyzw, s0
					mad r20.xyzw, cb0[15].zwzw, l(0.000000, 2.000000, 1.000000, 2.000000), r1.xyxy
					sample r21.xyzw, r20.xyxx, t0.xyzw, s0
					sample r22.xyzw, r20.zwzz, t0.xyzw, s0
					mad r23.xy, cb0[15].zwzz, l(2.000000, 2.000000, 0.000000, 0.000000), r1.xyxx
					sample r24.xyzw, r23.xyxx, t0.xyzw, s0
					mad r25.xyzw, r4.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r2.xyzw
					mad r25.xyzw, -r5.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r25.xyzw
					add r25.xyzw, r7.xyzw, r25.xyzw
					mul r23.zw, r0.zzzw, r0.zzzw
					mad r26.xyzw, r5.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r2.xyzw
					mad r7.xyzw, r4.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r7.xyzw
					mad r7.xyzw, -r7.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r26.xyzw
					add r2.xyzw, -r2.xyzw, r5.xyzw
					mul r2.xyzw, r0.zzzz, r2.xyzw
					mul r5.xyzw, r25.xyzw, r23.zzzz
					mul r5.xyzw, r0.zzzz, r5.xyzw
					mul r7.xyzw, r7.xyzw, r23.zzzz
					mad r5.xyzw, r5.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r7.xyzw
					mad r2.xyzw, r2.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r5.xyzw
					add r2.xyzw, r4.xyzw, r2.xyzw
					mad r4.xyzw, r9.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r8.xyzw
					mad r4.xyzw, -r11.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r4.xyzw
					add r4.xyzw, r12.xyzw, r4.xyzw
					mad r5.xyzw, r11.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r8.xyzw
					mad r7.xyzw, r9.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r12.xyzw
					mad r5.xyzw, -r7.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r5.xyzw
					add r7.xyzw, -r8.xyzw, r11.xyzw
					mul r7.xyzw, r0.zzzz, r7.xyzw
					mul r4.xyzw, r4.xyzw, r23.zzzz
					mul r4.xyzw, r0.zzzz, r4.xyzw
					mul r5.xyzw, r5.xyzw, r23.zzzz
					mad r4.xyzw, r4.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r5.xyzw
					mad r4.xyzw, r7.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r4.xyzw
					add r4.xyzw, r9.xyzw, r4.xyzw
					mad r5.xyzw, r15.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r14.xyzw
					mad r5.xyzw, -r16.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r5.xyzw
					add r5.xyzw, r18.xyzw, r5.xyzw
					mad r7.xyzw, r16.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r14.xyzw
					mad r8.xyzw, r15.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r18.xyzw
					mad r7.xyzw, -r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r7.xyzw
					add r8.xyzw, -r14.xyzw, r16.xyzw
					mul r8.xyzw, r0.zzzz, r8.xyzw
					mul r5.xyzw, r5.xyzw, r23.zzzz
					mul r5.xyzw, r0.zzzz, r5.xyzw
					mul r7.xyzw, r7.xyzw, r23.zzzz
					mad r5.xyzw, r5.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r7.xyzw
					mad r5.xyzw, r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r5.xyzw
					add r5.xyzw, r15.xyzw, r5.xyzw
					mad r7.xyzw, r21.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r19.xyzw
					mad r7.xyzw, -r22.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r7.xyzw
					add r7.xyzw, r24.xyzw, r7.xyzw
					mad r8.xyzw, r22.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r19.xyzw
					mad r9.xyzw, r21.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r24.xyzw
					mad r8.xyzw, -r9.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r8.xyzw
					add r9.xyzw, -r19.xyzw, r22.xyzw
					mul r9.xyzw, r0.zzzz, r9.xyzw
					mul r7.xyzw, r7.xyzw, r23.zzzz
					mul r7.xyzw, r0.zzzz, r7.xyzw
					mul r8.xyzw, r8.xyzw, r23.zzzz
					mad r7.xyzw, r7.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r8.xyzw
					mad r7.xyzw, r9.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r7.xyzw
					add r7.xyzw, r21.xyzw, r7.xyzw
					mad r8.xyzw, r4.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r2.xyzw
					mad r8.xyzw, -r5.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r8.xyzw
					add r8.xyzw, r7.xyzw, r8.xyzw
					mad r9.xyzw, r5.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r2.xyzw
					mad r7.xyzw, r4.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r7.xyzw
					mad r7.xyzw, -r7.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r9.xyzw
					add r2.xyzw, -r2.xyzw, r5.xyzw
					mul r2.xyzw, r0.wwww, r2.xyzw
					mul r5.xyzw, r8.xyzw, r23.wwww
					mul r5.xyzw, r0.wwww, r5.xyzw
					mul r7.xyzw, r7.xyzw, r23.wwww
					mad r5.xyzw, r5.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r7.xyzw
					mad r2.xyzw, r2.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r5.xyzw
					add r2.xyzw, r4.wxyz, r2.wxyz
					sample r4.xyzw, r1.zwzz, t1.xyzw, s2
					sample r5.xyzw, r3.xyxx, t1.xyzw, s2
					sample r3.xyzw, r3.zwzz, t1.xyzw, s2
					sample r7.xyzw, r6.xyxx, t1.xyzw, s2
					sample r6.xyzw, r6.zwzz, t1.xyzw, s2
					sample r1.xyzw, r1.xyxx, t1.xyzw, s2
					sample r8.xyzw, r10.xyxx, t1.xyzw, s2
					sample r9.xyzw, r10.zwzz, t1.xyzw, s2
					sample r10.xyzw, r13.xyxx, t1.xyzw, s2
					sample r11.xyzw, r13.zwzz, t1.xyzw, s2
					sample r12.xyzw, r0.xyxx, t1.xyzw, s2
					sample r13.xyzw, r17.xyxx, t1.xyzw, s2
					sample r14.xyzw, r17.zwzz, t1.xyzw, s2
					sample r15.xyzw, r20.xyxx, t1.xyzw, s2
					sample r16.xyzw, r20.zwzz, t1.xyzw, s2
					sample r17.xyzw, r23.xyxx, t1.xyzw, s2
					mad r18.xyz, r5.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), -r4.xyzx
					mad r18.xyz, -r3.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), r18.xyzx
					add r18.xyz, r7.xyzx, r18.xyzx
					mad r19.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r4.xyzx
					mad r7.xyz, r5.xyzx, l(5.000000, 5.000000, 5.000000, 0.000000), r7.xyzx
					mad r7.xyz, -r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r19.xyzx
					add r3.xyz, r3.xyzx, -r4.xyzx
					mul r3.xyz, r0.zzzz, r3.xyzx
					mul r4.xyz, r18.xyzx, r23.zzzz
					mul r4.xyz, r0.zzzz, r4.xyzx
					mul r7.xyz, r7.xyzx, r23.zzzz
					mad r4.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r7.xyzx
					mad r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r4.xyzx
					add r3.xyz, r5.xyzx, r3.xyzx
					mad r4.xyz, r1.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), -r6.xyzx
					mad r4.xyz, -r8.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), r4.xyzx
					add r4.xyz, r9.xyzx, r4.xyzx
					mad r5.xyz, r8.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r6.xyzx
					mad r7.xyz, r1.xyzx, l(5.000000, 5.000000, 5.000000, 0.000000), r9.xyzx
					mad r5.xyz, -r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r5.xyzx
					add r6.xyz, -r6.xyzx, r8.xyzx
					mul r6.xyz, r0.zzzz, r6.xyzx
					mul r4.xyz, r4.xyzx, r23.zzzz
					mul r4.xyz, r0.zzzz, r4.xyzx
					mul r5.xyz, r5.xyzx, r23.zzzz
					mad r4.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r5.xyzx
					mad r4.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r4.xyzx
					add r1.xyz, r1.xyzx, r4.xyzx
					mad r4.xyz, r11.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), -r10.xyzx
					mad r4.xyz, -r12.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), r4.xyzx
					add r4.xyz, r13.xyzx, r4.xyzx
					mad r5.xyz, r12.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r10.xyzx
					mad r6.xyz, r11.xyzx, l(5.000000, 5.000000, 5.000000, 0.000000), r13.xyzx
					mad r5.xyz, -r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r5.xyzx
					add r6.xyz, -r10.xyzx, r12.xyzx
					mul r6.xyz, r0.zzzz, r6.xyzx
					mul r4.xyz, r4.xyzx, r23.zzzz
					mul r4.xyz, r0.zzzz, r4.xyzx
					mul r5.xyz, r5.xyzx, r23.zzzz
					mad r4.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r5.xyzx
					mad r4.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r4.xyzx
					add r4.xyz, r11.xyzx, r4.xyzx
					mad r5.xyz, r15.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), -r14.xyzx
					mad r5.xyz, -r16.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), r5.xyzx
					add r5.xyz, r17.xyzx, r5.xyzx
					mad r6.xyz, r16.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r14.xyzx
					mad r7.xyz, r15.xyzx, l(5.000000, 5.000000, 5.000000, 0.000000), r17.xyzx
					mad r6.xyz, -r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r6.xyzx
					add r7.xyz, -r14.xyzx, r16.xyzx
					mul r7.xyz, r0.zzzz, r7.xyzx
					mul r5.xyz, r5.xyzx, r23.zzzz
					mul r0.xyz, r0.zzzz, r5.xyzx
					mul r5.xyz, r6.xyzx, r23.zzzz
					mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r5.xyzx
					mad r0.xyz, r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r0.xyzx
					add r0.xyz, r15.xyzx, r0.xyzx
					mad r5.xyz, r1.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), -r3.xyzx
					mad r5.xyz, -r4.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), r5.xyzx
					add r5.xyz, r0.xyzx, r5.xyzx
					mad r6.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
					mad r0.xyz, r1.xyzx, l(5.000000, 5.000000, 5.000000, 0.000000), r0.xyzx
					mad r0.xyz, -r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r6.xyzx
					add r3.xyz, -r3.xyzx, r4.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r4.xyz, r5.xyzx, r23.wwww
					mul r4.xyz, r0.wwww, r4.xyzx
					mul r0.xyz, r0.xyzx, r23.wwww
					mad r0.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r0.xyzx
					mad r0.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r0.xyzx
					add r0.xyz, r1.xyzx, r0.xyzx
					add r0.y, r0.y, l(-0.000010)
					lt r0.y, r0.y, l(0.000000)
					discard_nz r0.y
					sample r1.xyzw, v3.xyxx, t2.xyzw, s1
					log r0.y, r1.z
					mul r0.y, r0.y, l(2.200000)
					exp r0.y, r0.y
					mov_sat r2.x, r2.x
					log r0.w, r2.x
					mul r0.w, r0.w, l(2.200000)
					exp r0.w, r0.w
					ftoi r1.x, cb0[7].y
					mul r1.yz, v3.xxyx, cb0[7].wwww
					div r3.xy, r1.yzyy, cb0[15].zwzz
					mul r3.z, cb0[7].z, cb1[0].x
					mov r1.yz, l(0,0,0,0)
					loop 
					  ige r1.w, r1.z, r1.x
					  breakc_nz r1.w
					  itof r1.w, r1.z
					  exp r1.w, r1.w
					  mul r4.xyz, r3.xyzx, r1.wwww
					  round_ni r4.xyz, r4.xyzx
					  mad r5.xyz, r1.wwww, r3.xyzx, -r4.xyzx
					  dp3 r2.x, r4.xyzx, l(7.000000, 157.000000, 113.000000, 0.000000)
					  add r4.xyzw, r2.xxxx, l(0.000000, 157.000000, 113.000000, 270.000000)
					  mul r6.xyz, r5.xyzx, r5.xyzx
					  mad r5.xyz, -r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
					  mul r5.xyz, r5.xyzx, r6.xyzx
					  sincos r4.xyzw, null, r4.xyzw
					  mul r4.xyzw, r4.xyzw, l(43758.500000, 43758.500000, 43758.500000, 43758.500000)
					  frc r4.xyzw, r4.xyzw
					  add r6.xyzw, r2.xxxx, l(7.000000, 164.000000, 120.000000, 277.000000)
					  sincos r6.xyzw, null, r6.xyzw
					  mul r6.xyzw, r6.xyzw, l(43758.500000, 43758.500000, 43758.500000, 43758.500000)
					  frc r6.xyzw, r6.xyzw
					  add r6.xyzw, -r4.xyzw, r6.xyzw
					  mad r4.xyzw, r5.xxxx, r6.xyzw, r4.xyzw
					  add r4.yw, -r4.xxxz, r4.yyyw
					  mad r4.xy, r5.yyyy, r4.ywyy, r4.xzxx
					  add r2.x, -r4.x, r4.y
					  mad r2.x, r5.z, r2.x, r4.x
					  mad r2.x, r2.x, l(2.000000), l(-1.000000)
					  div r1.w, r2.x, r1.w
					  add r1.y, r1.w, r1.y
					  iadd r1.z, r1.z, l(1)
					endloop 
					add r0.z, -r0.z, r0.x
					add_sat r0.z, r0.w, r0.z
					add r0.w, -cb0[5].w, |cb0[11].w|
					add r1.x, -cb0[5].w, cb0[6].x
					div_sat r0.w, r0.w, r1.x
					add r1.x, -cb0[5].y, cb0[5].z
					mad r0.w, r0.w, r1.x, cb0[5].y
					add r1.x, -r0.w, cb0[5].x
					max r1.x, r1.x, l(0.000000)
					add r0.w, r0.w, cb0[5].x
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r1.x, r0.w
					add r1.x, r0.z, -r1.x
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r1.z, r0.w, r1.x
					mad r0.z, r1.x, r0.w, -r0.z
					add_sat r0.x, -|r0.x|, r0.z
					mad r0.z, cb0[8].x, r1.y, l(1.000000)
					mad r0.z, r0.z, l(-0.250000), l(0.750000)
					mul r1.xyw, cb0[10].xyxz, l(0.750000, 0.750000, 0.000000, 0.750000)
					mad r0.y, -r0.z, r0.y, l(1.000000)
					mul r0.y, r0.y, r1.z
					mad r2.xyz, r2.yzwy, l(0.500000, 0.500000, 0.500000, 0.000000), -r1.xywx
					mad r0.yzw, r0.yyyy, r2.xxyz, r1.xxyw
					mad o0.xyz, r1.zzzz, r0.yzwy, r0.xxxx
					mul o0.w, r1.z, cb0[8].y
					mov o1.xyzw, l(0,0,0,0)
					mov o2.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "ENABLE_HEAT_HAZE" "_SAMPLEFILTERING_BILINEAR" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v3.xy
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_temps 7
					mad r0.xyzw, cb0[15].zwzw, l(0.500000, 0.500000, -0.500000, 0.500000), v3.xyxy
					mad r1.xyzw, cb0[15].zwzw, l(0.500000, -0.500000, -0.500000, -0.500000), v3.xyxy
					sample r2.xyzw, r0.xyxx, t0.xyzw, s0
					sample r3.xyzw, r0.zwzz, t0.xyzw, s0
					sample r4.xyzw, r1.xyxx, t0.xyzw, s0
					sample r5.xyzw, r1.zwzz, t0.xyzw, s0
					div r6.xy, r1.zwzz, cb0[15].zwzz
					frc r6.xy, r6.xyxx
					add r2.xyzw, r2.xyzw, -r3.xyzw
					mad r2.xyzw, r6.xxxx, r2.xyzw, r3.xyzw
					add r3.xyzw, r4.xyzw, -r5.xyzw
					mad r3.xyzw, r6.xxxx, r3.xyzw, r5.xyzw
					add r2.xyzw, r2.xyzw, -r3.xyzw
					mad r2.xyzw, r6.yyyy, r2.wxyz, r3.wxyz
					sample r3.xyzw, r0.xyxx, t1.xyzw, s2
					sample r0.xyzw, r0.zwzz, t1.xyzw, s2
					sample r4.xyzw, r1.xyxx, t1.xyzw, s2
					sample r1.xyzw, r1.zwzz, t1.xyzw, s2
					add r3.xyz, -r0.xyzx, r3.xyzx
					mad r0.xyz, r6.xxxx, r3.xyzx, r0.xyzx
					add r3.xyz, -r1.xyzx, r4.xyzx
					mad r1.xyz, r6.xxxx, r3.xyzx, r1.xyzx
					add r0.xyz, r0.xyzx, -r1.xyzx
					mad r0.xyz, r6.yyyy, r0.xyzx, r1.xyzx
					add r0.y, r0.y, l(-0.000010)
					lt r0.y, r0.y, l(0.000000)
					discard_nz r0.y
					sample r1.xyzw, v3.xyxx, t2.xyzw, s1
					log r0.y, r1.z
					mul r0.y, r0.y, l(2.200000)
					exp r0.y, r0.y
					mov_sat r2.x, r2.x
					log r0.w, r2.x
					mul r0.w, r0.w, l(2.200000)
					exp r0.w, r0.w
					ftoi r1.x, cb0[7].y
					mul r1.yz, v3.xxyx, cb0[7].wwww
					div r3.xy, r1.yzyy, cb0[15].zwzz
					mul r3.z, cb0[7].z, cb1[0].x
					mov r1.yz, l(0,0,0,0)
					loop 
					  ige r1.w, r1.z, r1.x
					  breakc_nz r1.w
					  itof r1.w, r1.z
					  exp r1.w, r1.w
					  mul r4.xyz, r3.xyzx, r1.wwww
					  round_ni r4.xyz, r4.xyzx
					  mad r5.xyz, r1.wwww, r3.xyzx, -r4.xyzx
					  dp3 r2.x, r4.xyzx, l(7.000000, 157.000000, 113.000000, 0.000000)
					  add r4.xyzw, r2.xxxx, l(0.000000, 157.000000, 113.000000, 270.000000)
					  mul r6.xyz, r5.xyzx, r5.xyzx
					  mad r5.xyz, -r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
					  mul r5.xyz, r5.xyzx, r6.xyzx
					  sincos r4.xyzw, null, r4.xyzw
					  mul r4.xyzw, r4.xyzw, l(43758.500000, 43758.500000, 43758.500000, 43758.500000)
					  frc r4.xyzw, r4.xyzw
					  add r6.xyzw, r2.xxxx, l(7.000000, 164.000000, 120.000000, 277.000000)
					  sincos r6.xyzw, null, r6.xyzw
					  mul r6.xyzw, r6.xyzw, l(43758.500000, 43758.500000, 43758.500000, 43758.500000)
					  frc r6.xyzw, r6.xyzw
					  add r6.xyzw, -r4.xyzw, r6.xyzw
					  mad r4.xyzw, r5.xxxx, r6.xyzw, r4.xyzw
					  add r4.yw, -r4.xxxz, r4.yyyw
					  mad r4.xy, r5.yyyy, r4.ywyy, r4.xzxx
					  add r2.x, -r4.x, r4.y
					  mad r2.x, r5.z, r2.x, r4.x
					  mad r2.x, r2.x, l(2.000000), l(-1.000000)
					  div r1.w, r2.x, r1.w
					  add r1.y, r1.w, r1.y
					  iadd r1.z, r1.z, l(1)
					endloop 
					add r0.z, -r0.z, r0.x
					add_sat r0.z, r0.w, r0.z
					add r0.w, -cb0[5].w, |cb0[11].w|
					add r1.x, -cb0[5].w, cb0[6].x
					div_sat r0.w, r0.w, r1.x
					add r1.x, -cb0[5].y, cb0[5].z
					mad r0.w, r0.w, r1.x, cb0[5].y
					add r1.x, -r0.w, cb0[5].x
					max r1.x, r1.x, l(0.000000)
					add r0.w, r0.w, cb0[5].x
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r1.x, r0.w
					add r1.x, r0.z, -r1.x
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r1.z, r0.w, r1.x
					mad r0.z, r1.x, r0.w, -r0.z
					add_sat r0.x, -|r0.x|, r0.z
					mad r0.z, cb0[8].x, r1.y, l(1.000000)
					mad r0.z, r0.z, l(-0.250000), l(0.750000)
					mul r1.xyw, cb0[10].xyxz, l(0.750000, 0.750000, 0.000000, 0.750000)
					mad r0.y, -r0.z, r0.y, l(1.000000)
					mul r0.y, r0.y, r1.z
					mad r2.xyz, r2.yzwy, l(0.500000, 0.500000, 0.500000, 0.000000), -r1.xywx
					mad r0.yzw, r0.yyyy, r2.xxyz, r1.xxyw
					mad o0.xyz, r1.zzzz, r0.yzwy, r0.xxxx
					mul o0.w, r1.z, cb0[8].y
					mov o1.xyzw, l(0,0,0,0)
					mov o2.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "ENABLE_HEAT_HAZE" "_SAMPLEFILTERING_NONE" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v3.xy
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_temps 7
					sample r0.xyzw, v3.xyxx, t0.wxyz, s0
					sample r1.xyzw, v3.xyxx, t1.xyzw, s2
					add r1.y, r1.y, l(-0.000010)
					lt r1.y, r1.y, l(0.000000)
					discard_nz r1.y
					sample r2.xyzw, v3.xyxx, t2.xyzw, s1
					log r1.y, r2.z
					mul r1.y, r1.y, l(2.200000)
					exp r1.y, r1.y
					mov_sat r0.x, r0.x
					log r0.x, r0.x
					mul r0.x, r0.x, l(2.200000)
					exp r0.x, r0.x
					ftoi r1.w, cb0[7].y
					mul r2.xy, v3.xyxx, cb0[7].wwww
					div r2.xy, r2.xyxx, cb0[15].zwzz
					mul r2.z, cb0[7].z, cb1[0].x
					mov r2.w, l(0)
					mov r3.x, l(0)
					loop 
					  ige r3.y, r3.x, r1.w
					  breakc_nz r3.y
					  itof r3.y, r3.x
					  exp r3.y, r3.y
					  mul r4.xyz, r2.xyzx, r3.yyyy
					  round_ni r4.xyz, r4.xyzx
					  mad r5.xyz, r3.yyyy, r2.xyzx, -r4.xyzx
					  dp3 r3.z, r4.xyzx, l(7.000000, 157.000000, 113.000000, 0.000000)
					  add r4.xyzw, r3.zzzz, l(0.000000, 157.000000, 113.000000, 270.000000)
					  mul r6.xyz, r5.xyzx, r5.xyzx
					  mad r5.xyz, -r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
					  mul r5.xyz, r5.xyzx, r6.xyzx
					  sincos r4.xyzw, null, r4.xyzw
					  mul r4.xyzw, r4.xyzw, l(43758.500000, 43758.500000, 43758.500000, 43758.500000)
					  frc r4.xyzw, r4.xyzw
					  add r6.xyzw, r3.zzzz, l(7.000000, 164.000000, 120.000000, 277.000000)
					  sincos r6.xyzw, null, r6.xyzw
					  mul r6.xyzw, r6.xyzw, l(43758.500000, 43758.500000, 43758.500000, 43758.500000)
					  frc r6.xyzw, r6.xyzw
					  add r6.xyzw, -r4.xyzw, r6.xyzw
					  mad r4.xyzw, r5.xxxx, r6.xyzw, r4.xyzw
					  add r3.zw, -r4.xxxz, r4.yyyw
					  mad r3.zw, r5.yyyy, r3.zzzw, r4.xxxz
					  add r3.w, -r3.z, r3.w
					  mad r3.z, r5.z, r3.w, r3.z
					  mad r3.z, r3.z, l(2.000000), l(-1.000000)
					  div r3.y, r3.z, r3.y
					  add r2.w, r2.w, r3.y
					  iadd r3.x, r3.x, l(1)
					endloop 
					add r1.z, -r1.z, r1.x
					add_sat r0.x, r0.x, r1.z
					add r1.z, -cb0[5].w, |cb0[11].w|
					add r1.w, -cb0[5].w, cb0[6].x
					div_sat r1.z, r1.z, r1.w
					add r1.w, -cb0[5].y, cb0[5].z
					mad r1.z, r1.z, r1.w, cb0[5].y
					add r1.w, -r1.z, cb0[5].x
					max r1.w, r1.w, l(0.000000)
					add r1.z, r1.z, cb0[5].x
					min r1.z, r1.z, l(1.000000)
					add r1.z, -r1.w, r1.z
					add r1.w, r0.x, -r1.w
					div r1.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
					mul_sat r1.z, r1.z, r1.w
					mad r1.w, r1.z, l(-2.000000), l(3.000000)
					mul r1.z, r1.z, r1.z
					mul r2.x, r1.z, r1.w
					mad r0.x, r1.w, r1.z, -r0.x
					add_sat r0.x, -|r1.x|, r0.x
					mad r1.x, cb0[8].x, r2.w, l(1.000000)
					mad r1.x, r1.x, l(-0.250000), l(0.750000)
					mul r2.yzw, cb0[10].xxyz, l(0.000000, 0.750000, 0.750000, 0.750000)
					mad r1.x, -r1.x, r1.y, l(1.000000)
					mul r1.x, r1.x, r2.x
					mad r0.yzw, r0.yyzw, l(0.000000, 0.500000, 0.500000, 0.500000), -r2.yyzw
					mad r0.yzw, r1.xxxx, r0.yyzw, r2.yyzw
					mad o0.xyz, r2.xxxx, r0.yzwy, r0.xxxx
					mul o0.w, r2.x, cb0[8].y
					mov o1.xyzw, l(0,0,0,0)
					mov o2.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "ENABLE_HEAT_HAZE" "ENABLE_WAVE" "_SAMPLEFILTERING_BICUBIC_HERMITE" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v3.xy
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_temps 28
					div r0.xyzw, v3.xyxy, cb0[15].zwzw
					add r1.xy, r0.zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
					frc r1.zw, r1.xxxy
					round_ni r1.xy, r1.xyxx
					add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					mul r2.xy, r1.xyxx, cb0[15].zwzz
					mad r2.zw, r1.xxxy, cb0[15].zzzw, -cb0[15].zzzw
					sample r3.xyzw, r2.zwzz, t0.xyzw, s0
					mad r4.xyzw, cb0[15].zwzw, l(0.000000, -1.000000, 1.000000, -1.000000), r2.xyxy
					sample r5.xyzw, r4.xyxx, t0.xyzw, s0
					sample r6.xyzw, r4.zwzz, t0.xyzw, s0
					mad r7.xyzw, cb0[15].zwzw, l(2.000000, -1.000000, -1.000000, 0.000000), r2.xyxy
					sample r8.xyzw, r7.xyxx, t0.xyzw, s0
					sample r9.xyzw, r7.zwzz, t0.xyzw, s0
					sample r10.xyzw, r2.xyxx, t0.xyzw, s0
					mad r11.xyzw, cb0[15].zwzw, l(1.000000, 0.000000, 2.000000, 0.000000), r2.xyxy
					sample r12.xyzw, r11.xyxx, t0.xyzw, s0
					sample r13.xyzw, r11.zwzz, t0.xyzw, s0
					mad r14.xyzw, cb0[15].zwzw, l(-1.000000, 1.000000, 0.000000, 1.000000), r2.xyxy
					sample r15.xyzw, r14.xyxx, t0.xyzw, s0
					sample r16.xyzw, r14.zwzz, t0.xyzw, s0
					mad r1.xy, r1.xyxx, cb0[15].zwzz, cb0[15].zwzz
					sample r17.xyzw, r1.xyxx, t0.xyzw, s0
					mad r18.xyzw, cb0[15].zwzw, l(2.000000, 1.000000, -1.000000, 2.000000), r2.xyxy
					sample r19.xyzw, r18.xyxx, t0.xyzw, s0
					sample r20.xyzw, r18.zwzz, t0.xyzw, s0
					mad r21.xyzw, cb0[15].zwzw, l(0.000000, 2.000000, 1.000000, 2.000000), r2.xyxy
					sample r22.xyzw, r21.xyxx, t0.xyzw, s0
					sample r23.xyzw, r21.zwzz, t0.xyzw, s0
					mad r24.xy, cb0[15].zwzz, l(2.000000, 2.000000, 0.000000, 0.000000), r2.xyxx
					sample r25.xyzw, r24.xyxx, t0.xyzw, s0
					mad r26.xyzw, r5.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r3.xyzw
					mad r26.xyzw, -r6.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r26.xyzw
					add r26.xyzw, r8.xyzw, r26.xyzw
					mul r24.zw, r1.zzzw, r1.zzzw
					mad r27.xyzw, r6.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r3.xyzw
					mad r8.xyzw, r5.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r8.xyzw
					mad r8.xyzw, -r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r27.xyzw
					add r3.xyzw, -r3.xyzw, r6.xyzw
					mul r3.xyzw, r1.zzzz, r3.xyzw
					mul r6.xyzw, r26.xyzw, r24.zzzz
					mul r6.xyzw, r1.zzzz, r6.xyzw
					mul r8.xyzw, r8.xyzw, r24.zzzz
					mad r6.xyzw, r6.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r8.xyzw
					mad r3.xyzw, r3.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					add r3.xyzw, r5.xyzw, r3.xyzw
					mad r5.xyzw, r10.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r9.xyzw
					mad r5.xyzw, -r12.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r5.xyzw
					add r5.xyzw, r13.xyzw, r5.xyzw
					mad r6.xyzw, r12.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r9.xyzw
					mad r8.xyzw, r10.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r13.xyzw
					mad r6.xyzw, -r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					add r8.xyzw, -r9.xyzw, r12.xyzw
					mul r8.xyzw, r1.zzzz, r8.xyzw
					mul r5.xyzw, r5.xyzw, r24.zzzz
					mul r5.xyzw, r1.zzzz, r5.xyzw
					mul r6.xyzw, r6.xyzw, r24.zzzz
					mad r5.xyzw, r5.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					mad r5.xyzw, r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r5.xyzw
					add r5.xyzw, r10.xyzw, r5.xyzw
					mad r6.xyzw, r16.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r15.xyzw
					mad r6.xyzw, -r17.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r6.xyzw
					add r6.xyzw, r19.xyzw, r6.xyzw
					mad r8.xyzw, r17.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r15.xyzw
					mad r9.xyzw, r16.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r19.xyzw
					mad r8.xyzw, -r9.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r8.xyzw
					add r9.xyzw, -r15.xyzw, r17.xyzw
					mul r9.xyzw, r1.zzzz, r9.xyzw
					mul r6.xyzw, r6.xyzw, r24.zzzz
					mul r6.xyzw, r1.zzzz, r6.xyzw
					mul r8.xyzw, r8.xyzw, r24.zzzz
					mad r6.xyzw, r6.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r8.xyzw
					mad r6.xyzw, r9.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					add r6.xyzw, r16.xyzw, r6.xyzw
					mad r8.xyzw, r22.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r20.xyzw
					mad r8.xyzw, -r23.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r8.xyzw
					add r8.xyzw, r25.xyzw, r8.xyzw
					mad r9.xyzw, r23.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r20.xyzw
					mad r10.xyzw, r22.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r25.xyzw
					mad r9.xyzw, -r10.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r9.xyzw
					add r10.xyzw, -r20.xyzw, r23.xyzw
					mul r10.xyzw, r1.zzzz, r10.xyzw
					mul r8.xyzw, r8.xyzw, r24.zzzz
					mul r8.xyzw, r1.zzzz, r8.xyzw
					mul r9.xyzw, r9.xyzw, r24.zzzz
					mad r8.xyzw, r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r9.xyzw
					mad r8.xyzw, r10.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r8.xyzw
					add r8.xyzw, r22.xyzw, r8.xyzw
					mad r9.xyzw, r5.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r3.xyzw
					mad r9.xyzw, -r6.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r9.xyzw
					add r9.xyzw, r8.xyzw, r9.xyzw
					mad r10.xyzw, r6.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r3.xyzw
					mad r8.xyzw, r5.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r8.xyzw
					mad r8.xyzw, -r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r10.xyzw
					add r3.xyzw, -r3.xyzw, r6.xyzw
					mul r3.xyzw, r1.wwww, r3.xyzw
					mul r6.xyzw, r9.xyzw, r24.wwww
					mul r6.xyzw, r1.wwww, r6.xyzw
					mul r8.xyzw, r8.xyzw, r24.wwww
					mad r6.xyzw, r6.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r8.xyzw
					mad r3.xyzw, r3.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					add r3.xyzw, r5.wxyz, r3.wxyz
					sample r5.xyzw, r2.zwzz, t1.xyzw, s2
					sample r6.xyzw, r4.xyxx, t1.xyzw, s2
					sample r4.xyzw, r4.zwzz, t1.xyzw, s2
					sample r8.xyzw, r7.xyxx, t1.xyzw, s2
					sample r7.xyzw, r7.zwzz, t1.xyzw, s2
					sample r2.xyzw, r2.xyxx, t1.xyzw, s2
					sample r9.xyzw, r11.xyxx, t1.xyzw, s2
					sample r10.xyzw, r11.zwzz, t1.xyzw, s2
					sample r11.xyzw, r14.xyxx, t1.xyzw, s2
					sample r12.xyzw, r14.zwzz, t1.xyzw, s2
					sample r13.xyzw, r1.xyxx, t1.xyzw, s2
					sample r14.xyzw, r18.xyxx, t1.xyzw, s2
					sample r15.xyzw, r18.zwzz, t1.xyzw, s2
					sample r16.xyzw, r21.xyxx, t1.xyzw, s2
					sample r17.xyzw, r21.zwzz, t1.xyzw, s2
					sample r18.xyzw, r24.xyxx, t1.xyzw, s2
					mad r19.xyzw, r6.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r5.xyzw
					mad r19.xyzw, -r4.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r19.xyzw
					add r19.xyzw, r8.xyzw, r19.xyzw
					mad r20.xyzw, r4.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r5.xyzw
					mad r8.xyzw, r6.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r8.xyzw
					mad r8.xyzw, -r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r20.xyzw
					add r4.xyzw, r4.xyzw, -r5.xyzw
					mul r4.xyzw, r1.zzzz, r4.xyzw
					mul r5.xyzw, r19.xyzw, r24.zzzz
					mul r5.xyzw, r1.zzzz, r5.xyzw
					mul r8.xyzw, r8.xyzw, r24.zzzz
					mad r5.xyzw, r5.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r8.xyzw
					mad r4.xyzw, r4.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r5.xyzw
					add r4.xyzw, r6.xyzw, r4.xyzw
					mad r5.xyzw, r2.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r7.xyzw
					mad r5.xyzw, -r9.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r5.xyzw
					add r5.xyzw, r10.xyzw, r5.xyzw
					mad r6.xyzw, r9.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r7.xyzw
					mad r8.xyzw, r2.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r10.xyzw
					mad r6.xyzw, -r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					add r7.xyzw, -r7.xyzw, r9.xyzw
					mul r7.xyzw, r1.zzzz, r7.xyzw
					mul r5.xyzw, r5.xyzw, r24.zzzz
					mul r5.xyzw, r1.zzzz, r5.xyzw
					mul r6.xyzw, r6.xyzw, r24.zzzz
					mad r5.xyzw, r5.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					mad r5.xyzw, r7.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r5.xyzw
					add r2.xyzw, r2.xyzw, r5.xyzw
					mad r5.xyzw, r12.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r11.xyzw
					mad r5.xyzw, -r13.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r5.xyzw
					add r5.xyzw, r14.xyzw, r5.xyzw
					mad r6.xyzw, r13.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r11.xyzw
					mad r7.xyzw, r12.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r14.xyzw
					mad r6.xyzw, -r7.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					add r7.xyzw, -r11.xyzw, r13.xyzw
					mul r7.xyzw, r1.zzzz, r7.xyzw
					mul r5.xyzw, r5.xyzw, r24.zzzz
					mul r5.xyzw, r1.zzzz, r5.xyzw
					mul r6.xyzw, r6.xyzw, r24.zzzz
					mad r5.xyzw, r5.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					mad r5.xyzw, r7.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r5.xyzw
					add r5.xyzw, r12.xyzw, r5.xyzw
					mad r6.xyzw, r16.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r15.xyzw
					mad r6.xyzw, -r17.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r6.xyzw
					add r6.xyzw, r18.xyzw, r6.xyzw
					mad r7.xyzw, r17.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r15.xyzw
					mad r8.xyzw, r16.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r18.xyzw
					mad r7.xyzw, -r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r7.xyzw
					add r8.xyzw, -r15.xyzw, r17.xyzw
					mul r8.xyzw, r1.zzzz, r8.xyzw
					mul r6.xyzw, r6.xyzw, r24.zzzz
					mul r6.xyzw, r1.zzzz, r6.xyzw
					mul r7.xyzw, r7.xyzw, r24.zzzz
					mad r6.xyzw, r6.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r7.xyzw
					mad r6.xyzw, r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					add r6.xyzw, r16.xyzw, r6.xyzw
					mad r7.xyzw, r2.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r4.xyzw
					mad r7.xyzw, -r5.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r7.xyzw
					add r7.xyzw, r6.xyzw, r7.xyzw
					mad r8.xyzw, r5.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r4.xyzw
					mad r6.xyzw, r2.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r6.xyzw
					mad r6.xyzw, -r6.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r8.xyzw
					add r4.xyzw, -r4.xyzw, r5.xyzw
					mul r4.xyzw, r1.wwww, r4.xyzw
					mul r5.xyzw, r7.xyzw, r24.wwww
					mul r1.xyzw, r1.wwww, r5.xyzw
					mul r5.xyzw, r6.xyzw, r24.wwww
					mad r1.xyzw, r1.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r5.xyzw
					mad r1.xyzw, r4.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r1.xyzw
					add r1.xyzw, r2.wxyz, r1.wxyz
					add r2.x, r1.z, l(-0.000010)
					lt r2.x, r2.x, l(0.000000)
					discard_nz r2.x
					sample r2.xyzw, v3.xyxx, t2.xyzw, s1
					log r2.x, r2.z
					mul r2.x, r2.x, l(2.200000)
					exp r2.x, r2.x
					mov_sat r3.x, r3.x
					log r2.y, r3.x
					mul r2.y, r2.y, l(2.200000)
					exp r2.y, r2.y
					mov_sat r1.x, r1.x
					ftoi r2.z, cb0[9].x
					mul r0.xyzw, r0.xyzw, cb0[8].wwww
					mul r0.xyzw, r0.xyzw, l(0.314159, 0.314159, 1.973921, 1.973921)
					ge r4.xyzw, r0.zwzw, -r0.zwzw
					movc r4.xyzw, r4.xyzw, l(6.283185,6.283185,0.159155,0.159155), l(-6.283185,-6.283185,-0.159155,-0.159155)
					mul r0.xy, r0.xyxx, r4.zwzz
					frc r0.xy, r0.xyxx
					mad r0.xy, r4.xyxx, r0.xyxx, l(-250.000000, -250.000000, 0.000000, 0.000000)
					mul r0.z, cb0[8].z, cb1[0].x
					mov r4.x, l(1.000000)
					mov r4.yz, r0.xxyx
					mov r0.w, l(0)
					loop 
					  ige r2.w, r0.w, r2.z
					  breakc_nz r2.w
					  iadd r0.w, r0.w, l(1)
					  itof r2.w, r0.w
					  div r2.w, l(3.500000), r2.w
					  add r2.w, -r2.w, l(1.000000)
					  mad r3.x, r0.z, r2.w, -r4.y
					  sincos null, r3.x, r3.x
					  mad r4.w, r0.z, r2.w, r4.z
					  sincos r4.w, null, r4.w
					  add r5.x, r3.x, r4.w
					  mad r3.x, r0.z, r2.w, -r4.z
					  sincos r3.x, null, r3.x
					  mad r4.w, r0.z, r2.w, r4.y
					  sincos null, r4.w, r4.w
					  add r5.y, r3.x, r4.w
					  add r4.yz, r0.xxyx, r5.xxyx
					  mad r5.xy, r0.zzzz, r2.wwww, r4.yzyy
					  sincos r2.w, null, r5.x
					  mul r2.w, r2.w, l(200.000000)
					  div r6.x, r0.x, r2.w
					  sincos null, r2.w, r5.y
					  mul r2.w, r2.w, l(200.000000)
					  div r6.y, r0.y, r2.w
					  dp2 r2.w, r6.xyxx, r6.xyxx
					  sqrt r2.w, r2.w
					  div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
					  add r4.x, r2.w, r4.x
					endloop 
					round_z r0.x, cb0[9].x
					div r0.x, r4.x, r0.x
					log r0.x, r0.x
					mul r0.x, r0.x, l(1.400000)
					exp r0.x, r0.x
					add r0.x, -r0.x, l(1.170000)
					mul r0.x, |r0.x|, |r0.x|
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, cb0[9].y
					ftoi r0.y, cb0[7].y
					mul r0.zw, v3.xxxy, cb0[7].wwww
					div r4.xy, r0.zwzz, cb0[15].zwzz
					mul r4.z, cb0[7].z, cb1[0].x
					mov r0.zw, l(0,0,0,0)
					loop 
					  ige r2.z, r0.w, r0.y
					  breakc_nz r2.z
					  itof r2.z, r0.w
					  exp r2.z, r2.z
					  mul r5.xyz, r4.xyzx, r2.zzzz
					  round_ni r5.xyz, r5.xyzx
					  mad r6.xyz, r2.zzzz, r4.xyzx, -r5.xyzx
					  dp3 r2.w, r5.xyzx, l(7.000000, 157.000000, 113.000000, 0.000000)
					  add r5.xyzw, r2.wwww, l(0.000000, 157.000000, 113.000000, 270.000000)
					  mul r7.xyz, r6.xyzx, r6.xyzx
					  mad r6.xyz, -r6.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
					  mul r6.xyz, r6.xyzx, r7.xyzx
					  sincos r5.xyzw, null, r5.xyzw
					  mul r5.xyzw, r5.xyzw, l(43758.500000, 43758.500000, 43758.500000, 43758.500000)
					  frc r5.xyzw, r5.xyzw
					  add r7.xyzw, r2.wwww, l(7.000000, 164.000000, 120.000000, 277.000000)
					  sincos r7.xyzw, null, r7.xyzw
					  mul r7.xyzw, r7.xyzw, l(43758.500000, 43758.500000, 43758.500000, 43758.500000)
					  frc r7.xyzw, r7.xyzw
					  add r7.xyzw, -r5.xyzw, r7.xyzw
					  mad r5.xyzw, r6.xxxx, r7.xyzw, r5.xyzw
					  add r5.yw, -r5.xxxz, r5.yyyw
					  mad r5.xy, r6.yyyy, r5.ywyy, r5.xzxx
					  add r2.w, -r5.x, r5.y
					  mad r2.w, r6.z, r2.w, r5.x
					  mad r2.w, r2.w, l(2.000000), l(-1.000000)
					  div r2.z, r2.w, r2.z
					  add r0.z, r0.z, r2.z
					  iadd r0.w, r0.w, l(1)
					endloop 
					add r0.y, -r1.w, r1.y
					add r0.y, r2.y, r0.y
					mul r0.w, r1.x, r1.z
					mad_sat r0.x, r0.w, r0.x, r0.y
					add r0.y, -cb0[5].w, |cb0[11].w|
					add r0.w, -cb0[5].w, cb0[6].x
					div_sat r0.y, r0.y, r0.w
					add r0.w, -cb0[5].y, cb0[5].z
					mad r0.y, r0.y, r0.w, cb0[5].y
					add r0.w, -r0.y, cb0[5].x
					max r0.w, r0.w, l(0.000000)
					add r0.y, r0.y, cb0[5].x
					min r0.y, r0.y, l(1.000000)
					add r0.y, -r0.w, r0.y
					add r0.w, -r0.w, r0.x
					div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
					mul_sat r0.y, r0.y, r0.w
					mad r0.w, r0.y, l(-2.000000), l(3.000000)
					mul r0.y, r0.y, r0.y
					mul r1.x, r0.y, r0.w
					mad r0.x, r0.w, r0.y, -r0.x
					add_sat r0.x, -|r1.y|, r0.x
					mad r0.y, cb0[8].x, r0.z, l(1.000000)
					mad r0.y, r0.y, l(-0.250000), l(0.750000)
					mul r1.yzw, cb0[10].xxyz, l(0.000000, 0.750000, 0.750000, 0.750000)
					mad r0.y, -r0.y, r2.x, l(1.000000)
					mul r0.y, r0.y, r1.x
					mad r2.xyz, r3.yzwy, l(0.500000, 0.500000, 0.500000, 0.000000), -r1.yzwy
					mad r0.yzw, r0.yyyy, r2.xxyz, r1.yyzw
					mad o0.xyz, r1.xxxx, r0.yzwy, r0.xxxx
					mul o0.w, r1.x, cb0[8].y
					mov o1.xyzw, l(0,0,0,0)
					mov o2.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "ENABLE_HEAT_HAZE" "ENABLE_WAVE" "_SAMPLEFILTERING_BILINEAR" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v3.xy
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_temps 8
					mad r0.xyzw, cb0[15].zwzw, l(0.500000, 0.500000, -0.500000, 0.500000), v3.xyxy
					mad r1.xyzw, cb0[15].zwzw, l(0.500000, -0.500000, -0.500000, -0.500000), v3.xyxy
					sample r2.xyzw, r0.xyxx, t0.xyzw, s0
					sample r3.xyzw, r0.zwzz, t0.xyzw, s0
					sample r4.xyzw, r1.xyxx, t0.xyzw, s0
					sample r5.xyzw, r1.zwzz, t0.xyzw, s0
					div r6.xy, r1.zwzz, cb0[15].zwzz
					frc r6.xy, r6.xyxx
					add r2.xyzw, r2.xyzw, -r3.xyzw
					mad r2.xyzw, r6.xxxx, r2.xyzw, r3.xyzw
					add r3.xyzw, r4.xyzw, -r5.xyzw
					mad r3.xyzw, r6.xxxx, r3.xyzw, r5.xyzw
					add r2.xyzw, r2.xyzw, -r3.xyzw
					mad r2.xyzw, r6.yyyy, r2.wxyz, r3.wxyz
					sample r3.xyzw, r0.xyxx, t1.xyzw, s2
					sample r0.xyzw, r0.zwzz, t1.xyzw, s2
					sample r4.xyzw, r1.xyxx, t1.xyzw, s2
					sample r1.xyzw, r1.zwzz, t1.xyzw, s2
					add r3.xyzw, -r0.xyzw, r3.xyzw
					mad r0.xyzw, r6.xxxx, r3.xyzw, r0.xyzw
					add r3.xyzw, -r1.xyzw, r4.xyzw
					mad r1.xyzw, r6.xxxx, r3.xyzw, r1.xyzw
					add r0.xyzw, r0.xyzw, -r1.xyzw
					mad r0.xyzw, r6.yyyy, r0.wxyz, r1.wxyz
					add r1.x, r0.z, l(-0.000010)
					lt r1.x, r1.x, l(0.000000)
					discard_nz r1.x
					sample r1.xyzw, v3.xyxx, t2.xyzw, s1
					log r1.x, r1.z
					mul r1.x, r1.x, l(2.200000)
					exp r1.x, r1.x
					mov_sat r2.x, r2.x
					log r1.y, r2.x
					mul r1.y, r1.y, l(2.200000)
					exp r1.y, r1.y
					mov_sat r0.x, r0.x
					ftoi r1.z, cb0[9].x
					div r3.xyzw, v3.xyxy, cb0[15].zwzw
					mul r3.xyzw, r3.xyzw, cb0[8].wwww
					mul r3.xyzw, r3.xyzw, l(0.314159, 0.314159, 1.973921, 1.973921)
					ge r4.xyzw, r3.zwzw, -r3.zwzw
					movc r4.xyzw, r4.xyzw, l(6.283185,6.283185,0.159155,0.159155), l(-6.283185,-6.283185,-0.159155,-0.159155)
					mul r3.xy, r3.xyxx, r4.zwzz
					frc r3.xy, r3.xyxx
					mad r3.xy, r4.xyxx, r3.xyxx, l(-250.000000, -250.000000, 0.000000, 0.000000)
					mul r1.w, cb0[8].z, cb1[0].x
					mov r4.x, l(1.000000)
					mov r4.yz, r3.xxyx
					mov r2.x, l(0)
					loop 
					  ige r3.z, r2.x, r1.z
					  breakc_nz r3.z
					  iadd r2.x, r2.x, l(1)
					  itof r3.z, r2.x
					  div r3.z, l(3.500000), r3.z
					  add r3.z, -r3.z, l(1.000000)
					  mad r3.w, r1.w, r3.z, -r4.y
					  sincos null, r3.w, r3.w
					  mad r4.w, r1.w, r3.z, r4.z
					  sincos r4.w, null, r4.w
					  add r5.x, r3.w, r4.w
					  mad r3.w, r1.w, r3.z, -r4.z
					  sincos r3.w, null, r3.w
					  mad r4.w, r1.w, r3.z, r4.y
					  sincos null, r4.w, r4.w
					  add r5.y, r3.w, r4.w
					  add r4.yz, r3.xxyx, r5.xxyx
					  mad r3.zw, r1.wwww, r3.zzzz, r4.yyyz
					  sincos r3.z, null, r3.z
					  mul r3.z, r3.z, l(200.000000)
					  div r5.x, r3.x, r3.z
					  sincos null, r3.z, r3.w
					  mul r3.z, r3.z, l(200.000000)
					  div r5.y, r3.y, r3.z
					  dp2 r3.z, r5.xyxx, r5.xyxx
					  sqrt r3.z, r3.z
					  div r3.z, l(1.000000, 1.000000, 1.000000, 1.000000), r3.z
					  add r4.x, r3.z, r4.x
					endloop 
					round_z r1.z, cb0[9].x
					div r1.z, r4.x, r1.z
					log r1.z, r1.z
					mul r1.z, r1.z, l(1.400000)
					exp r1.z, r1.z
					add r1.z, -r1.z, l(1.170000)
					mul r1.z, |r1.z|, |r1.z|
					mul r1.z, r1.z, r1.z
					mul r1.z, r1.z, r1.z
					mul r1.z, r1.z, cb0[9].y
					ftoi r1.w, cb0[7].y
					mul r3.xy, v3.xyxx, cb0[7].wwww
					div r3.xy, r3.xyxx, cb0[15].zwzz
					mul r3.z, cb0[7].z, cb1[0].x
					mov r2.x, l(0)
					mov r3.w, l(0)
					loop 
					  ige r4.x, r3.w, r1.w
					  breakc_nz r4.x
					  itof r4.x, r3.w
					  exp r4.x, r4.x
					  mul r4.yzw, r3.xxyz, r4.xxxx
					  round_ni r4.yzw, r4.yyzw
					  mad r5.xyz, r4.xxxx, r3.xyzx, -r4.yzwy
					  dp3 r4.y, r4.yzwy, l(7.000000, 157.000000, 113.000000, 0.000000)
					  add r6.xyzw, r4.yyyy, l(0.000000, 157.000000, 113.000000, 270.000000)
					  mul r7.xyz, r5.xyzx, r5.xyzx
					  mad r5.xyz, -r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
					  mul r5.xyz, r5.xyzx, r7.xyzx
					  sincos r6.xyzw, null, r6.xyzw
					  mul r6.xyzw, r6.xyzw, l(43758.500000, 43758.500000, 43758.500000, 43758.500000)
					  frc r6.xyzw, r6.xyzw
					  add r7.xyzw, r4.yyyy, l(7.000000, 164.000000, 120.000000, 277.000000)
					  sincos r7.xyzw, null, r7.xyzw
					  mul r7.xyzw, r7.xyzw, l(43758.500000, 43758.500000, 43758.500000, 43758.500000)
					  frc r7.xyzw, r7.xyzw
					  add r7.xyzw, -r6.xyzw, r7.xyzw
					  mad r6.xyzw, r5.xxxx, r7.xyzw, r6.xyzw
					  add r4.yz, -r6.xxzx, r6.yywy
					  mad r4.yz, r5.yyyy, r4.yyzy, r6.xxzx
					  add r4.z, -r4.y, r4.z
					  mad r4.y, r5.z, r4.z, r4.y
					  mad r4.y, r4.y, l(2.000000), l(-1.000000)
					  div r4.x, r4.y, r4.x
					  add r2.x, r2.x, r4.x
					  iadd r3.w, r3.w, l(1)
					endloop 
					add r0.w, -r0.w, r0.y
					add r0.w, r1.y, r0.w
					mul r0.x, r0.x, r0.z
					mad_sat r0.x, r0.x, r1.z, r0.w
					add r0.z, -cb0[5].w, |cb0[11].w|
					add r0.w, -cb0[5].w, cb0[6].x
					div_sat r0.z, r0.z, r0.w
					add r0.w, -cb0[5].y, cb0[5].z
					mad r0.z, r0.z, r0.w, cb0[5].y
					add r0.w, -r0.z, cb0[5].x
					max r0.w, r0.w, l(0.000000)
					add r0.z, r0.z, cb0[5].x
					min r0.z, r0.z, l(1.000000)
					add r0.z, -r0.w, r0.z
					add r0.w, -r0.w, r0.x
					div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
					mul_sat r0.z, r0.z, r0.w
					mad r0.w, r0.z, l(-2.000000), l(3.000000)
					mul r0.z, r0.z, r0.z
					mul r1.y, r0.z, r0.w
					mad r0.x, r0.w, r0.z, -r0.x
					add_sat r0.x, -|r0.y|, r0.x
					mad r0.y, cb0[8].x, r2.x, l(1.000000)
					mad r0.y, r0.y, l(-0.250000), l(0.750000)
					mul r3.xyz, cb0[10].xyzx, l(0.750000, 0.750000, 0.750000, 0.000000)
					mad r0.y, -r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r1.y
					mad r1.xzw, r2.yyzw, l(0.500000, 0.000000, 0.500000, 0.500000), -r3.xxyz
					mad r0.yzw, r0.yyyy, r1.xxzw, r3.xxyz
					mad o0.xyz, r1.yyyy, r0.yzwy, r0.xxxx
					mul o0.w, r1.y, cb0[8].y
					mov o1.xyzw, l(0,0,0,0)
					mov o2.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "ENABLE_HEAT_HAZE" "ENABLE_WAVE" "_SAMPLEFILTERING_NONE" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v3.xy
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_temps 8
					sample r0.xyzw, v3.xyxx, t0.wxyz, s0
					sample r1.xyzw, v3.xyxx, t1.wxyz, s2
					add r2.x, r1.z, l(-0.000010)
					lt r2.x, r2.x, l(0.000000)
					discard_nz r2.x
					sample r2.xyzw, v3.xyxx, t2.xyzw, s1
					log r2.x, r2.z
					mul r2.x, r2.x, l(2.200000)
					exp r2.x, r2.x
					mov_sat r0.x, r0.x
					log r0.x, r0.x
					mul r0.x, r0.x, l(2.200000)
					exp r0.x, r0.x
					mov_sat r1.x, r1.x
					ftoi r2.y, cb0[9].x
					div r3.xyzw, v3.xyxy, cb0[15].zwzw
					mul r3.xyzw, r3.xyzw, cb0[8].wwww
					mul r3.xyzw, r3.xyzw, l(0.314159, 0.314159, 1.973921, 1.973921)
					ge r4.xyzw, r3.zwzw, -r3.zwzw
					movc r4.xyzw, r4.xyzw, l(6.283185,6.283185,0.159155,0.159155), l(-6.283185,-6.283185,-0.159155,-0.159155)
					mul r2.zw, r3.xxxy, r4.zzzw
					frc r2.zw, r2.zzzw
					mad r2.zw, r4.xxxy, r2.zzzw, l(0.000000, 0.000000, -250.000000, -250.000000)
					mul r3.x, cb0[8].z, cb1[0].x
					mov r3.y, l(1.000000)
					mov r3.zw, r2.zzzw
					mov r4.x, l(0)
					loop 
					  ige r4.y, r4.x, r2.y
					  breakc_nz r4.y
					  iadd r4.x, r4.x, l(1)
					  itof r4.y, r4.x
					  div r4.y, l(3.500000), r4.y
					  add r4.y, -r4.y, l(1.000000)
					  mad r4.z, r3.x, r4.y, -r3.z
					  sincos null, r4.z, r4.z
					  mad r4.w, r3.x, r4.y, r3.w
					  sincos r4.w, null, r4.w
					  add r5.x, r4.w, r4.z
					  mad r4.z, r3.x, r4.y, -r3.w
					  sincos r4.z, null, r4.z
					  mad r4.w, r3.x, r4.y, r3.z
					  sincos null, r4.w, r4.w
					  add r5.y, r4.w, r4.z
					  add r3.zw, r2.zzzw, r5.xxxy
					  mad r4.yz, r3.xxxx, r4.yyyy, r3.zzwz
					  sincos r4.y, null, r4.y
					  mul r4.y, r4.y, l(200.000000)
					  div r5.x, r2.z, r4.y
					  sincos null, r4.y, r4.z
					  mul r4.y, r4.y, l(200.000000)
					  div r5.y, r2.w, r4.y
					  dp2 r4.y, r5.xyxx, r5.xyxx
					  sqrt r4.y, r4.y
					  div r4.y, l(1.000000, 1.000000, 1.000000, 1.000000), r4.y
					  add r3.y, r3.y, r4.y
					endloop 
					round_z r2.y, cb0[9].x
					div r2.y, r3.y, r2.y
					log r2.y, r2.y
					mul r2.y, r2.y, l(1.400000)
					exp r2.y, r2.y
					add r2.y, -r2.y, l(1.170000)
					mul r2.y, |r2.y|, |r2.y|
					mul r2.y, r2.y, r2.y
					mul r2.y, r2.y, r2.y
					mul r2.y, r2.y, cb0[9].y
					ftoi r2.z, cb0[7].y
					mul r3.xy, v3.xyxx, cb0[7].wwww
					div r3.xy, r3.xyxx, cb0[15].zwzz
					mul r3.z, cb0[7].z, cb1[0].x
					mov r2.w, l(0)
					mov r3.w, l(0)
					loop 
					  ige r4.x, r3.w, r2.z
					  breakc_nz r4.x
					  itof r4.x, r3.w
					  exp r4.x, r4.x
					  mul r4.yzw, r3.xxyz, r4.xxxx
					  round_ni r4.yzw, r4.yyzw
					  mad r5.xyz, r4.xxxx, r3.xyzx, -r4.yzwy
					  dp3 r4.y, r4.yzwy, l(7.000000, 157.000000, 113.000000, 0.000000)
					  add r6.xyzw, r4.yyyy, l(0.000000, 157.000000, 113.000000, 270.000000)
					  mul r7.xyz, r5.xyzx, r5.xyzx
					  mad r5.xyz, -r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
					  mul r5.xyz, r5.xyzx, r7.xyzx
					  sincos r6.xyzw, null, r6.xyzw
					  mul r6.xyzw, r6.xyzw, l(43758.500000, 43758.500000, 43758.500000, 43758.500000)
					  frc r6.xyzw, r6.xyzw
					  add r7.xyzw, r4.yyyy, l(7.000000, 164.000000, 120.000000, 277.000000)
					  sincos r7.xyzw, null, r7.xyzw
					  mul r7.xyzw, r7.xyzw, l(43758.500000, 43758.500000, 43758.500000, 43758.500000)
					  frc r7.xyzw, r7.xyzw
					  add r7.xyzw, -r6.xyzw, r7.xyzw
					  mad r6.xyzw, r5.xxxx, r7.xyzw, r6.xyzw
					  add r4.yz, -r6.xxzx, r6.yywy
					  mad r4.yz, r5.yyyy, r4.yyzy, r6.xxzx
					  add r4.z, -r4.y, r4.z
					  mad r4.y, r5.z, r4.z, r4.y
					  mad r4.y, r4.y, l(2.000000), l(-1.000000)
					  div r4.x, r4.y, r4.x
					  add r2.w, r2.w, r4.x
					  iadd r3.w, r3.w, l(1)
					endloop 
					add r1.w, -r1.w, r1.y
					add r0.x, r0.x, r1.w
					mul r1.x, r1.x, r1.z
					mad_sat r0.x, r1.x, r2.y, r0.x
					add r1.x, -cb0[5].w, |cb0[11].w|
					add r1.z, -cb0[5].w, cb0[6].x
					div_sat r1.x, r1.x, r1.z
					add r1.z, -cb0[5].y, cb0[5].z
					mad r1.x, r1.x, r1.z, cb0[5].y
					add r1.z, -r1.x, cb0[5].x
					max r1.z, r1.z, l(0.000000)
					add r1.x, r1.x, cb0[5].x
					min r1.x, r1.x, l(1.000000)
					add r1.x, -r1.z, r1.x
					add r1.z, r0.x, -r1.z
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r1.x, r1.x, r1.z
					mad r1.z, r1.x, l(-2.000000), l(3.000000)
					mul r1.x, r1.x, r1.x
					mul r1.w, r1.x, r1.z
					mad r0.x, r1.z, r1.x, -r0.x
					add_sat r0.x, -|r1.y|, r0.x
					mad r1.x, cb0[8].x, r2.w, l(1.000000)
					mad r1.x, r1.x, l(-0.250000), l(0.750000)
					mul r2.yzw, cb0[10].xxyz, l(0.000000, 0.750000, 0.750000, 0.750000)
					mad r1.x, -r1.x, r2.x, l(1.000000)
					mul r1.x, r1.x, r1.w
					mad r0.yzw, r0.yyzw, l(0.000000, 0.500000, 0.500000, 0.500000), -r2.yyzw
					mad r0.yzw, r1.xxxx, r0.yyzw, r2.yyzw
					mad o0.xyz, r1.wwww, r0.yzwy, r0.xxxx
					mul o0.w, r1.w, cb0[8].y
					mov o1.xyzw, l(0,0,0,0)
					mov o2.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "ENABLE_HEAT_HAZE" "ENABLE_CAUSTIC" "_SAMPLEFILTERING_BICUBIC_HERMITE" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v3.xy
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_temps 28
					div r0.xyzw, v3.xyxy, cb0[15].zwzw
					add r1.xy, r0.zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
					frc r1.zw, r1.xxxy
					round_ni r1.xy, r1.xyxx
					add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					mul r2.xy, r1.xyxx, cb0[15].zwzz
					mad r2.zw, r1.xxxy, cb0[15].zzzw, -cb0[15].zzzw
					sample r3.xyzw, r2.zwzz, t0.xyzw, s0
					mad r4.xyzw, cb0[15].zwzw, l(0.000000, -1.000000, 1.000000, -1.000000), r2.xyxy
					sample r5.xyzw, r4.xyxx, t0.xyzw, s0
					sample r6.xyzw, r4.zwzz, t0.xyzw, s0
					mad r7.xyzw, cb0[15].zwzw, l(2.000000, -1.000000, -1.000000, 0.000000), r2.xyxy
					sample r8.xyzw, r7.xyxx, t0.xyzw, s0
					sample r9.xyzw, r7.zwzz, t0.xyzw, s0
					sample r10.xyzw, r2.xyxx, t0.xyzw, s0
					mad r11.xyzw, cb0[15].zwzw, l(1.000000, 0.000000, 2.000000, 0.000000), r2.xyxy
					sample r12.xyzw, r11.xyxx, t0.xyzw, s0
					sample r13.xyzw, r11.zwzz, t0.xyzw, s0
					mad r14.xyzw, cb0[15].zwzw, l(-1.000000, 1.000000, 0.000000, 1.000000), r2.xyxy
					sample r15.xyzw, r14.xyxx, t0.xyzw, s0
					sample r16.xyzw, r14.zwzz, t0.xyzw, s0
					mad r1.xy, r1.xyxx, cb0[15].zwzz, cb0[15].zwzz
					sample r17.xyzw, r1.xyxx, t0.xyzw, s0
					mad r18.xyzw, cb0[15].zwzw, l(2.000000, 1.000000, -1.000000, 2.000000), r2.xyxy
					sample r19.xyzw, r18.xyxx, t0.xyzw, s0
					sample r20.xyzw, r18.zwzz, t0.xyzw, s0
					mad r21.xyzw, cb0[15].zwzw, l(0.000000, 2.000000, 1.000000, 2.000000), r2.xyxy
					sample r22.xyzw, r21.xyxx, t0.xyzw, s0
					sample r23.xyzw, r21.zwzz, t0.xyzw, s0
					mad r24.xy, cb0[15].zwzz, l(2.000000, 2.000000, 0.000000, 0.000000), r2.xyxx
					sample r25.xyzw, r24.xyxx, t0.xyzw, s0
					mad r26.xyzw, r5.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r3.xyzw
					mad r26.xyzw, -r6.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r26.xyzw
					add r26.xyzw, r8.xyzw, r26.xyzw
					mul r24.zw, r1.zzzw, r1.zzzw
					mad r27.xyzw, r6.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r3.xyzw
					mad r8.xyzw, r5.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r8.xyzw
					mad r8.xyzw, -r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r27.xyzw
					add r3.xyzw, -r3.xyzw, r6.xyzw
					mul r3.xyzw, r1.zzzz, r3.xyzw
					mul r6.xyzw, r26.xyzw, r24.zzzz
					mul r6.xyzw, r1.zzzz, r6.xyzw
					mul r8.xyzw, r8.xyzw, r24.zzzz
					mad r6.xyzw, r6.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r8.xyzw
					mad r3.xyzw, r3.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					add r3.xyzw, r5.xyzw, r3.xyzw
					mad r5.xyzw, r10.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r9.xyzw
					mad r5.xyzw, -r12.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r5.xyzw
					add r5.xyzw, r13.xyzw, r5.xyzw
					mad r6.xyzw, r12.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r9.xyzw
					mad r8.xyzw, r10.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r13.xyzw
					mad r6.xyzw, -r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					add r8.xyzw, -r9.xyzw, r12.xyzw
					mul r8.xyzw, r1.zzzz, r8.xyzw
					mul r5.xyzw, r5.xyzw, r24.zzzz
					mul r5.xyzw, r1.zzzz, r5.xyzw
					mul r6.xyzw, r6.xyzw, r24.zzzz
					mad r5.xyzw, r5.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					mad r5.xyzw, r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r5.xyzw
					add r5.xyzw, r10.xyzw, r5.xyzw
					mad r6.xyzw, r16.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r15.xyzw
					mad r6.xyzw, -r17.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r6.xyzw
					add r6.xyzw, r19.xyzw, r6.xyzw
					mad r8.xyzw, r17.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r15.xyzw
					mad r9.xyzw, r16.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r19.xyzw
					mad r8.xyzw, -r9.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r8.xyzw
					add r9.xyzw, -r15.xyzw, r17.xyzw
					mul r9.xyzw, r1.zzzz, r9.xyzw
					mul r6.xyzw, r6.xyzw, r24.zzzz
					mul r6.xyzw, r1.zzzz, r6.xyzw
					mul r8.xyzw, r8.xyzw, r24.zzzz
					mad r6.xyzw, r6.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r8.xyzw
					mad r6.xyzw, r9.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					add r6.xyzw, r16.xyzw, r6.xyzw
					mad r8.xyzw, r22.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r20.xyzw
					mad r8.xyzw, -r23.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r8.xyzw
					add r8.xyzw, r25.xyzw, r8.xyzw
					mad r9.xyzw, r23.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r20.xyzw
					mad r10.xyzw, r22.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r25.xyzw
					mad r9.xyzw, -r10.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r9.xyzw
					add r10.xyzw, -r20.xyzw, r23.xyzw
					mul r10.xyzw, r1.zzzz, r10.xyzw
					mul r8.xyzw, r8.xyzw, r24.zzzz
					mul r8.xyzw, r1.zzzz, r8.xyzw
					mul r9.xyzw, r9.xyzw, r24.zzzz
					mad r8.xyzw, r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r9.xyzw
					mad r8.xyzw, r10.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r8.xyzw
					add r8.xyzw, r22.xyzw, r8.xyzw
					mad r9.xyzw, r5.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r3.xyzw
					mad r9.xyzw, -r6.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r9.xyzw
					add r9.xyzw, r8.xyzw, r9.xyzw
					mad r10.xyzw, r6.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r3.xyzw
					mad r8.xyzw, r5.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r8.xyzw
					mad r8.xyzw, -r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r10.xyzw
					add r3.xyzw, -r3.xyzw, r6.xyzw
					mul r3.xyzw, r1.wwww, r3.xyzw
					mul r6.xyzw, r9.xyzw, r24.wwww
					mul r6.xyzw, r1.wwww, r6.xyzw
					mul r8.xyzw, r8.xyzw, r24.wwww
					mad r6.xyzw, r6.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r8.xyzw
					mad r3.xyzw, r3.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					add r3.xyzw, r5.wxyz, r3.wxyz
					sample r5.xyzw, r2.zwzz, t1.xyzw, s2
					sample r6.xyzw, r4.xyxx, t1.xyzw, s2
					sample r4.xyzw, r4.zwzz, t1.xyzw, s2
					sample r8.xyzw, r7.xyxx, t1.xyzw, s2
					sample r7.xyzw, r7.zwzz, t1.xyzw, s2
					sample r2.xyzw, r2.xyxx, t1.xyzw, s2
					sample r9.xyzw, r11.xyxx, t1.xyzw, s2
					sample r10.xyzw, r11.zwzz, t1.xyzw, s2
					sample r11.xyzw, r14.xyxx, t1.xyzw, s2
					sample r12.xyzw, r14.zwzz, t1.xyzw, s2
					sample r13.xyzw, r1.xyxx, t1.xyzw, s2
					sample r14.xyzw, r18.xyxx, t1.xyzw, s2
					sample r15.xyzw, r18.zwzz, t1.xyzw, s2
					sample r16.xyzw, r21.xyxx, t1.xyzw, s2
					sample r17.xyzw, r21.zwzz, t1.xyzw, s2
					sample r18.xyzw, r24.xyxx, t1.xyzw, s2
					mad r19.xyz, r6.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), -r5.xyzx
					mad r19.xyz, -r4.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), r19.xyzx
					add r19.xyz, r8.xyzx, r19.xyzx
					mad r20.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r5.xyzx
					mad r8.xyz, r6.xyzx, l(5.000000, 5.000000, 5.000000, 0.000000), r8.xyzx
					mad r8.xyz, -r8.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r20.xyzx
					add r4.xyz, r4.xyzx, -r5.xyzx
					mul r4.xyz, r1.zzzz, r4.xyzx
					mul r5.xyz, r19.xyzx, r24.zzzz
					mul r5.xyz, r1.zzzz, r5.xyzx
					mul r8.xyz, r8.xyzx, r24.zzzz
					mad r5.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r8.xyzx
					mad r4.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r5.xyzx
					add r4.xyz, r6.xyzx, r4.xyzx
					mad r5.xyz, r2.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), -r7.xyzx
					mad r5.xyz, -r9.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), r5.xyzx
					add r5.xyz, r10.xyzx, r5.xyzx
					mad r6.xyz, r9.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r7.xyzx
					mad r8.xyz, r2.xyzx, l(5.000000, 5.000000, 5.000000, 0.000000), r10.xyzx
					mad r6.xyz, -r8.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r6.xyzx
					add r7.xyz, -r7.xyzx, r9.xyzx
					mul r7.xyz, r1.zzzz, r7.xyzx
					mul r5.xyz, r5.xyzx, r24.zzzz
					mul r5.xyz, r1.zzzz, r5.xyzx
					mul r6.xyz, r6.xyzx, r24.zzzz
					mad r5.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r6.xyzx
					mad r5.xyz, r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r5.xyzx
					add r2.xyz, r2.xyzx, r5.xyzx
					mad r5.xyz, r12.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), -r11.xyzx
					mad r5.xyz, -r13.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), r5.xyzx
					add r5.xyz, r14.xyzx, r5.xyzx
					mad r6.xyz, r13.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r11.xyzx
					mad r7.xyz, r12.xyzx, l(5.000000, 5.000000, 5.000000, 0.000000), r14.xyzx
					mad r6.xyz, -r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r6.xyzx
					add r7.xyz, -r11.xyzx, r13.xyzx
					mul r7.xyz, r1.zzzz, r7.xyzx
					mul r5.xyz, r5.xyzx, r24.zzzz
					mul r5.xyz, r1.zzzz, r5.xyzx
					mul r6.xyz, r6.xyzx, r24.zzzz
					mad r5.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r6.xyzx
					mad r5.xyz, r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r5.xyzx
					add r5.xyz, r12.xyzx, r5.xyzx
					mad r6.xyz, r16.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), -r15.xyzx
					mad r6.xyz, -r17.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), r6.xyzx
					add r6.xyz, r18.xyzx, r6.xyzx
					mad r7.xyz, r17.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r15.xyzx
					mad r8.xyz, r16.xyzx, l(5.000000, 5.000000, 5.000000, 0.000000), r18.xyzx
					mad r7.xyz, -r8.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r7.xyzx
					add r8.xyz, -r15.xyzx, r17.xyzx
					mul r8.xyz, r1.zzzz, r8.xyzx
					mul r6.xyz, r6.xyzx, r24.zzzz
					mul r1.xyz, r1.zzzz, r6.xyzx
					mul r6.xyz, r7.xyzx, r24.zzzz
					mad r1.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r6.xyzx
					mad r1.xyz, r8.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					add r1.xyz, r16.xyzx, r1.xyzx
					mad r6.xyz, r2.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), -r4.xyzx
					mad r6.xyz, -r5.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), r6.xyzx
					add r6.xyz, r1.xyzx, r6.xyzx
					mad r7.xyz, r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r4.xyzx
					mad r1.xyz, r2.xyzx, l(5.000000, 5.000000, 5.000000, 0.000000), r1.xyzx
					mad r1.xyz, -r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r7.xyzx
					add r4.xyz, -r4.xyzx, r5.xyzx
					mul r4.xyz, r1.wwww, r4.xyzx
					mul r5.xyz, r6.xyzx, r24.wwww
					mul r5.xyz, r1.wwww, r5.xyzx
					mul r1.xyz, r1.xyzx, r24.wwww
					mad r1.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					mad r1.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					add r1.xyz, r2.xyzx, r1.xyzx
					add r1.y, r1.y, l(-0.000010)
					lt r1.y, r1.y, l(0.000000)
					discard_nz r1.y
					sample r2.xyzw, v3.xyxx, t2.xyzw, s1
					log r1.y, r2.z
					mul r1.y, r1.y, l(2.200000)
					exp r1.y, r1.y
					mov_sat r3.x, r3.x
					log r1.w, r3.x
					mul r1.w, r1.w, l(2.200000)
					exp r1.w, r1.w
					ftoi r2.x, cb0[6].w
					mul r0.xyzw, r0.xyzw, cb0[6].zzzz
					mul r0.xyzw, r0.xyzw, l(0.314159, 0.314159, 1.973921, 1.973921)
					ge r4.xyzw, r0.zwzw, -r0.zwzw
					movc r4.xyzw, r4.xyzw, l(6.283185,6.283185,0.159155,0.159155), l(-6.283185,-6.283185,-0.159155,-0.159155)
					mul r0.xy, r0.xyxx, r4.zwzz
					frc r0.xy, r0.xyxx
					mad r0.xy, r4.xyxx, r0.xyxx, l(-250.000000, -250.000000, 0.000000, 0.000000)
					mul r0.z, cb0[6].y, cb1[0].x
					mov r2.y, l(1.000000)
					mov r2.zw, r0.xxxy
					mov r0.w, l(0)
					loop 
					  ige r3.x, r0.w, r2.x
					  breakc_nz r3.x
					  iadd r0.w, r0.w, l(1)
					  itof r3.x, r0.w
					  div r3.x, l(3.500000), r3.x
					  add r3.x, -r3.x, l(1.000000)
					  mad r4.x, r0.z, r3.x, -r2.z
					  sincos null, r4.x, r4.x
					  mad r4.y, r0.z, r3.x, r2.w
					  sincos r4.y, null, r4.y
					  add r4.x, r4.y, r4.x
					  mad r4.z, r0.z, r3.x, -r2.w
					  sincos r4.z, null, r4.z
					  mad r4.w, r0.z, r3.x, r2.z
					  sincos null, r4.w, r4.w
					  add r4.y, r4.w, r4.z
					  add r2.zw, r0.xxxy, r4.xxxy
					  mad r4.xy, r0.zzzz, r3.xxxx, r2.zwzz
					  sincos r3.x, null, r4.x
					  mul r3.x, r3.x, l(200.000000)
					  div r5.x, r0.x, r3.x
					  sincos null, r3.x, r4.y
					  mul r3.x, r3.x, l(200.000000)
					  div r5.y, r0.y, r3.x
					  dp2 r3.x, r5.xyxx, r5.xyxx
					  sqrt r3.x, r3.x
					  div r3.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.x
					  add r2.y, r2.y, r3.x
					endloop 
					round_z r0.x, cb0[6].w
					div r0.x, r2.y, r0.x
					log r0.x, r0.x
					mul r0.x, r0.x, l(1.400000)
					exp r0.x, r0.x
					add r0.x, -r0.x, l(1.170000)
					mul r0.x, |r0.x|, |r0.x|
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r0.x
					mul r0.y, r0.x, cb0[7].x
					ftoi r0.z, cb0[7].y
					mul r2.xy, v3.xyxx, cb0[7].wwww
					div r2.xy, r2.xyxx, cb0[15].zwzz
					mul r2.z, cb0[7].z, cb1[0].x
					mov r0.w, l(0)
					mov r2.w, l(0)
					loop 
					  ige r3.x, r2.w, r0.z
					  breakc_nz r3.x
					  itof r3.x, r2.w
					  exp r3.x, r3.x
					  mul r4.xyz, r2.xyzx, r3.xxxx
					  round_ni r4.xyz, r4.xyzx
					  mad r5.xyz, r3.xxxx, r2.xyzx, -r4.xyzx
					  dp3 r4.x, r4.xyzx, l(7.000000, 157.000000, 113.000000, 0.000000)
					  add r6.xyzw, r4.xxxx, l(0.000000, 157.000000, 113.000000, 270.000000)
					  mul r4.yzw, r5.xxyz, r5.xxyz
					  mad r5.xyz, -r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
					  mul r4.yzw, r4.yyzw, r5.xxyz
					  sincos r5.xyzw, null, r6.xyzw
					  mul r5.xyzw, r5.xyzw, l(43758.500000, 43758.500000, 43758.500000, 43758.500000)
					  frc r5.xyzw, r5.xyzw
					  add r6.xyzw, r4.xxxx, l(7.000000, 164.000000, 120.000000, 277.000000)
					  sincos r6.xyzw, null, r6.xyzw
					  mul r6.xyzw, r6.xyzw, l(43758.500000, 43758.500000, 43758.500000, 43758.500000)
					  frc r6.xyzw, r6.xyzw
					  add r6.xyzw, -r5.xyzw, r6.xyzw
					  mad r5.xyzw, r4.yyyy, r6.xyzw, r5.xyzw
					  add r4.xy, -r5.xzxx, r5.ywyy
					  mad r4.xy, r4.zzzz, r4.xyxx, r5.xzxx
					  add r4.y, -r4.x, r4.y
					  mad r4.x, r4.w, r4.y, r4.x
					  mad r4.x, r4.x, l(2.000000), l(-1.000000)
					  div r3.x, r4.x, r3.x
					  add r0.w, r0.w, r3.x
					  iadd r2.w, r2.w, l(1)
					endloop 
					add r0.z, -r1.z, r1.x
					add_sat r0.z, r1.w, r0.z
					add r1.z, -cb0[5].w, |cb0[11].w|
					add r1.w, -cb0[5].w, cb0[6].x
					div_sat r1.z, r1.z, r1.w
					add r1.w, -cb0[5].y, cb0[5].z
					mad r1.z, r1.z, r1.w, cb0[5].y
					add r1.w, -r1.z, cb0[5].x
					max r1.w, r1.w, l(0.000000)
					add r1.z, r1.z, cb0[5].x
					min r1.z, r1.z, l(1.000000)
					add r1.z, -r1.w, r1.z
					add r1.w, r0.z, -r1.w
					div r1.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
					mul_sat r1.z, r1.z, r1.w
					mad r1.w, r1.z, l(-2.000000), l(3.000000)
					mul r1.z, r1.z, r1.z
					mul r2.x, r1.z, r1.w
					mad r0.z, r1.w, r1.z, -r0.z
					add_sat r0.z, -|r1.x|, r0.z
					mad r0.w, cb0[8].x, r0.w, l(1.000000)
					mad r0.w, r0.w, l(-0.250000), l(0.750000)
					mad r0.y, r0.y, l(0.250000), l(0.750000)
					mul r1.xzw, r0.yyyy, cb0[10].xxyz
					mad r0.x, cb0[7].x, r0.x, l(0.500000)
					mad r0.y, -r0.w, r1.y, l(1.000000)
					mul r0.y, r0.y, r2.x
					mad r2.yzw, r3.yyzw, r0.xxxx, -r1.xxzw
					mad r0.xyw, r0.yyyy, r2.yzyw, r1.xzxw
					mad o0.xyz, r2.xxxx, r0.xywx, r0.zzzz
					mul o0.w, r2.x, cb0[8].y
					mov o1.xyzw, l(0,0,0,0)
					mov o2.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "ENABLE_HEAT_HAZE" "ENABLE_CAUSTIC" "_SAMPLEFILTERING_BILINEAR" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v3.xy
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_temps 7
					mad r0.xyzw, cb0[15].zwzw, l(0.500000, 0.500000, -0.500000, 0.500000), v3.xyxy
					mad r1.xyzw, cb0[15].zwzw, l(0.500000, -0.500000, -0.500000, -0.500000), v3.xyxy
					sample r2.xyzw, r0.xyxx, t0.xyzw, s0
					sample r3.xyzw, r0.zwzz, t0.xyzw, s0
					sample r4.xyzw, r1.xyxx, t0.xyzw, s0
					sample r5.xyzw, r1.zwzz, t0.xyzw, s0
					div r6.xy, r1.zwzz, cb0[15].zwzz
					frc r6.xy, r6.xyxx
					add r2.xyzw, r2.xyzw, -r3.xyzw
					mad r2.xyzw, r6.xxxx, r2.xyzw, r3.xyzw
					add r3.xyzw, r4.xyzw, -r5.xyzw
					mad r3.xyzw, r6.xxxx, r3.xyzw, r5.xyzw
					add r2.xyzw, r2.xyzw, -r3.xyzw
					mad r2.xyzw, r6.yyyy, r2.wxyz, r3.wxyz
					sample r3.xyzw, r0.xyxx, t1.xyzw, s2
					sample r0.xyzw, r0.zwzz, t1.xyzw, s2
					sample r4.xyzw, r1.xyxx, t1.xyzw, s2
					sample r1.xyzw, r1.zwzz, t1.xyzw, s2
					add r3.xyz, -r0.xyzx, r3.xyzx
					mad r0.xyz, r6.xxxx, r3.xyzx, r0.xyzx
					add r3.xyz, -r1.xyzx, r4.xyzx
					mad r1.xyz, r6.xxxx, r3.xyzx, r1.xyzx
					add r0.xyz, r0.xyzx, -r1.xyzx
					mad r0.xyz, r6.yyyy, r0.xyzx, r1.xyzx
					add r0.y, r0.y, l(-0.000010)
					lt r0.y, r0.y, l(0.000000)
					discard_nz r0.y
					sample r1.xyzw, v3.xyxx, t2.xyzw, s1
					log r0.y, r1.z
					mul r0.y, r0.y, l(2.200000)
					exp r0.y, r0.y
					mov_sat r2.x, r2.x
					log r0.w, r2.x
					mul r0.w, r0.w, l(2.200000)
					exp r0.w, r0.w
					ftoi r1.x, cb0[6].w
					div r3.xyzw, v3.xyxy, cb0[15].zwzw
					mul r3.xyzw, r3.xyzw, cb0[6].zzzz
					mul r3.xyzw, r3.xyzw, l(0.314159, 0.314159, 1.973921, 1.973921)
					ge r4.xyzw, r3.zwzw, -r3.zwzw
					movc r4.xyzw, r4.xyzw, l(6.283185,6.283185,0.159155,0.159155), l(-6.283185,-6.283185,-0.159155,-0.159155)
					mul r1.yz, r3.xxyx, r4.zzwz
					frc r1.yz, r1.yyzy
					mad r1.yz, r4.xxyx, r1.yyzy, l(0.000000, -250.000000, -250.000000, 0.000000)
					mul r1.w, cb0[6].y, cb1[0].x
					mov r3.x, l(1.000000)
					mov r3.yz, r1.yyzy
					mov r2.x, l(0)
					loop 
					  ige r3.w, r2.x, r1.x
					  breakc_nz r3.w
					  iadd r2.x, r2.x, l(1)
					  itof r3.w, r2.x
					  div r3.w, l(3.500000), r3.w
					  add r3.w, -r3.w, l(1.000000)
					  mad r4.x, r1.w, r3.w, -r3.y
					  sincos null, r4.x, r4.x
					  mad r4.y, r1.w, r3.w, r3.z
					  sincos r4.y, null, r4.y
					  add r4.x, r4.y, r4.x
					  mad r4.z, r1.w, r3.w, -r3.z
					  sincos r4.z, null, r4.z
					  mad r4.w, r1.w, r3.w, r3.y
					  sincos null, r4.w, r4.w
					  add r4.y, r4.w, r4.z
					  add r3.yz, r1.yyzy, r4.xxyx
					  mad r4.xy, r1.wwww, r3.wwww, r3.yzyy
					  sincos r3.w, null, r4.x
					  mul r3.w, r3.w, l(200.000000)
					  div r5.x, r1.y, r3.w
					  sincos null, r3.w, r4.y
					  mul r3.w, r3.w, l(200.000000)
					  div r5.y, r1.z, r3.w
					  dp2 r3.w, r5.xyxx, r5.xyxx
					  sqrt r3.w, r3.w
					  div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
					  add r3.x, r3.w, r3.x
					endloop 
					round_z r1.x, cb0[6].w
					div r1.x, r3.x, r1.x
					log r1.x, r1.x
					mul r1.x, r1.x, l(1.400000)
					exp r1.x, r1.x
					add r1.x, -r1.x, l(1.170000)
					mul r1.x, |r1.x|, |r1.x|
					mul r1.x, r1.x, r1.x
					mul r1.x, r1.x, r1.x
					mul r1.y, r1.x, cb0[7].x
					ftoi r1.z, cb0[7].y
					mul r3.xy, v3.xyxx, cb0[7].wwww
					div r3.xy, r3.xyxx, cb0[15].zwzz
					mul r3.z, cb0[7].z, cb1[0].x
					mov r1.w, l(0)
					mov r2.x, l(0)
					loop 
					  ige r3.w, r2.x, r1.z
					  breakc_nz r3.w
					  itof r3.w, r2.x
					  exp r3.w, r3.w
					  mul r4.xyz, r3.xyzx, r3.wwww
					  round_ni r4.xyz, r4.xyzx
					  mad r5.xyz, r3.wwww, r3.xyzx, -r4.xyzx
					  dp3 r4.x, r4.xyzx, l(7.000000, 157.000000, 113.000000, 0.000000)
					  add r6.xyzw, r4.xxxx, l(0.000000, 157.000000, 113.000000, 270.000000)
					  mul r4.yzw, r5.xxyz, r5.xxyz
					  mad r5.xyz, -r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
					  mul r4.yzw, r4.yyzw, r5.xxyz
					  sincos r5.xyzw, null, r6.xyzw
					  mul r5.xyzw, r5.xyzw, l(43758.500000, 43758.500000, 43758.500000, 43758.500000)
					  frc r5.xyzw, r5.xyzw
					  add r6.xyzw, r4.xxxx, l(7.000000, 164.000000, 120.000000, 277.000000)
					  sincos r6.xyzw, null, r6.xyzw
					  mul r6.xyzw, r6.xyzw, l(43758.500000, 43758.500000, 43758.500000, 43758.500000)
					  frc r6.xyzw, r6.xyzw
					  add r6.xyzw, -r5.xyzw, r6.xyzw
					  mad r5.xyzw, r4.yyyy, r6.xyzw, r5.xyzw
					  add r4.xy, -r5.xzxx, r5.ywyy
					  mad r4.xy, r4.zzzz, r4.xyxx, r5.xzxx
					  add r4.y, -r4.x, r4.y
					  mad r4.x, r4.w, r4.y, r4.x
					  mad r4.x, r4.x, l(2.000000), l(-1.000000)
					  div r3.w, r4.x, r3.w
					  add r1.w, r1.w, r3.w
					  iadd r2.x, r2.x, l(1)
					endloop 
					add r0.z, -r0.z, r0.x
					add_sat r0.z, r0.w, r0.z
					add r0.w, -cb0[5].w, |cb0[11].w|
					add r1.z, -cb0[5].w, cb0[6].x
					div_sat r0.w, r0.w, r1.z
					add r1.z, -cb0[5].y, cb0[5].z
					mad r0.w, r0.w, r1.z, cb0[5].y
					add r1.z, -r0.w, cb0[5].x
					max r1.z, r1.z, l(0.000000)
					add r0.w, r0.w, cb0[5].x
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r1.z, r0.w
					add r1.z, r0.z, -r1.z
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					mul_sat r0.w, r0.w, r1.z
					mad r1.z, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r2.x, r0.w, r1.z
					mad r0.z, r1.z, r0.w, -r0.z
					add_sat r0.x, -|r0.x|, r0.z
					mad r0.z, cb0[8].x, r1.w, l(1.000000)
					mad r0.z, r0.z, l(-0.250000), l(0.750000)
					mad r0.w, r1.y, l(0.250000), l(0.750000)
					mul r1.yzw, r0.wwww, cb0[10].xxyz
					mad r0.w, cb0[7].x, r1.x, l(0.500000)
					mad r0.y, -r0.z, r0.y, l(1.000000)
					mul r0.y, r0.y, r2.x
					mad r2.yzw, r2.yyzw, r0.wwww, -r1.yyzw
					mad r0.yzw, r0.yyyy, r2.yyzw, r1.yyzw
					mad o0.xyz, r2.xxxx, r0.yzwy, r0.xxxx
					mul o0.w, r2.x, cb0[8].y
					mov o1.xyzw, l(0,0,0,0)
					mov o2.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "ENABLE_HEAT_HAZE" "ENABLE_CAUSTIC" "_SAMPLEFILTERING_NONE" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v3.xy
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_temps 7
					sample r0.xyzw, v3.xyxx, t0.wxyz, s0
					sample r1.xyzw, v3.xyxx, t1.xyzw, s2
					add r1.y, r1.y, l(-0.000010)
					lt r1.y, r1.y, l(0.000000)
					discard_nz r1.y
					sample r2.xyzw, v3.xyxx, t2.xyzw, s1
					log r1.y, r2.z
					mul r1.y, r1.y, l(2.200000)
					exp r1.y, r1.y
					mov_sat r0.x, r0.x
					log r0.x, r0.x
					mul r0.x, r0.x, l(2.200000)
					exp r0.x, r0.x
					ftoi r1.w, cb0[6].w
					div r2.xyzw, v3.xyxy, cb0[15].zwzw
					mul r2.xyzw, r2.xyzw, cb0[6].zzzz
					mul r2.xyzw, r2.xyzw, l(0.314159, 0.314159, 1.973921, 1.973921)
					ge r3.xyzw, r2.zwzw, -r2.zwzw
					movc r3.xyzw, r3.xyzw, l(6.283185,6.283185,0.159155,0.159155), l(-6.283185,-6.283185,-0.159155,-0.159155)
					mul r2.xy, r2.xyxx, r3.zwzz
					frc r2.xy, r2.xyxx
					mad r2.xy, r3.xyxx, r2.xyxx, l(-250.000000, -250.000000, 0.000000, 0.000000)
					mul r2.z, cb0[6].y, cb1[0].x
					mov r3.x, l(1.000000)
					mov r3.yz, r2.xxyx
					mov r2.w, l(0)
					loop 
					  ige r3.w, r2.w, r1.w
					  breakc_nz r3.w
					  iadd r2.w, r2.w, l(1)
					  itof r3.w, r2.w
					  div r3.w, l(3.500000), r3.w
					  add r3.w, -r3.w, l(1.000000)
					  mad r4.x, r2.z, r3.w, -r3.y
					  sincos null, r4.x, r4.x
					  mad r4.y, r2.z, r3.w, r3.z
					  sincos r4.y, null, r4.y
					  add r4.x, r4.y, r4.x
					  mad r4.z, r2.z, r3.w, -r3.z
					  sincos r4.z, null, r4.z
					  mad r4.w, r2.z, r3.w, r3.y
					  sincos null, r4.w, r4.w
					  add r4.y, r4.w, r4.z
					  add r3.yz, r2.xxyx, r4.xxyx
					  mad r4.xy, r2.zzzz, r3.wwww, r3.yzyy
					  sincos r3.w, null, r4.x
					  mul r3.w, r3.w, l(200.000000)
					  div r5.x, r2.x, r3.w
					  sincos null, r3.w, r4.y
					  mul r3.w, r3.w, l(200.000000)
					  div r5.y, r2.y, r3.w
					  dp2 r3.w, r5.xyxx, r5.xyxx
					  sqrt r3.w, r3.w
					  div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
					  add r3.x, r3.w, r3.x
					endloop 
					round_z r1.w, cb0[6].w
					div r1.w, r3.x, r1.w
					log r1.w, r1.w
					mul r1.w, r1.w, l(1.400000)
					exp r1.w, r1.w
					add r1.w, -r1.w, l(1.170000)
					mul r1.w, |r1.w|, |r1.w|
					mul r1.w, r1.w, r1.w
					mul r1.w, r1.w, r1.w
					mul r2.x, r1.w, cb0[7].x
					ftoi r2.y, cb0[7].y
					mul r2.zw, v3.xxxy, cb0[7].wwww
					div r3.xy, r2.zwzz, cb0[15].zwzz
					mul r3.z, cb0[7].z, cb1[0].x
					mov r2.zw, l(0,0,0,0)
					loop 
					  ige r3.w, r2.w, r2.y
					  breakc_nz r3.w
					  itof r3.w, r2.w
					  exp r3.w, r3.w
					  mul r4.xyz, r3.xyzx, r3.wwww
					  round_ni r4.xyz, r4.xyzx
					  mad r5.xyz, r3.wwww, r3.xyzx, -r4.xyzx
					  dp3 r4.x, r4.xyzx, l(7.000000, 157.000000, 113.000000, 0.000000)
					  add r6.xyzw, r4.xxxx, l(0.000000, 157.000000, 113.000000, 270.000000)
					  mul r4.yzw, r5.xxyz, r5.xxyz
					  mad r5.xyz, -r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
					  mul r4.yzw, r4.yyzw, r5.xxyz
					  sincos r5.xyzw, null, r6.xyzw
					  mul r5.xyzw, r5.xyzw, l(43758.500000, 43758.500000, 43758.500000, 43758.500000)
					  frc r5.xyzw, r5.xyzw
					  add r6.xyzw, r4.xxxx, l(7.000000, 164.000000, 120.000000, 277.000000)
					  sincos r6.xyzw, null, r6.xyzw
					  mul r6.xyzw, r6.xyzw, l(43758.500000, 43758.500000, 43758.500000, 43758.500000)
					  frc r6.xyzw, r6.xyzw
					  add r6.xyzw, -r5.xyzw, r6.xyzw
					  mad r5.xyzw, r4.yyyy, r6.xyzw, r5.xyzw
					  add r4.xy, -r5.xzxx, r5.ywyy
					  mad r4.xy, r4.zzzz, r4.xyxx, r5.xzxx
					  add r4.y, -r4.x, r4.y
					  mad r4.x, r4.w, r4.y, r4.x
					  mad r4.x, r4.x, l(2.000000), l(-1.000000)
					  div r3.w, r4.x, r3.w
					  add r2.z, r2.z, r3.w
					  iadd r2.w, r2.w, l(1)
					endloop 
					add r1.z, -r1.z, r1.x
					add_sat r0.x, r0.x, r1.z
					add r1.z, -cb0[5].w, |cb0[11].w|
					add r2.y, -cb0[5].w, cb0[6].x
					div_sat r1.z, r1.z, r2.y
					add r2.y, -cb0[5].y, cb0[5].z
					mad r1.z, r1.z, r2.y, cb0[5].y
					add r2.y, -r1.z, cb0[5].x
					max r2.y, r2.y, l(0.000000)
					add r1.z, r1.z, cb0[5].x
					min r1.z, r1.z, l(1.000000)
					add r1.z, -r2.y, r1.z
					add r2.y, r0.x, -r2.y
					div r1.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
					mul_sat r1.z, r1.z, r2.y
					mad r2.y, r1.z, l(-2.000000), l(3.000000)
					mul r1.z, r1.z, r1.z
					mul r2.w, r1.z, r2.y
					mad r0.x, r2.y, r1.z, -r0.x
					add_sat r0.x, -|r1.x|, r0.x
					mad r1.x, cb0[8].x, r2.z, l(1.000000)
					mad r1.x, r1.x, l(-0.250000), l(0.750000)
					mad r1.z, r2.x, l(0.250000), l(0.750000)
					mul r2.xyz, r1.zzzz, cb0[10].xyzx
					mad r1.z, cb0[7].x, r1.w, l(0.500000)
					mad r1.x, -r1.x, r1.y, l(1.000000)
					mul r1.x, r1.x, r2.w
					mad r0.yzw, r0.yyzw, r1.zzzz, -r2.xxyz
					mad r0.yzw, r1.xxxx, r0.yyzw, r2.xxyz
					mad o0.xyz, r2.wwww, r0.yzwy, r0.xxxx
					mul o0.w, r2.w, cb0[8].y
					mov o1.xyzw, l(0,0,0,0)
					mov o2.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "ENABLE_HEAT_HAZE" "ENABLE_CAUSTIC" "ENABLE_WAVE" "_SAMPLEFILTERING_BICUBIC_HERMITE" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v3.xy
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_temps 28
					div r0.xyzw, v3.xyxy, cb0[15].zwzw
					add r1.xy, r0.zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
					frc r1.zw, r1.xxxy
					round_ni r1.xy, r1.xyxx
					add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					mul r2.xy, r1.xyxx, cb0[15].zwzz
					mad r2.zw, r1.xxxy, cb0[15].zzzw, -cb0[15].zzzw
					sample r3.xyzw, r2.zwzz, t0.xyzw, s0
					mad r4.xyzw, cb0[15].zwzw, l(0.000000, -1.000000, 1.000000, -1.000000), r2.xyxy
					sample r5.xyzw, r4.xyxx, t0.xyzw, s0
					sample r6.xyzw, r4.zwzz, t0.xyzw, s0
					mad r7.xyzw, cb0[15].zwzw, l(2.000000, -1.000000, -1.000000, 0.000000), r2.xyxy
					sample r8.xyzw, r7.xyxx, t0.xyzw, s0
					sample r9.xyzw, r7.zwzz, t0.xyzw, s0
					sample r10.xyzw, r2.xyxx, t0.xyzw, s0
					mad r11.xyzw, cb0[15].zwzw, l(1.000000, 0.000000, 2.000000, 0.000000), r2.xyxy
					sample r12.xyzw, r11.xyxx, t0.xyzw, s0
					sample r13.xyzw, r11.zwzz, t0.xyzw, s0
					mad r14.xyzw, cb0[15].zwzw, l(-1.000000, 1.000000, 0.000000, 1.000000), r2.xyxy
					sample r15.xyzw, r14.xyxx, t0.xyzw, s0
					sample r16.xyzw, r14.zwzz, t0.xyzw, s0
					mad r1.xy, r1.xyxx, cb0[15].zwzz, cb0[15].zwzz
					sample r17.xyzw, r1.xyxx, t0.xyzw, s0
					mad r18.xyzw, cb0[15].zwzw, l(2.000000, 1.000000, -1.000000, 2.000000), r2.xyxy
					sample r19.xyzw, r18.xyxx, t0.xyzw, s0
					sample r20.xyzw, r18.zwzz, t0.xyzw, s0
					mad r21.xyzw, cb0[15].zwzw, l(0.000000, 2.000000, 1.000000, 2.000000), r2.xyxy
					sample r22.xyzw, r21.xyxx, t0.xyzw, s0
					sample r23.xyzw, r21.zwzz, t0.xyzw, s0
					mad r24.xy, cb0[15].zwzz, l(2.000000, 2.000000, 0.000000, 0.000000), r2.xyxx
					sample r25.xyzw, r24.xyxx, t0.xyzw, s0
					mad r26.xyzw, r5.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r3.xyzw
					mad r26.xyzw, -r6.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r26.xyzw
					add r26.xyzw, r8.xyzw, r26.xyzw
					mul r24.zw, r1.zzzw, r1.zzzw
					mad r27.xyzw, r6.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r3.xyzw
					mad r8.xyzw, r5.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r8.xyzw
					mad r8.xyzw, -r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r27.xyzw
					add r3.xyzw, -r3.xyzw, r6.xyzw
					mul r3.xyzw, r1.zzzz, r3.xyzw
					mul r6.xyzw, r26.xyzw, r24.zzzz
					mul r6.xyzw, r1.zzzz, r6.xyzw
					mul r8.xyzw, r8.xyzw, r24.zzzz
					mad r6.xyzw, r6.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r8.xyzw
					mad r3.xyzw, r3.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					add r3.xyzw, r5.xyzw, r3.xyzw
					mad r5.xyzw, r10.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r9.xyzw
					mad r5.xyzw, -r12.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r5.xyzw
					add r5.xyzw, r13.xyzw, r5.xyzw
					mad r6.xyzw, r12.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r9.xyzw
					mad r8.xyzw, r10.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r13.xyzw
					mad r6.xyzw, -r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					add r8.xyzw, -r9.xyzw, r12.xyzw
					mul r8.xyzw, r1.zzzz, r8.xyzw
					mul r5.xyzw, r5.xyzw, r24.zzzz
					mul r5.xyzw, r1.zzzz, r5.xyzw
					mul r6.xyzw, r6.xyzw, r24.zzzz
					mad r5.xyzw, r5.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					mad r5.xyzw, r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r5.xyzw
					add r5.xyzw, r10.xyzw, r5.xyzw
					mad r6.xyzw, r16.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r15.xyzw
					mad r6.xyzw, -r17.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r6.xyzw
					add r6.xyzw, r19.xyzw, r6.xyzw
					mad r8.xyzw, r17.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r15.xyzw
					mad r9.xyzw, r16.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r19.xyzw
					mad r8.xyzw, -r9.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r8.xyzw
					add r9.xyzw, -r15.xyzw, r17.xyzw
					mul r9.xyzw, r1.zzzz, r9.xyzw
					mul r6.xyzw, r6.xyzw, r24.zzzz
					mul r6.xyzw, r1.zzzz, r6.xyzw
					mul r8.xyzw, r8.xyzw, r24.zzzz
					mad r6.xyzw, r6.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r8.xyzw
					mad r6.xyzw, r9.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					add r6.xyzw, r16.xyzw, r6.xyzw
					mad r8.xyzw, r22.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r20.xyzw
					mad r8.xyzw, -r23.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r8.xyzw
					add r8.xyzw, r25.xyzw, r8.xyzw
					mad r9.xyzw, r23.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r20.xyzw
					mad r10.xyzw, r22.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r25.xyzw
					mad r9.xyzw, -r10.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r9.xyzw
					add r10.xyzw, -r20.xyzw, r23.xyzw
					mul r10.xyzw, r1.zzzz, r10.xyzw
					mul r8.xyzw, r8.xyzw, r24.zzzz
					mul r8.xyzw, r1.zzzz, r8.xyzw
					mul r9.xyzw, r9.xyzw, r24.zzzz
					mad r8.xyzw, r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r9.xyzw
					mad r8.xyzw, r10.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r8.xyzw
					add r8.xyzw, r22.xyzw, r8.xyzw
					mad r9.xyzw, r5.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r3.xyzw
					mad r9.xyzw, -r6.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r9.xyzw
					add r9.xyzw, r8.xyzw, r9.xyzw
					mad r10.xyzw, r6.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r3.xyzw
					mad r8.xyzw, r5.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r8.xyzw
					mad r8.xyzw, -r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r10.xyzw
					add r3.xyzw, -r3.xyzw, r6.xyzw
					mul r3.xyzw, r1.wwww, r3.xyzw
					mul r6.xyzw, r9.xyzw, r24.wwww
					mul r6.xyzw, r1.wwww, r6.xyzw
					mul r8.xyzw, r8.xyzw, r24.wwww
					mad r6.xyzw, r6.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r8.xyzw
					mad r3.xyzw, r3.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					add r3.xyzw, r5.wxyz, r3.wxyz
					sample r5.xyzw, r2.zwzz, t1.xyzw, s2
					sample r6.xyzw, r4.xyxx, t1.xyzw, s2
					sample r4.xyzw, r4.zwzz, t1.xyzw, s2
					sample r8.xyzw, r7.xyxx, t1.xyzw, s2
					sample r7.xyzw, r7.zwzz, t1.xyzw, s2
					sample r2.xyzw, r2.xyxx, t1.xyzw, s2
					sample r9.xyzw, r11.xyxx, t1.xyzw, s2
					sample r10.xyzw, r11.zwzz, t1.xyzw, s2
					sample r11.xyzw, r14.xyxx, t1.xyzw, s2
					sample r12.xyzw, r14.zwzz, t1.xyzw, s2
					sample r13.xyzw, r1.xyxx, t1.xyzw, s2
					sample r14.xyzw, r18.xyxx, t1.xyzw, s2
					sample r15.xyzw, r18.zwzz, t1.xyzw, s2
					sample r16.xyzw, r21.xyxx, t1.xyzw, s2
					sample r17.xyzw, r21.zwzz, t1.xyzw, s2
					sample r18.xyzw, r24.xyxx, t1.xyzw, s2
					mad r19.xyzw, r6.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r5.xyzw
					mad r19.xyzw, -r4.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r19.xyzw
					add r19.xyzw, r8.xyzw, r19.xyzw
					mad r20.xyzw, r4.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r5.xyzw
					mad r8.xyzw, r6.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r8.xyzw
					mad r8.xyzw, -r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r20.xyzw
					add r4.xyzw, r4.xyzw, -r5.xyzw
					mul r4.xyzw, r1.zzzz, r4.xyzw
					mul r5.xyzw, r19.xyzw, r24.zzzz
					mul r5.xyzw, r1.zzzz, r5.xyzw
					mul r8.xyzw, r8.xyzw, r24.zzzz
					mad r5.xyzw, r5.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r8.xyzw
					mad r4.xyzw, r4.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r5.xyzw
					add r4.xyzw, r6.xyzw, r4.xyzw
					mad r5.xyzw, r2.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r7.xyzw
					mad r5.xyzw, -r9.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r5.xyzw
					add r5.xyzw, r10.xyzw, r5.xyzw
					mad r6.xyzw, r9.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r7.xyzw
					mad r8.xyzw, r2.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r10.xyzw
					mad r6.xyzw, -r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					add r7.xyzw, -r7.xyzw, r9.xyzw
					mul r7.xyzw, r1.zzzz, r7.xyzw
					mul r5.xyzw, r5.xyzw, r24.zzzz
					mul r5.xyzw, r1.zzzz, r5.xyzw
					mul r6.xyzw, r6.xyzw, r24.zzzz
					mad r5.xyzw, r5.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					mad r5.xyzw, r7.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r5.xyzw
					add r2.xyzw, r2.xyzw, r5.xyzw
					mad r5.xyzw, r12.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r11.xyzw
					mad r5.xyzw, -r13.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r5.xyzw
					add r5.xyzw, r14.xyzw, r5.xyzw
					mad r6.xyzw, r13.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r11.xyzw
					mad r7.xyzw, r12.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r14.xyzw
					mad r6.xyzw, -r7.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					add r7.xyzw, -r11.xyzw, r13.xyzw
					mul r7.xyzw, r1.zzzz, r7.xyzw
					mul r5.xyzw, r5.xyzw, r24.zzzz
					mul r5.xyzw, r1.zzzz, r5.xyzw
					mul r6.xyzw, r6.xyzw, r24.zzzz
					mad r5.xyzw, r5.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					mad r5.xyzw, r7.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r5.xyzw
					add r5.xyzw, r12.xyzw, r5.xyzw
					mad r6.xyzw, r16.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r15.xyzw
					mad r6.xyzw, -r17.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r6.xyzw
					add r6.xyzw, r18.xyzw, r6.xyzw
					mad r7.xyzw, r17.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r15.xyzw
					mad r8.xyzw, r16.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r18.xyzw
					mad r7.xyzw, -r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r7.xyzw
					add r8.xyzw, -r15.xyzw, r17.xyzw
					mul r8.xyzw, r1.zzzz, r8.xyzw
					mul r6.xyzw, r6.xyzw, r24.zzzz
					mul r6.xyzw, r1.zzzz, r6.xyzw
					mul r7.xyzw, r7.xyzw, r24.zzzz
					mad r6.xyzw, r6.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r7.xyzw
					mad r6.xyzw, r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
					add r6.xyzw, r16.xyzw, r6.xyzw
					mad r7.xyzw, r2.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), -r4.xyzw
					mad r7.xyzw, -r5.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), r7.xyzw
					add r7.xyzw, r6.xyzw, r7.xyzw
					mad r8.xyzw, r5.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), r4.xyzw
					mad r6.xyzw, r2.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000), r6.xyzw
					mad r6.xyzw, -r6.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r8.xyzw
					add r4.xyzw, -r4.xyzw, r5.xyzw
					mul r4.xyzw, r1.wwww, r4.xyzw
					mul r5.xyzw, r7.xyzw, r24.wwww
					mul r1.xyzw, r1.wwww, r5.xyzw
					mul r5.xyzw, r6.xyzw, r24.wwww
					mad r1.xyzw, r1.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r5.xyzw
					mad r1.xyzw, r4.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r1.xyzw
					add r1.xyzw, r2.wxyz, r1.wxyz
					add r2.x, r1.z, l(-0.000010)
					lt r2.x, r2.x, l(0.000000)
					discard_nz r2.x
					sample r2.xyzw, v3.xyxx, t2.xyzw, s1
					log r2.x, r2.z
					mul r2.x, r2.x, l(2.200000)
					exp r2.x, r2.x
					mov_sat r3.x, r3.x
					log r2.y, r3.x
					mul r2.y, r2.y, l(2.200000)
					exp r2.y, r2.y
					mov_sat r1.x, r1.x
					ftoi r2.z, cb0[9].x
					mul r4.xyzw, r0.zwzw, cb0[8].wwww
					mul r4.xyzw, r4.xyzw, l(0.314159, 0.314159, 1.973921, 1.973921)
					ge r5.xyzw, r4.zwzw, -r4.zwzw
					movc r5.xyzw, r5.xyzw, l(6.283185,6.283185,0.159155,0.159155), l(-6.283185,-6.283185,-0.159155,-0.159155)
					mul r4.xy, r4.xyxx, r5.zwzz
					frc r4.xy, r4.xyxx
					mad r4.xy, r5.xyxx, r4.xyxx, l(-250.000000, -250.000000, 0.000000, 0.000000)
					mul r2.w, cb0[8].z, cb1[0].x
					mov r5.x, l(1.000000)
					mov r5.yz, r4.xxyx
					mov r3.x, l(0)
					loop 
					  ige r4.z, r3.x, r2.z
					  breakc_nz r4.z
					  iadd r3.x, r3.x, l(1)
					  itof r4.z, r3.x
					  div r4.z, l(3.500000), r4.z
					  add r4.z, -r4.z, l(1.000000)
					  mad r4.w, r2.w, r4.z, -r5.y
					  sincos null, r4.w, r4.w
					  mad r5.w, r2.w, r4.z, r5.z
					  sincos r5.w, null, r5.w
					  add r6.x, r4.w, r5.w
					  mad r4.w, r2.w, r4.z, -r5.z
					  sincos r4.w, null, r4.w
					  mad r5.w, r2.w, r4.z, r5.y
					  sincos null, r5.w, r5.w
					  add r6.y, r4.w, r5.w
					  add r5.yz, r4.xxyx, r6.xxyx
					  mad r4.zw, r2.wwww, r4.zzzz, r5.yyyz
					  sincos r4.z, null, r4.z
					  mul r4.z, r4.z, l(200.000000)
					  div r6.x, r4.x, r4.z
					  sincos null, r4.z, r4.w
					  mul r4.z, r4.z, l(200.000000)
					  div r6.y, r4.y, r4.z
					  dp2 r4.z, r6.xyxx, r6.xyxx
					  sqrt r4.z, r4.z
					  div r4.z, l(1.000000, 1.000000, 1.000000, 1.000000), r4.z
					  add r5.x, r4.z, r5.x
					endloop 
					round_z r2.z, cb0[9].x
					div r2.z, r5.x, r2.z
					log r2.z, r2.z
					mul r2.z, r2.z, l(1.400000)
					exp r2.z, r2.z
					add r2.z, -r2.z, l(1.170000)
					mul r2.z, |r2.z|, |r2.z|
					mul r2.z, r2.z, r2.z
					mul r2.z, r2.z, r2.z
					mul r2.z, r2.z, cb0[9].y
					ftoi r2.w, cb0[6].w
					mul r0.xyzw, r0.xyzw, cb0[6].zzzz
					mul r0.xyzw, r0.xyzw, l(0.314159, 0.314159, 1.973921, 1.973921)
					ge r4.xyzw, r0.zwzw, -r0.zwzw
					movc r4.xyzw, r4.xyzw, l(6.283185,6.283185,0.159155,0.159155), l(-6.283185,-6.283185,-0.159155,-0.159155)
					mul r0.xy, r0.xyxx, r4.zwzz
					frc r0.xy, r0.xyxx
					mad r0.xy, r4.xyxx, r0.xyxx, l(-250.000000, -250.000000, 0.000000, 0.000000)
					mul r0.z, cb0[6].y, cb1[0].x
					mov r4.x, l(1.000000)
					mov r4.yz, r0.xxyx
					mov r0.w, l(0)
					loop 
					  ige r3.x, r0.w, r2.w
					  breakc_nz r3.x
					  iadd r0.w, r0.w, l(1)
					  itof r3.x, r0.w
					  div r3.x, l(3.500000), r3.x
					  add r3.x, -r3.x, l(1.000000)
					  mad r4.w, r0.z, r3.x, -r4.y
					  sincos null, r4.w, r4.w
					  mad r5.x, r0.z, r3.x, r4.z
					  sincos r5.x, null, r5.x
					  add r5.x, r4.w, r5.x
					  mad r4.w, r0.z, r3.x, -r4.z
					  sincos r4.w, null, r4.w
					  mad r5.z, r0.z, r3.x, r4.y
					  sincos null, r5.z, r5.z
					  add r5.y, r4.w, r5.z
					  add r4.yz, r0.xxyx, r5.xxyx
					  mad r5.xy, r0.zzzz, r3.xxxx, r4.yzyy
					  sincos r3.x, null, r5.x
					  mul r3.x, r3.x, l(200.000000)
					  div r6.x, r0.x, r3.x
					  sincos null, r3.x, r5.y
					  mul r3.x, r3.x, l(200.000000)
					  div r6.y, r0.y, r3.x
					  dp2 r3.x, r6.xyxx, r6.xyxx
					  sqrt r3.x, r3.x
					  div r3.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.x
					  add r4.x, r3.x, r4.x
					endloop 
					round_z r0.x, cb0[6].w
					div r0.x, r4.x, r0.x
					log r0.x, r0.x
					mul r0.x, r0.x, l(1.400000)
					exp r0.x, r0.x
					add r0.x, -r0.x, l(1.170000)
					mul r0.x, |r0.x|, |r0.x|
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r0.x
					mul r0.y, r0.x, cb0[7].x
					ftoi r0.z, cb0[7].y
					mul r4.xy, v3.xyxx, cb0[7].wwww
					div r4.xy, r4.xyxx, cb0[15].zwzz
					mul r4.z, cb0[7].z, cb1[0].x
					mov r0.w, l(0)
					mov r2.w, l(0)
					loop 
					  ige r3.x, r2.w, r0.z
					  breakc_nz r3.x
					  itof r3.x, r2.w
					  exp r3.x, r3.x
					  mul r5.xyz, r4.xyzx, r3.xxxx
					  round_ni r5.xyz, r5.xyzx
					  mad r6.xyz, r3.xxxx, r4.xyzx, -r5.xyzx
					  dp3 r4.w, r5.xyzx, l(7.000000, 157.000000, 113.000000, 0.000000)
					  add r5.xyzw, r4.wwww, l(0.000000, 157.000000, 113.000000, 270.000000)
					  mul r7.xyz, r6.xyzx, r6.xyzx
					  mad r6.xyz, -r6.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
					  mul r6.xyz, r6.xyzx, r7.xyzx
					  sincos r5.xyzw, null, r5.xyzw
					  mul r5.xyzw, r5.xyzw, l(43758.500000, 43758.500000, 43758.500000, 43758.500000)
					  frc r5.xyzw, r5.xyzw
					  add r7.xyzw, r4.wwww, l(7.000000, 164.000000, 120.000000, 277.000000)
					  sincos r7.xyzw, null, r7.xyzw
					  mul r7.xyzw, r7.xyzw, l(43758.500000, 43758.500000, 43758.500000, 43758.500000)
					  frc r7.xyzw, r7.xyzw
					  add r7.xyzw, -r5.xyzw, r7.xyzw
					  mad r5.xyzw, r6.xxxx, r7.xyzw, r5.xyzw
					  add r5.yw, -r5.xxxz, r5.yyyw
					  mad r5.xy, r6.yyyy, r5.ywyy, r5.xzxx
					  add r4.w, -r5.x, r5.y
					  mad r4.w, r6.z, r4.w, r5.x
					  mad r4.w, r4.w, l(2.000000), l(-1.000000)
					  div r3.x, r4.w, r3.x
					  add r0.w, r0.w, r3.x
					  iadd r2.w, r2.w, l(1)
					endloop 
					add r0.z, -r1.w, r1.y
					add r0.z, r2.y, r0.z
					mul r1.x, r1.x, r1.z
					mad_sat r0.z, r1.x, r2.z, r0.z
					add r1.x, -cb0[5].w, |cb0[11].w|
					add r1.z, -cb0[5].w, cb0[6].x
					div_sat r1.x, r1.x, r1.z
					add r1.z, -cb0[5].y, cb0[5].z
					mad r1.x, r1.x, r1.z, cb0[5].y
					add r1.z, -r1.x, cb0[5].x
					max r1.z, r1.z, l(0.000000)
					add r1.x, r1.x, cb0[5].x
					min r1.x, r1.x, l(1.000000)
					add r1.x, -r1.z, r1.x
					add r1.z, r0.z, -r1.z
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r1.x, r1.x, r1.z
					mad r1.z, r1.x, l(-2.000000), l(3.000000)
					mul r1.x, r1.x, r1.x
					mul r1.w, r1.x, r1.z
					mad r0.z, r1.z, r1.x, -r0.z
					add_sat r0.z, -|r1.y|, r0.z
					mad r0.w, cb0[8].x, r0.w, l(1.000000)
					mad r0.w, r0.w, l(-0.250000), l(0.750000)
					mad r0.y, r0.y, l(0.250000), l(0.750000)
					mul r1.xyz, r0.yyyy, cb0[10].xyzx
					mad r0.x, cb0[7].x, r0.x, l(0.500000)
					mad r0.y, -r0.w, r2.x, l(1.000000)
					mul r0.y, r0.y, r1.w
					mad r2.xyz, r3.yzwy, r0.xxxx, -r1.xyzx
					mad r0.xyw, r0.yyyy, r2.xyxz, r1.xyxz
					mad o0.xyz, r1.wwww, r0.xywx, r0.zzzz
					mul o0.w, r1.w, cb0[8].y
					mov o1.xyzw, l(0,0,0,0)
					mov o2.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "ENABLE_HEAT_HAZE" "ENABLE_CAUSTIC" "ENABLE_WAVE" "_SAMPLEFILTERING_BILINEAR" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v3.xy
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_temps 8
					mad r0.xyzw, cb0[15].zwzw, l(0.500000, 0.500000, -0.500000, 0.500000), v3.xyxy
					mad r1.xyzw, cb0[15].zwzw, l(0.500000, -0.500000, -0.500000, -0.500000), v3.xyxy
					sample r2.xyzw, r0.xyxx, t0.xyzw, s0
					sample r3.xyzw, r0.zwzz, t0.xyzw, s0
					sample r4.xyzw, r1.xyxx, t0.xyzw, s0
					sample r5.xyzw, r1.zwzz, t0.xyzw, s0
					div r6.xy, r1.zwzz, cb0[15].zwzz
					frc r6.xy, r6.xyxx
					add r2.xyzw, r2.xyzw, -r3.xyzw
					mad r2.xyzw, r6.xxxx, r2.xyzw, r3.xyzw
					add r3.xyzw, r4.xyzw, -r5.xyzw
					mad r3.xyzw, r6.xxxx, r3.xyzw, r5.xyzw
					add r2.xyzw, r2.xyzw, -r3.xyzw
					mad r2.xyzw, r6.yyyy, r2.wxyz, r3.wxyz
					sample r3.xyzw, r0.xyxx, t1.xyzw, s2
					sample r0.xyzw, r0.zwzz, t1.xyzw, s2
					sample r4.xyzw, r1.xyxx, t1.xyzw, s2
					sample r1.xyzw, r1.zwzz, t1.xyzw, s2
					add r3.xyzw, -r0.xyzw, r3.xyzw
					mad r0.xyzw, r6.xxxx, r3.xyzw, r0.xyzw
					add r3.xyzw, -r1.xyzw, r4.xyzw
					mad r1.xyzw, r6.xxxx, r3.xyzw, r1.xyzw
					add r0.xyzw, r0.xyzw, -r1.xyzw
					mad r0.xyzw, r6.yyyy, r0.wxyz, r1.wxyz
					add r1.x, r0.z, l(-0.000010)
					lt r1.x, r1.x, l(0.000000)
					discard_nz r1.x
					sample r1.xyzw, v3.xyxx, t2.xyzw, s1
					log r1.x, r1.z
					mul r1.x, r1.x, l(2.200000)
					exp r1.x, r1.x
					mov_sat r2.x, r2.x
					log r1.y, r2.x
					mul r1.y, r1.y, l(2.200000)
					exp r1.y, r1.y
					mov_sat r0.x, r0.x
					ftoi r1.z, cb0[9].x
					div r3.xyzw, v3.xyxy, cb0[15].zwzw
					mul r4.xyzw, r3.zwzw, cb0[8].wwww
					mul r4.xyzw, r4.xyzw, l(0.314159, 0.314159, 1.973921, 1.973921)
					ge r5.xyzw, r4.zwzw, -r4.zwzw
					movc r5.xyzw, r5.xyzw, l(6.283185,6.283185,0.159155,0.159155), l(-6.283185,-6.283185,-0.159155,-0.159155)
					mul r4.xy, r4.xyxx, r5.zwzz
					frc r4.xy, r4.xyxx
					mad r4.xy, r5.xyxx, r4.xyxx, l(-250.000000, -250.000000, 0.000000, 0.000000)
					mul r1.w, cb0[8].z, cb1[0].x
					mov r5.x, l(1.000000)
					mov r5.yz, r4.xxyx
					mov r2.x, l(0)
					loop 
					  ige r4.z, r2.x, r1.z
					  breakc_nz r4.z
					  iadd r2.x, r2.x, l(1)
					  itof r4.z, r2.x
					  div r4.z, l(3.500000), r4.z
					  add r4.z, -r4.z, l(1.000000)
					  mad r4.w, r1.w, r4.z, -r5.y
					  sincos null, r4.w, r4.w
					  mad r5.w, r1.w, r4.z, r5.z
					  sincos r5.w, null, r5.w
					  add r6.x, r4.w, r5.w
					  mad r4.w, r1.w, r4.z, -r5.z
					  sincos r4.w, null, r4.w
					  mad r5.w, r1.w, r4.z, r5.y
					  sincos null, r5.w, r5.w
					  add r6.y, r4.w, r5.w
					  add r5.yz, r4.xxyx, r6.xxyx
					  mad r4.zw, r1.wwww, r4.zzzz, r5.yyyz
					  sincos r4.z, null, r4.z
					  mul r4.z, r4.z, l(200.000000)
					  div r6.x, r4.x, r4.z
					  sincos null, r4.z, r4.w
					  mul r4.z, r4.z, l(200.000000)
					  div r6.y, r4.y, r4.z
					  dp2 r4.z, r6.xyxx, r6.xyxx
					  sqrt r4.z, r4.z
					  div r4.z, l(1.000000, 1.000000, 1.000000, 1.000000), r4.z
					  add r5.x, r4.z, r5.x
					endloop 
					round_z r1.z, cb0[9].x
					div r1.z, r5.x, r1.z
					log r1.z, r1.z
					mul r1.z, r1.z, l(1.400000)
					exp r1.z, r1.z
					add r1.z, -r1.z, l(1.170000)
					mul r1.z, |r1.z|, |r1.z|
					mul r1.z, r1.z, r1.z
					mul r1.z, r1.z, r1.z
					mul r1.z, r1.z, cb0[9].y
					ftoi r1.w, cb0[6].w
					mul r3.xyzw, r3.xyzw, cb0[6].zzzz
					mul r3.xyzw, r3.xyzw, l(0.314159, 0.314159, 1.973921, 1.973921)
					ge r4.xyzw, r3.zwzw, -r3.zwzw
					movc r4.xyzw, r4.xyzw, l(6.283185,6.283185,0.159155,0.159155), l(-6.283185,-6.283185,-0.159155,-0.159155)
					mul r3.xy, r3.xyxx, r4.zwzz
					frc r3.xy, r3.xyxx
					mad r3.xy, r4.xyxx, r3.xyxx, l(-250.000000, -250.000000, 0.000000, 0.000000)
					mul r2.x, cb0[6].y, cb1[0].x
					mov r4.x, l(1.000000)
					mov r4.yz, r3.xxyx
					mov r3.z, l(0)
					loop 
					  ige r3.w, r3.z, r1.w
					  breakc_nz r3.w
					  iadd r3.z, r3.z, l(1)
					  itof r3.w, r3.z
					  div r3.w, l(3.500000), r3.w
					  add r3.w, -r3.w, l(1.000000)
					  mad r4.w, r2.x, r3.w, -r4.y
					  sincos null, r4.w, r4.w
					  mad r5.x, r2.x, r3.w, r4.z
					  sincos r5.x, null, r5.x
					  add r5.x, r4.w, r5.x
					  mad r4.w, r2.x, r3.w, -r4.z
					  sincos r4.w, null, r4.w
					  mad r5.z, r2.x, r3.w, r4.y
					  sincos null, r5.z, r5.z
					  add r5.y, r4.w, r5.z
					  add r4.yz, r3.xxyx, r5.xxyx
					  mad r5.xy, r2.xxxx, r3.wwww, r4.yzyy
					  sincos r3.w, null, r5.x
					  mul r3.w, r3.w, l(200.000000)
					  div r6.x, r3.x, r3.w
					  sincos null, r3.w, r5.y
					  mul r3.w, r3.w, l(200.000000)
					  div r6.y, r3.y, r3.w
					  dp2 r3.w, r6.xyxx, r6.xyxx
					  sqrt r3.w, r3.w
					  div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
					  add r4.x, r3.w, r4.x
					endloop 
					round_z r1.w, cb0[6].w
					div r1.w, r4.x, r1.w
					log r1.w, r1.w
					mul r1.w, r1.w, l(1.400000)
					exp r1.w, r1.w
					add r1.w, -r1.w, l(1.170000)
					mul r1.w, |r1.w|, |r1.w|
					mul r1.w, r1.w, r1.w
					mul r1.w, r1.w, r1.w
					mul r2.x, r1.w, cb0[7].x
					ftoi r3.x, cb0[7].y
					mul r3.yz, v3.xxyx, cb0[7].wwww
					div r4.xy, r3.yzyy, cb0[15].zwzz
					mul r4.z, cb0[7].z, cb1[0].x
					mov r3.yz, l(0,0,0,0)
					loop 
					  ige r3.w, r3.z, r3.x
					  breakc_nz r3.w
					  itof r3.w, r3.z
					  exp r3.w, r3.w
					  mul r5.xyz, r4.xyzx, r3.wwww
					  round_ni r5.xyz, r5.xyzx
					  mad r6.xyz, r3.wwww, r4.xyzx, -r5.xyzx
					  dp3 r4.w, r5.xyzx, l(7.000000, 157.000000, 113.000000, 0.000000)
					  add r5.xyzw, r4.wwww, l(0.000000, 157.000000, 113.000000, 270.000000)
					  mul r7.xyz, r6.xyzx, r6.xyzx
					  mad r6.xyz, -r6.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
					  mul r6.xyz, r6.xyzx, r7.xyzx
					  sincos r5.xyzw, null, r5.xyzw
					  mul r5.xyzw, r5.xyzw, l(43758.500000, 43758.500000, 43758.500000, 43758.500000)
					  frc r5.xyzw, r5.xyzw
					  add r7.xyzw, r4.wwww, l(7.000000, 164.000000, 120.000000, 277.000000)
					  sincos r7.xyzw, null, r7.xyzw
					  mul r7.xyzw, r7.xyzw, l(43758.500000, 43758.500000, 43758.500000, 43758.500000)
					  frc r7.xyzw, r7.xyzw
					  add r7.xyzw, -r5.xyzw, r7.xyzw
					  mad r5.xyzw, r6.xxxx, r7.xyzw, r5.xyzw
					  add r5.yw, -r5.xxxz, r5.yyyw
					  mad r5.xy, r6.yyyy, r5.ywyy, r5.xzxx
					  add r4.w, -r5.x, r5.y
					  mad r4.w, r6.z, r4.w, r5.x
					  mad r4.w, r4.w, l(2.000000), l(-1.000000)
					  div r3.w, r4.w, r3.w
					  add r3.y, r3.w, r3.y
					  iadd r3.z, r3.z, l(1)
					endloop 
					add r0.w, -r0.w, r0.y
					add r0.w, r1.y, r0.w
					mul r0.x, r0.x, r0.z
					mad_sat r0.x, r0.x, r1.z, r0.w
					add r0.z, -cb0[5].w, |cb0[11].w|
					add r0.w, -cb0[5].w, cb0[6].x
					div_sat r0.z, r0.z, r0.w
					add r0.w, -cb0[5].y, cb0[5].z
					mad r0.z, r0.z, r0.w, cb0[5].y
					add r0.w, -r0.z, cb0[5].x
					max r0.w, r0.w, l(0.000000)
					add r0.z, r0.z, cb0[5].x
					min r0.z, r0.z, l(1.000000)
					add r0.z, -r0.w, r0.z
					add r0.w, -r0.w, r0.x
					div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
					mul_sat r0.z, r0.z, r0.w
					mad r0.w, r0.z, l(-2.000000), l(3.000000)
					mul r0.z, r0.z, r0.z
					mul r1.y, r0.z, r0.w
					mad r0.x, r0.w, r0.z, -r0.x
					add_sat r0.x, -|r0.y|, r0.x
					mad r0.y, cb0[8].x, r3.y, l(1.000000)
					mad r0.y, r0.y, l(-0.250000), l(0.750000)
					mad r0.z, r2.x, l(0.250000), l(0.750000)
					mul r3.xyz, r0.zzzz, cb0[10].xyzx
					mad r0.z, cb0[7].x, r1.w, l(0.500000)
					mad r0.y, -r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r1.y
					mad r1.xzw, r2.yyzw, r0.zzzz, -r3.xxyz
					mad r0.yzw, r0.yyyy, r1.xxzw, r3.xxyz
					mad o0.xyz, r1.yyyy, r0.yzwy, r0.xxxx
					mul o0.w, r1.y, cb0[8].y
					mov o1.xyzw, l(0,0,0,0)
					mov o2.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "ENABLE_HEAT_HAZE" "ENABLE_CAUSTIC" "ENABLE_WAVE" "_SAMPLEFILTERING_NONE" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v3.xy
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_temps 8
					sample r0.xyzw, v3.xyxx, t0.wxyz, s0
					sample r1.xyzw, v3.xyxx, t1.wxyz, s2
					add r2.x, r1.z, l(-0.000010)
					lt r2.x, r2.x, l(0.000000)
					discard_nz r2.x
					sample r2.xyzw, v3.xyxx, t2.xyzw, s1
					log r2.x, r2.z
					mul r2.x, r2.x, l(2.200000)
					exp r2.x, r2.x
					mov_sat r0.x, r0.x
					log r0.x, r0.x
					mul r0.x, r0.x, l(2.200000)
					exp r0.x, r0.x
					mov_sat r1.x, r1.x
					ftoi r2.y, cb0[9].x
					div r3.xyzw, v3.xyxy, cb0[15].zwzw
					mul r4.xyzw, r3.zwzw, cb0[8].wwww
					mul r4.xyzw, r4.xyzw, l(0.314159, 0.314159, 1.973921, 1.973921)
					ge r5.xyzw, r4.zwzw, -r4.zwzw
					movc r5.xyzw, r5.xyzw, l(6.283185,6.283185,0.159155,0.159155), l(-6.283185,-6.283185,-0.159155,-0.159155)
					mul r2.zw, r4.xxxy, r5.zzzw
					frc r2.zw, r2.zzzw
					mad r2.zw, r5.xxxy, r2.zzzw, l(0.000000, 0.000000, -250.000000, -250.000000)
					mul r4.x, cb0[8].z, cb1[0].x
					mov r4.y, l(1.000000)
					mov r4.zw, r2.zzzw
					mov r5.x, l(0)
					loop 
					  ige r5.y, r5.x, r2.y
					  breakc_nz r5.y
					  iadd r5.x, r5.x, l(1)
					  itof r5.y, r5.x
					  div r5.y, l(3.500000), r5.y
					  add r5.y, -r5.y, l(1.000000)
					  mad r5.z, r4.x, r5.y, -r4.z
					  sincos null, r5.z, r5.z
					  mad r5.w, r4.x, r5.y, r4.w
					  sincos r5.w, null, r5.w
					  add r6.x, r5.w, r5.z
					  mad r5.z, r4.x, r5.y, -r4.w
					  sincos r5.z, null, r5.z
					  mad r5.w, r4.x, r5.y, r4.z
					  sincos null, r5.w, r5.w
					  add r6.y, r5.w, r5.z
					  add r4.zw, r2.zzzw, r6.xxxy
					  mad r5.yz, r4.xxxx, r5.yyyy, r4.zzwz
					  sincos r5.y, null, r5.y
					  mul r5.y, r5.y, l(200.000000)
					  div r6.x, r2.z, r5.y
					  sincos null, r5.y, r5.z
					  mul r5.y, r5.y, l(200.000000)
					  div r6.y, r2.w, r5.y
					  dp2 r5.y, r6.xyxx, r6.xyxx
					  sqrt r5.y, r5.y
					  div r5.y, l(1.000000, 1.000000, 1.000000, 1.000000), r5.y
					  add r4.y, r4.y, r5.y
					endloop 
					round_z r2.y, cb0[9].x
					div r2.y, r4.y, r2.y
					log r2.y, r2.y
					mul r2.y, r2.y, l(1.400000)
					exp r2.y, r2.y
					add r2.y, -r2.y, l(1.170000)
					mul r2.y, |r2.y|, |r2.y|
					mul r2.y, r2.y, r2.y
					mul r2.y, r2.y, r2.y
					mul r2.y, r2.y, cb0[9].y
					ftoi r2.z, cb0[6].w
					mul r3.xyzw, r3.xyzw, cb0[6].zzzz
					mul r3.xyzw, r3.xyzw, l(0.314159, 0.314159, 1.973921, 1.973921)
					ge r4.xyzw, r3.zwzw, -r3.zwzw
					movc r4.xyzw, r4.xyzw, l(6.283185,6.283185,0.159155,0.159155), l(-6.283185,-6.283185,-0.159155,-0.159155)
					mul r3.xy, r3.xyxx, r4.zwzz
					frc r3.xy, r3.xyxx
					mad r3.xy, r4.xyxx, r3.xyxx, l(-250.000000, -250.000000, 0.000000, 0.000000)
					mul r2.w, cb0[6].y, cb1[0].x
					mov r4.x, l(1.000000)
					mov r4.yz, r3.xxyx
					mov r3.z, l(0)
					loop 
					  ige r3.w, r3.z, r2.z
					  breakc_nz r3.w
					  iadd r3.z, r3.z, l(1)
					  itof r3.w, r3.z
					  div r3.w, l(3.500000), r3.w
					  add r3.w, -r3.w, l(1.000000)
					  mad r4.w, r2.w, r3.w, -r4.y
					  sincos null, r4.w, r4.w
					  mad r5.x, r2.w, r3.w, r4.z
					  sincos r5.x, null, r5.x
					  add r5.x, r4.w, r5.x
					  mad r4.w, r2.w, r3.w, -r4.z
					  sincos r4.w, null, r4.w
					  mad r5.z, r2.w, r3.w, r4.y
					  sincos null, r5.z, r5.z
					  add r5.y, r4.w, r5.z
					  add r4.yz, r3.xxyx, r5.xxyx
					  mad r5.xy, r2.wwww, r3.wwww, r4.yzyy
					  sincos r3.w, null, r5.x
					  mul r3.w, r3.w, l(200.000000)
					  div r6.x, r3.x, r3.w
					  sincos null, r3.w, r5.y
					  mul r3.w, r3.w, l(200.000000)
					  div r6.y, r3.y, r3.w
					  dp2 r3.w, r6.xyxx, r6.xyxx
					  sqrt r3.w, r3.w
					  div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
					  add r4.x, r3.w, r4.x
					endloop 
					round_z r2.z, cb0[6].w
					div r2.z, r4.x, r2.z
					log r2.z, r2.z
					mul r2.z, r2.z, l(1.400000)
					exp r2.z, r2.z
					add r2.z, -r2.z, l(1.170000)
					mul r2.z, |r2.z|, |r2.z|
					mul r2.z, r2.z, r2.z
					mul r2.z, r2.z, r2.z
					mul r2.w, r2.z, cb0[7].x
					ftoi r3.x, cb0[7].y
					mul r3.yz, v3.xxyx, cb0[7].wwww
					div r4.xy, r3.yzyy, cb0[15].zwzz
					mul r4.z, cb0[7].z, cb1[0].x
					mov r3.yz, l(0,0,0,0)
					loop 
					  ige r3.w, r3.z, r3.x
					  breakc_nz r3.w
					  itof r3.w, r3.z
					  exp r3.w, r3.w
					  mul r5.xyz, r4.xyzx, r3.wwww
					  round_ni r5.xyz, r5.xyzx
					  mad r6.xyz, r3.wwww, r4.xyzx, -r5.xyzx
					  dp3 r4.w, r5.xyzx, l(7.000000, 157.000000, 113.000000, 0.000000)
					  add r5.xyzw, r4.wwww, l(0.000000, 157.000000, 113.000000, 270.000000)
					  mul r7.xyz, r6.xyzx, r6.xyzx
					  mad r6.xyz, -r6.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
					  mul r6.xyz, r6.xyzx, r7.xyzx
					  sincos r5.xyzw, null, r5.xyzw
					  mul r5.xyzw, r5.xyzw, l(43758.500000, 43758.500000, 43758.500000, 43758.500000)
					  frc r5.xyzw, r5.xyzw
					  add r7.xyzw, r4.wwww, l(7.000000, 164.000000, 120.000000, 277.000000)
					  sincos r7.xyzw, null, r7.xyzw
					  mul r7.xyzw, r7.xyzw, l(43758.500000, 43758.500000, 43758.500000, 43758.500000)
					  frc r7.xyzw, r7.xyzw
					  add r7.xyzw, -r5.xyzw, r7.xyzw
					  mad r5.xyzw, r6.xxxx, r7.xyzw, r5.xyzw
					  add r5.yw, -r5.xxxz, r5.yyyw
					  mad r5.xy, r6.yyyy, r5.ywyy, r5.xzxx
					  add r4.w, -r5.x, r5.y
					  mad r4.w, r6.z, r4.w, r5.x
					  mad r4.w, r4.w, l(2.000000), l(-1.000000)
					  div r3.w, r4.w, r3.w
					  add r3.y, r3.w, r3.y
					  iadd r3.z, r3.z, l(1)
					endloop 
					add r1.w, -r1.w, r1.y
					add r0.x, r0.x, r1.w
					mul r1.x, r1.x, r1.z
					mad_sat r0.x, r1.x, r2.y, r0.x
					add r1.x, -cb0[5].w, |cb0[11].w|
					add r1.z, -cb0[5].w, cb0[6].x
					div_sat r1.x, r1.x, r1.z
					add r1.z, -cb0[5].y, cb0[5].z
					mad r1.x, r1.x, r1.z, cb0[5].y
					add r1.z, -r1.x, cb0[5].x
					max r1.z, r1.z, l(0.000000)
					add r1.x, r1.x, cb0[5].x
					min r1.x, r1.x, l(1.000000)
					add r1.x, -r1.z, r1.x
					add r1.z, r0.x, -r1.z
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r1.x, r1.x, r1.z
					mad r1.z, r1.x, l(-2.000000), l(3.000000)
					mul r1.x, r1.x, r1.x
					mul r1.w, r1.x, r1.z
					mad r0.x, r1.z, r1.x, -r0.x
					add_sat r0.x, -|r1.y|, r0.x
					mad r1.x, cb0[8].x, r3.y, l(1.000000)
					mad r1.x, r1.x, l(-0.250000), l(0.750000)
					mad r1.y, r2.w, l(0.250000), l(0.750000)
					mul r3.xyz, r1.yyyy, cb0[10].xyzx
					mad r1.y, cb0[7].x, r2.z, l(0.500000)
					mad r1.x, -r1.x, r2.x, l(1.000000)
					mul r1.x, r1.x, r1.w
					mad r0.yzw, r0.yyzw, r1.yyyy, -r3.xxyz
					mad r0.yzw, r1.xxxx, r0.yyzw, r3.xxyz
					mad o0.xyz, r1.wwww, r0.yzwy, r0.xxxx
					mul o0.w, r1.w, cb0[8].y
					mov o1.xyzw, l(0,0,0,0)
					mov o2.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
}