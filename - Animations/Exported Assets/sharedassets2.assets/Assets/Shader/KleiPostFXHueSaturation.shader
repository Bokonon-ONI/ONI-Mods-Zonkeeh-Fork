Shader "Klei/PostFX/HueSaturation" {
	Properties {
		_MainTex ("Base (RGB)", 2D) = "white" {}
		_Hue ("Hue", Float) = 0
		_Saturation ("Saturation", Float) = 1
	}
	SubShader {
		Pass {
			GpuProgramID 53697
			Program "vp" {
				SubProgram "d3d11 " {
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb0[3].xyzw
					mul r1.xyzw, r0.yyyy, cb1[18].xyzw
					mad r1.xyzw, cb1[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb1[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb1[20].xyzw, r0.wwww, r1.xyzw
					mov o1.xy, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 5
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					min r1.x, r0.y, r0.x
					min r1.x, r0.z, r1.x
					max r1.y, r0.y, r0.x
					max r1.y, r0.z, r1.y
					add r1.z, -r1.x, r1.y
					add r1.w, r1.x, r1.y
					mul r2.xyz, r1.wwww, l(0.500000, 0.500000, 0.500000, 0.000000)
					eq r2.w, r1.z, l(0.000000)
					if_nz r2.w
					  mov r2.w, l(0)
					  mov r3.x, l(0)
					else 
					  lt r3.y, r1.w, l(1.000000)
					  div r3.z, r1.z, r1.w
					  add r1.x, -r1.y, -r1.x
					  add r1.x, r1.x, l(2.000000)
					  div r1.x, r1.z, r1.x
					  movc r3.x, r3.y, r3.z, r1.x
					  add r3.yzw, -r0.yyzx, r1.yyyy
					  mul r1.x, r1.z, l(0.500000)
					  mad r3.yzw, r3.yyzw, l(0.000000, 0.166667, 0.166667, 0.166667), r1.xxxx
					  div r3.yzw, r3.yyzw, r1.zzzz
					  add r1.x, -r3.y, r3.z
					  eq r1.yz, r0.xxyx, r1.yyyy
					  add r4.xy, r3.wyww, l(0.333333, 0.666667, 0.000000, 0.000000)
					  add r3.yz, -r3.zzwz, r4.xxyx
					  movc r1.z, r1.z, r3.y, r3.z
					  movc r1.x, r1.y, r1.x, r1.z
					  lt r1.y, r1.x, l(0.000000)
					  lt r1.z, l(1.000000), r1.x
					  add r3.yz, r1.xxxx, l(0.000000, 1.000000, -1.000000, 0.000000)
					  movc r1.x, r1.z, r3.z, r1.x
					  movc r2.w, r1.y, r3.y, r1.x
					endif 
					mul r1.x, r3.x, cb0[6].y
					eq r1.y, r1.x, l(0.000000)
					if_nz r1.y
					  mov r0.xyz, r2.xyzx
					else 
					  add r1.y, r2.w, cb0[6].x
					  lt r1.z, r1.w, l(1.000000)
					  mad r2.x, r3.x, cb0[6].y, l(1.000000)
					  mul r2.x, r2.x, r2.z
					  mad r2.y, r1.w, l(0.500000), r1.x
					  mad r1.x, -r1.x, r2.z, r2.y
					  movc r1.x, r1.z, r2.x, r1.x
					  add r1.z, -r1.x, r1.w
					  add r2.xyzw, r1.yyyy, l(0.333333, 1.333333, -0.666667, 1.000000)
					  lt r1.w, r2.x, l(0.000000)
					  lt r3.x, l(1.000000), r2.x
					  movc r2.x, r3.x, r2.z, r2.x
					  movc r1.w, r1.w, r2.y, r2.x
					  add r2.x, -r1.z, r1.x
					  mul r2.y, r2.x, l(6.000000)
					  mad r2.z, r2.y, r1.w, r1.z
					  lt r3.xyz, r1.wwww, l(0.166667, 0.500000, 0.666667, 0.000000)
					  add r1.w, -r1.w, l(0.666667)
					  mul r1.w, r1.w, r2.x
					  mad r1.w, r1.w, l(6.000000), r1.z
					  movc r1.w, r3.z, r1.w, r1.z
					  movc r1.w, r3.y, r1.x, r1.w
					  movc r0.x, r3.x, r2.z, r1.w
					  lt r1.w, r1.y, l(0.000000)
					  lt r2.z, l(1.000000), r1.y
					  add r3.xyzw, r1.yyyy, l(-1.000000, -0.333333, 0.666667, -1.333333)
					  movc r1.y, r2.z, r3.x, r1.y
					  movc r1.y, r1.w, r2.w, r1.y
					  mad r1.w, r2.y, r1.y, r1.z
					  lt r4.xyz, r1.yyyy, l(0.166667, 0.500000, 0.666667, 0.000000)
					  add r1.y, -r1.y, l(0.666667)
					  mul r1.y, r1.y, r2.x
					  mad r1.y, r1.y, l(6.000000), r1.z
					  movc r1.y, r4.z, r1.y, r1.z
					  movc r1.y, r4.y, r1.x, r1.y
					  movc r0.y, r4.x, r1.w, r1.y
					  lt r1.y, r3.y, l(0.000000)
					  lt r1.w, l(1.000000), r3.y
					  movc r1.w, r1.w, r3.w, r3.y
					  movc r1.y, r1.y, r3.z, r1.w
					  mad r1.w, r2.y, r1.y, r1.z
					  lt r2.yzw, r1.yyyy, l(0.000000, 0.166667, 0.500000, 0.666667)
					  add r1.y, -r1.y, l(0.666667)
					  mul r1.y, r1.y, r2.x
					  mad r1.y, r1.y, l(6.000000), r1.z
					  movc r1.y, r2.w, r1.y, r1.z
					  movc r1.x, r2.z, r1.x, r1.y
					  movc r0.z, r2.y, r1.w, r1.x
					endif 
					mov o0.xyzw, r0.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
}