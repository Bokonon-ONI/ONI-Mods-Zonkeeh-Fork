Shader "Klei/PostFX/LightBufferShadowed" {
	Properties {
		_PropertyWorldLight ("WorldLight", 2D) = "white" {}
	}
	SubShader {
		Pass {
			Blend One One, One One
			BlendOp Add, Max
			ZTest Always
			ZWrite Off
			GpuProgramID 45416
			Program "vp" {
				SubProgram "d3d11 " {
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyz         0     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 1   xy          1     NONE   float   xy  
					// TEXCOORD                 2     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mad r0.xy, v0.xyxx, cb0[0].wwww, cb0[1].xyxx
					mul r1.xyzw, r0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
					mad r0.xyzw, cb1[2].xyzw, l(-4.000000, -4.000000, -4.000000, -4.000000), r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mul o1.zw, r0.xxxy, cb0[7].zzzw
					mov o1.xy, r0.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float       
					// TEXCOORD                 1   xy          1     NONE   float   xy  
					// TEXCOORD                 2     zw        1     NONE   float     zw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v1.zw
					dcl_output o0.xyzw
					dcl_temps 2
					add r0.xy, v1.xyxx, -cb0[1].xyxx
					dp2 r0.z, r0.xyxx, r0.xyxx
					sqrt r0.z, r0.z
					div r0.xy, r0.xyxx, r0.zzzz
					div r0.z, r0.z, cb0[0].w
					add r0.z, -r0.z, l(1.000000)
					dp2 r0.x, r0.xyxx, cb0[2].xyxx
					mad r0.y, |r0.x|, l(-0.018729), l(0.074261)
					mad r0.y, r0.y, |r0.x|, l(-0.212114)
					mad r0.y, r0.y, |r0.x|, l(1.570729)
					add r0.w, -|r0.x|, l(1.000000)
					lt r0.x, r0.x, -r0.x
					sqrt r0.w, r0.w
					mul r1.x, r0.w, r0.y
					mad r1.x, r1.x, l(-2.000000), l(3.141593)
					and r0.x, r0.x, r1.x
					mad r0.x, r0.y, r0.w, r0.x
					mul r0.y, cb0[2].w, l(0.500000)
					div_sat r0.x, r0.x, r0.y
					add r0.x, -r0.x, l(1.000000)
					log r0.x, r0.x
					mul r0.x, r0.x, l(0.700000)
					exp r0.x, r0.x
					mul r0.x, r0.x, r0.z
					lt r0.y, l(0.000000), cb0[2].w
					movc r0.x, r0.y, r0.x, r0.z
					sample r1.xyzw, v1.zwzz, t0.xyzw, s0
					mul r0.x, r0.x, r1.w
					lt r0.y, r0.x, l(0.000000)
					mul o0.xyz, r0.xxxx, cb0[0].xyzx
					discard_nz r0.y
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
}